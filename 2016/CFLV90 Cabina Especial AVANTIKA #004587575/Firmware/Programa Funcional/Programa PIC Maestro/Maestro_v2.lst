CCS PCH C Compiler, Version 4.104, 5967               18-oct.-17 14:24

               Filename: H:\JP\JP\Laboratorio\Cabina de Flujo Laminar Vertical\2016\CFLV90 Cabina Especial AVANTIKA #004587575\Firmware\Programa Funcional\Programa PIC Maestro\Maestro_v2.lst

               ROM used: 30154 bytes (92%)
                         Largest free fragment is 2610
               RAM used: 1584 (77%) at main() level
                         1640 (80%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   31EA
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   10EE
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Comunicación USB para control de fermentador. 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Fermentador de 7 Litros 
.................... // Tiene Control: pH,Oxigeno Disuelto, CO2, Temperatura, Agitación y Foam. 
.................... // Tiene Control de cuatro bombas peristalticas: Acido, Base, Foam y Medio. 
.................... // Interfaz de control realizada en PC touch todo en uno Lenovo. 
.................... // Desarrollo de la interfaz en Java NetBeans. 
.................... // Ing. Juan David Piñeros Espinosa. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2015 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HSPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
1ED8:  MOVLW  06
1EDA:  MOVWF  FEA
1EDC:  MOVLW  2D
1EDE:  MOVWF  FE9
1EE0:  MOVF   FEF,W
1EE2:  BZ    1F00
1EE4:  MOVLW  0F
1EE6:  MOVWF  01
1EE8:  CLRF   00
1EEA:  DECFSZ 00,F
1EEC:  BRA    1EEA
1EEE:  DECFSZ 01,F
1EF0:  BRA    1EE8
1EF2:  MOVLW  8F
1EF4:  MOVWF  00
1EF6:  DECFSZ 00,F
1EF8:  BRA    1EF6
1EFA:  NOP   
1EFC:  DECFSZ FEF,F
1EFE:  BRA    1EE4
1F00:  RETLW  00
.................... #use i2c(Master,fast,sda=PIN_B0,scl=PIN_B1) 
*
1860:  MOVLW  08
1862:  MOVWF  01
1864:  MOVLW  02
1866:  MOVWF  00
1868:  DECFSZ 00,F
186A:  BRA    1868
186C:  BCF    F8A.1
186E:  BCF    F93.1
1870:  MOVLW  02
1872:  MOVWF  00
1874:  DECFSZ 00,F
1876:  BRA    1874
1878:  MOVLB  6
187A:  RLCF   x30,F
187C:  BCF    F8A.0
187E:  BTFSC  FD8.0
1880:  BSF    F93.0
1882:  BTFSS  FD8.0
1884:  BCF    F93.0
1886:  BSF    F93.1
1888:  BTFSS  F81.1
188A:  BRA    1888
188C:  DECFSZ 01,F
188E:  BRA    1892
1890:  BRA    1896
1892:  MOVLB  0
1894:  BRA    1864
1896:  MOVLW  02
1898:  MOVWF  00
189A:  DECFSZ 00,F
189C:  BRA    189A
189E:  BCF    F8A.1
18A0:  BCF    F93.1
18A2:  NOP   
18A4:  BSF    F93.0
18A6:  MOVLW  02
18A8:  MOVWF  00
18AA:  DECFSZ 00,F
18AC:  BRA    18AA
18AE:  MOVLW  02
18B0:  MOVWF  00
18B2:  DECFSZ 00,F
18B4:  BRA    18B2
18B6:  BSF    F93.1
18B8:  BTFSS  F81.1
18BA:  BRA    18B8
18BC:  CLRF   01
18BE:  MOVLW  02
18C0:  MOVWF  00
18C2:  DECFSZ 00,F
18C4:  BRA    18C2
18C6:  BTFSC  F81.0
18C8:  BSF    01.0
18CA:  BCF    F8A.1
18CC:  BCF    F93.1
18CE:  BCF    F8A.0
18D0:  BCF    F93.0
18D2:  MOVLB  0
18D4:  RETLW  00
*
22D6:  MOVLW  08
22D8:  MOVLB  6
22DA:  MOVWF  x30
22DC:  MOVFF  00,631
22E0:  BSF    F93.0
22E2:  MOVLW  02
22E4:  MOVWF  00
22E6:  DECFSZ 00,F
22E8:  BRA    22E6
22EA:  BSF    F93.1
22EC:  BTFSS  F81.1
22EE:  BRA    22EC
22F0:  BTFSC  F81.0
22F2:  BSF    FD8.0
22F4:  BTFSS  F81.0
22F6:  BCF    FD8.0
22F8:  RLCF   01,F
22FA:  MOVLW  02
22FC:  MOVWF  00
22FE:  DECFSZ 00,F
2300:  BRA    22FE
2302:  BCF    F93.1
2304:  BCF    F8A.1
2306:  DECFSZ x30,F
2308:  BRA    22E0
230A:  BSF    F93.0
230C:  MOVLW  02
230E:  MOVWF  00
2310:  DECFSZ 00,F
2312:  BRA    2310
2314:  BCF    F8A.0
2316:  MOVF   x31,W
2318:  BTFSS  FD8.2
231A:  BCF    F93.0
231C:  NOP   
231E:  BSF    F93.1
2320:  BTFSS  F81.1
2322:  BRA    2320
2324:  MOVLW  02
2326:  MOVWF  00
2328:  DECFSZ 00,F
232A:  BRA    2328
232C:  BCF    F8A.1
232E:  BCF    F93.1
2330:  MOVLW  02
2332:  MOVWF  00
2334:  DECFSZ 00,F
2336:  BRA    2334
2338:  BCF    F8A.0
233A:  BCF    F93.0
233C:  MOVLB  0
233E:  GOTO   2A46 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
312A:  BCF    F93.2
312C:  BSF    F8A.2
....................    output_low(GLCD_E); 
312E:  BCF    F93.7
3130:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
3132:  BCF    F93.3
3134:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
3136:  BCF    F93.4
3138:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
313A:  BCF    F93.5
313C:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
313E:  MOVLB  6
3140:  CLRF   x34
3142:  MOVLW  C0
3144:  MOVWF  x35
3146:  MOVLB  0
3148:  CALL   196C
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
314C:  MOVLW  01
314E:  MOVLB  6
3150:  MOVWF  x34
3152:  MOVLW  C0
3154:  MOVWF  x35
3156:  MOVLB  0
3158:  CALL   196C
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
315C:  MOVLB  6
315E:  CLRF   x34
3160:  MOVLW  40
3162:  MOVWF  x35
3164:  MOVLB  0
3166:  CALL   196C
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
316A:  MOVLW  01
316C:  MOVLB  6
316E:  MOVWF  x34
3170:  MOVLW  40
3172:  MOVWF  x35
3174:  MOVLB  0
3176:  CALL   196C
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
317A:  MOVLB  6
317C:  CLRF   x34
317E:  MOVLW  B8
3180:  MOVWF  x35
3182:  MOVLB  0
3184:  CALL   196C
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
3188:  MOVLW  01
318A:  MOVLB  6
318C:  MOVWF  x34
318E:  MOVLW  B8
3190:  MOVWF  x35
3192:  MOVLB  0
3194:  CALL   196C
....................  
....................    if(mode == ON) 
3198:  MOVLB  6
319A:  DECFSZ x2C,W
319C:  BRA    31BE
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
319E:  CLRF   x34
31A0:  MOVLW  3F
31A2:  MOVWF  x35
31A4:  MOVLB  0
31A6:  CALL   196C
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
31AA:  MOVLW  01
31AC:  MOVLB  6
31AE:  MOVWF  x34
31B0:  MOVLW  3F
31B2:  MOVWF  x35
31B4:  MOVLB  0
31B6:  CALL   196C
....................    } 
....................    else 
31BA:  BRA    31DA
31BC:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
31BE:  CLRF   x34
31C0:  MOVLW  3E
31C2:  MOVWF  x35
31C4:  MOVLB  0
31C6:  CALL   196C
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
31CA:  MOVLW  01
31CC:  MOVLB  6
31CE:  MOVWF  x34
31D0:  MOVLW  3E
31D2:  MOVWF  x35
31D4:  MOVLB  0
31D6:  CALL   196C
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
31DA:  MOVLB  6
31DC:  CLRF   x2D
31DE:  MOVLB  0
31E0:  CALL   20E2
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
31E4:  CALL   19AC
....................    #endif 
.................... } 
31E8:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
19AC:  MOVLB  6
19AE:  CLRF   x30
19B0:  MOVLW  16
19B2:  MOVWF  x2F
....................    p2 = displayData.right; 
19B4:  MOVLW  02
19B6:  MOVWF  x32
19B8:  MOVLW  16
19BA:  MOVWF  x31
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
19BC:  CLRF   x2D
19BE:  MOVF   x2D,W
19C0:  SUBLW  07
19C2:  BNC   1A60
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
19C4:  BCF    F93.5
19C6:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
19C8:  CLRF   x34
19CA:  MOVLW  40
19CC:  MOVWF  x35
19CE:  MOVLB  0
19D0:  RCALL  196C
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
19D2:  MOVLW  01
19D4:  MOVLB  6
19D6:  MOVWF  x34
19D8:  MOVLW  40
19DA:  MOVWF  x35
19DC:  MOVLB  0
19DE:  RCALL  196C
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
19E0:  MOVLB  6
19E2:  MOVF   x2D,W
19E4:  IORLW  B8
19E6:  MOVWF  x33
19E8:  CLRF   x34
19EA:  MOVWF  x35
19EC:  MOVLB  0
19EE:  RCALL  196C
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
19F0:  MOVLB  6
19F2:  MOVF   x2D,W
19F4:  IORLW  B8
19F6:  MOVWF  x33
19F8:  MOVLW  01
19FA:  MOVWF  x34
19FC:  MOVFF  633,635
1A00:  MOVLB  0
1A02:  RCALL  196C
....................       output_high(GLCD_DI);                     // Set for data 
1A04:  BCF    F93.5
1A06:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
1A08:  MOVLB  6
1A0A:  CLRF   x2E
1A0C:  MOVF   x2E,W
1A0E:  SUBLW  3F
1A10:  BNC   1A5C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1A12:  MOVFF  630,03
1A16:  MOVF   x2F,W
1A18:  INCF   x2F,F
1A1A:  BTFSC  FD8.2
1A1C:  INCF   x30,F
1A1E:  MOVWF  FE9
1A20:  MOVFF  03,FEA
1A24:  MOVFF  FEF,633
1A28:  CLRF   x34
1A2A:  MOVFF  633,635
1A2E:  MOVLB  0
1A30:  RCALL  196C
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1A32:  MOVLB  6
1A34:  MOVFF  632,03
1A38:  MOVF   x31,W
1A3A:  INCF   x31,F
1A3C:  BTFSC  FD8.2
1A3E:  INCF   x32,F
1A40:  MOVWF  FE9
1A42:  MOVFF  03,FEA
1A46:  MOVFF  FEF,633
1A4A:  MOVLW  01
1A4C:  MOVWF  x34
1A4E:  MOVFF  633,635
1A52:  MOVLB  0
1A54:  RCALL  196C
....................       } 
1A56:  MOVLB  6
1A58:  INCF   x2E,F
1A5A:  BRA    1A0C
....................    } 
1A5C:  INCF   x2D,F
1A5E:  BRA    19BE
.................... } 
1A60:  MOVLB  0
1A62:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
1A64:  MOVLB  6
1A66:  CLRF   x64
1A68:  RRCF   x5F,W
1A6A:  MOVWF  x63
1A6C:  RRCF   x63,F
1A6E:  RRCF   x63,F
1A70:  MOVLW  1F
1A72:  ANDWF  x63,F
....................    temp *= 64; 
1A74:  RLCF   x63,F
1A76:  RLCF   x64,F
1A78:  RLCF   x63,F
1A7A:  RLCF   x64,F
1A7C:  RLCF   x63,F
1A7E:  RLCF   x64,F
1A80:  RLCF   x63,F
1A82:  RLCF   x64,F
1A84:  RLCF   x63,F
1A86:  RLCF   x64,F
1A88:  RLCF   x63,F
1A8A:  RLCF   x64,F
1A8C:  MOVLW  C0
1A8E:  ANDWF  x63,F
....................    temp += x; 
1A90:  MOVF   x5E,W
1A92:  ADDWF  x63,F
1A94:  MOVLW  00
1A96:  ADDWFC x64,F
....................  
....................    if(x > 63) 
1A98:  MOVF   x5E,W
1A9A:  SUBLW  3F
1A9C:  BC    1AB8
....................    { 
....................       p = displayData.right + temp - 64; 
1A9E:  MOVLW  16
1AA0:  ADDWF  x63,W
1AA2:  MOVWF  x65
1AA4:  MOVLW  02
1AA6:  ADDWFC x64,W
1AA8:  MOVWF  x66
1AAA:  MOVLW  40
1AAC:  SUBWF  x65,W
1AAE:  MOVWF  x61
1AB0:  MOVLW  00
1AB2:  SUBWFB x66,W
1AB4:  MOVWF  x62
....................    } 
....................    else 
1AB6:  BRA    1AC4
....................    { 
....................       p = displayData.left + temp; 
1AB8:  MOVLW  16
1ABA:  ADDWF  x63,W
1ABC:  MOVWF  x61
1ABE:  MOVLW  00
1AC0:  ADDWFC x64,W
1AC2:  MOVWF  x62
....................    } 
....................  
....................    if(color) 
1AC4:  MOVF   x60,F
1AC6:  BZ    1AF2
....................    { 
....................       bit_set(*p, y%8); 
1AC8:  MOVFF  662,03
1ACC:  MOVFF  661,FE9
1AD0:  MOVFF  662,FEA
1AD4:  MOVF   x5F,W
1AD6:  ANDLW  07
1AD8:  MOVWF  x65
1ADA:  MOVLW  01
1ADC:  MOVWF  00
1ADE:  MOVF   x65,W
1AE0:  MOVWF  01
1AE2:  BZ    1AEC
1AE4:  BCF    FD8.0
1AE6:  RLCF   00,F
1AE8:  DECFSZ 01,F
1AEA:  BRA    1AE4
1AEC:  MOVF   00,W
1AEE:  IORWF  FEF,F
....................    } 
....................    else 
1AF0:  BRA    1B1C
....................    { 
....................       bit_clear(*p, y%8); 
1AF2:  MOVFF  662,03
1AF6:  MOVFF  661,FE9
1AFA:  MOVFF  662,FEA
1AFE:  MOVF   x5F,W
1B00:  ANDLW  07
1B02:  MOVWF  x65
1B04:  MOVLW  01
1B06:  MOVWF  00
1B08:  MOVF   x65,W
1B0A:  MOVWF  01
1B0C:  BZ    1B16
1B0E:  BCF    FD8.0
1B10:  RLCF   00,F
1B12:  DECFSZ 01,F
1B14:  BRA    1B0E
1B16:  MOVF   00,W
1B18:  XORLW  FF
1B1A:  ANDWF  FEF,F
....................    } 
.................... } 
1B1C:  MOVLB  0
1B1E:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
20E2:  MOVLB  6
20E4:  CLRF   x30
20E6:  MOVLW  16
20E8:  MOVWF  x2F
....................    p2 = displayData.right; 
20EA:  MOVLW  02
20EC:  MOVWF  x32
20EE:  MOVLW  16
20F0:  MOVWF  x31
....................    data = 0xFF * color; 
20F2:  MOVF   x2D,W
20F4:  MULLW  FF
20F6:  MOVFF  FF3,62E
....................  
....................    for(i=0; i<512; ++i) 
20FA:  CLRF   x34
20FC:  CLRF   x33
20FE:  MOVF   x34,W
2100:  SUBLW  01
2102:  BNC   2138
....................    { 
....................       *p1++ = data; 
2104:  MOVFF  630,03
2108:  MOVF   x2F,W
210A:  INCF   x2F,F
210C:  BTFSC  FD8.2
210E:  INCF   x30,F
2110:  MOVWF  FE9
2112:  MOVFF  03,FEA
2116:  MOVFF  62E,FEF
....................       *p2++ = data; 
211A:  MOVFF  632,03
211E:  MOVF   x31,W
2120:  INCF   x31,F
2122:  BTFSC  FD8.2
2124:  INCF   x32,F
2126:  MOVWF  FE9
2128:  MOVFF  03,FEA
212C:  MOVFF  62E,FEF
....................    } 
2130:  INCF   x33,F
2132:  BTFSC  FD8.2
2134:  INCF   x34,F
2136:  BRA    20FE
.................... } 
2138:  MOVLB  0
213A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
196C:  MOVLB  6
196E:  MOVF   x34,F
1970:  BZ    1978
....................       output_high(GLCD_CS2); 
1972:  BCF    F93.4
1974:  BSF    F8A.4
....................    else 
1976:  BRA    197C
....................       output_high(GLCD_CS1); 
1978:  BCF    F93.3
197A:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
197C:  BCF    F93.6
197E:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
1980:  CLRF   F95
1982:  MOVFF  635,F8C
....................    delay_cycles(50); 
1986:  MOVLW  10
1988:  MOVWF  00
198A:  DECFSZ 00,F
198C:  BRA    198A
198E:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
1990:  BCF    F93.7
1992:  BSF    F8A.7
....................    delay_cycles(250); 
1994:  MOVLW  53
1996:  MOVWF  00
1998:  DECFSZ 00,F
199A:  BRA    1998
....................    output_low(GLCD_E); 
199C:  BCF    F93.7
199E:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
19A0:  BCF    F93.3
19A2:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
19A4:  BCF    F93.4
19A6:  BCF    F8A.4
.................... } 
19A8:  MOVLB  0
19AA:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1B20:  MOVLW  01
1B22:  MOVLB  6
1B24:  MOVWF  x57
1B26:  MOVWF  x58
1B28:  CLRF   x5D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1B2A:  MOVF   x4E,W
1B2C:  SUBWF  x50,W
1B2E:  MOVWF  x5E
1B30:  MOVF   x5E,W
1B32:  BTFSS  x5E.7
1B34:  BRA    1B3C
1B36:  MOVLW  00
1B38:  BSF    FD8.0
1B3A:  SUBFWB x5E,W
1B3C:  CLRF   03
1B3E:  MOVWF  x55
1B40:  MOVFF  03,656
....................    dy = abs((signed int8)(y2 - y1)); 
1B44:  MOVF   x4F,W
1B46:  SUBWF  x51,W
1B48:  MOVWF  x5E
1B4A:  MOVF   x5E,W
1B4C:  BTFSS  x5E.7
1B4E:  BRA    1B56
1B50:  MOVLW  00
1B52:  BSF    FD8.0
1B54:  SUBFWB x5E,W
1B56:  CLRF   03
1B58:  MOVWF  x53
1B5A:  MOVFF  03,654
....................    #endif 
....................  
....................    if(x1 > x2) 
1B5E:  MOVF   x4E,W
1B60:  SUBWF  x50,W
1B62:  BC    1B68
....................       addx = -1; 
1B64:  MOVLW  FF
1B66:  MOVWF  x57
....................    if(y1 > y2) 
1B68:  MOVF   x4F,W
1B6A:  SUBWF  x51,W
1B6C:  BC    1B72
....................       addy = -1; 
1B6E:  MOVLW  FF
1B70:  MOVWF  x58
....................  
....................    if(dx >= dy) 
1B72:  MOVF   x54,W
1B74:  SUBWF  x56,W
1B76:  BNC   1BEE
1B78:  BNZ   1B80
1B7A:  MOVF   x53,W
1B7C:  SUBWF  x55,W
1B7E:  BNC   1BEE
....................    { 
....................       dy *= 2; 
1B80:  BCF    FD8.0
1B82:  RLCF   x53,F
1B84:  RLCF   x54,F
....................       P = dy - dx; 
1B86:  MOVF   x55,W
1B88:  SUBWF  x53,W
1B8A:  MOVWF  00
1B8C:  MOVF   x56,W
1B8E:  SUBWFB x54,W
1B90:  MOVFF  00,659
1B94:  MOVWF  x5A
....................       diff = P - dx; 
1B96:  MOVF   x55,W
1B98:  SUBWF  x59,W
1B9A:  MOVWF  x5B
1B9C:  MOVF   x56,W
1B9E:  SUBWFB x5A,W
1BA0:  MOVWF  x5C
....................  
....................       for(; i<=dx; ++i) 
1BA2:  MOVF   x56,F
1BA4:  BNZ   1BAC
1BA6:  MOVF   x5D,W
1BA8:  SUBWF  x55,W
1BAA:  BNC   1BEC
....................       { 
....................          glcd_pixel(x1, y1, color); 
1BAC:  MOVFF  64E,65E
1BB0:  MOVFF  64F,65F
1BB4:  MOVFF  652,660
1BB8:  MOVLB  0
1BBA:  RCALL  1A64
....................  
....................          if(P < 0) 
1BBC:  MOVLB  6
1BBE:  BTFSC  x5A.7
1BC0:  BRA    1BC4
1BC2:  BRA    1BD4
....................          { 
....................             P  += dy; 
1BC4:  MOVF   x53,W
1BC6:  ADDWF  x59,F
1BC8:  MOVF   x54,W
1BCA:  ADDWFC x5A,F
....................             x1 += addx; 
1BCC:  MOVF   x57,W
1BCE:  ADDWF  x4E,W
1BD0:  MOVWF  x4E
....................          } 
....................          else 
1BD2:  BRA    1BE8
....................          { 
....................             P  += diff; 
1BD4:  MOVF   x5B,W
1BD6:  ADDWF  x59,F
1BD8:  MOVF   x5C,W
1BDA:  ADDWFC x5A,F
....................             x1 += addx; 
1BDC:  MOVF   x57,W
1BDE:  ADDWF  x4E,W
1BE0:  MOVWF  x4E
....................             y1 += addy; 
1BE2:  MOVF   x58,W
1BE4:  ADDWF  x4F,W
1BE6:  MOVWF  x4F
....................          } 
....................       } 
1BE8:  INCF   x5D,F
1BEA:  BRA    1BA2
....................    } 
....................    else 
1BEC:  BRA    1C5A
....................    { 
....................       dx *= 2; 
1BEE:  BCF    FD8.0
1BF0:  RLCF   x55,F
1BF2:  RLCF   x56,F
....................       P = dx - dy; 
1BF4:  MOVF   x53,W
1BF6:  SUBWF  x55,W
1BF8:  MOVWF  00
1BFA:  MOVF   x54,W
1BFC:  SUBWFB x56,W
1BFE:  MOVFF  00,659
1C02:  MOVWF  x5A
....................       diff = P - dy; 
1C04:  MOVF   x53,W
1C06:  SUBWF  x59,W
1C08:  MOVWF  x5B
1C0A:  MOVF   x54,W
1C0C:  SUBWFB x5A,W
1C0E:  MOVWF  x5C
....................  
....................       for(; i<=dy; ++i) 
1C10:  MOVF   x54,F
1C12:  BNZ   1C1A
1C14:  MOVF   x5D,W
1C16:  SUBWF  x53,W
1C18:  BNC   1C5A
....................       { 
....................          glcd_pixel(x1, y1, color); 
1C1A:  MOVFF  64E,65E
1C1E:  MOVFF  64F,65F
1C22:  MOVFF  652,660
1C26:  MOVLB  0
1C28:  RCALL  1A64
....................  
....................          if(P < 0) 
1C2A:  MOVLB  6
1C2C:  BTFSC  x5A.7
1C2E:  BRA    1C32
1C30:  BRA    1C42
....................          { 
....................             P  += dx; 
1C32:  MOVF   x55,W
1C34:  ADDWF  x59,F
1C36:  MOVF   x56,W
1C38:  ADDWFC x5A,F
....................             y1 += addy; 
1C3A:  MOVF   x58,W
1C3C:  ADDWF  x4F,W
1C3E:  MOVWF  x4F
....................          } 
....................          else 
1C40:  BRA    1C56
....................          { 
....................             P  += diff; 
1C42:  MOVF   x5B,W
1C44:  ADDWF  x59,F
1C46:  MOVF   x5C,W
1C48:  ADDWFC x5A,F
....................             x1 += addx; 
1C4A:  MOVF   x57,W
1C4C:  ADDWF  x4E,W
1C4E:  MOVWF  x4E
....................             y1 += addy; 
1C50:  MOVF   x58,W
1C52:  ADDWF  x4F,W
1C54:  MOVWF  x4F
....................          } 
....................       } 
1C56:  INCF   x5D,F
1C58:  BRA    1C10
....................    } 
.................... } 
1C5A:  MOVLB  0
1C5C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1C5E:  MOVLB  6
1C60:  MOVF   x47,F
1C62:  BZ    1CC0
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1C64:  MOVF   x45,W
1C66:  SUBWF  x43,W
1C68:  BC    1C74
....................       { 
....................          xmin = x1; 
1C6A:  MOVFF  643,64A
....................          xmax = x2; 
1C6E:  MOVFF  645,64B
....................       } 
....................       else 
1C72:  BRA    1C7C
....................       { 
....................          xmin = x2; 
1C74:  MOVFF  645,64A
....................          xmax = x1; 
1C78:  MOVFF  643,64B
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
1C7C:  MOVF   x46,W
1C7E:  SUBWF  x44,W
1C80:  BC    1C8C
....................       { 
....................          ymin = y1; 
1C82:  MOVFF  644,64C
....................          ymax = y2; 
1C86:  MOVFF  646,64D
....................       } 
....................       else 
1C8A:  BRA    1C94
....................       { 
....................          ymin = y2; 
1C8C:  MOVFF  646,64C
....................          ymax = y1; 
1C90:  MOVFF  644,64D
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1C94:  MOVF   x4A,W
1C96:  SUBWF  x4B,W
1C98:  BNC   1CBE
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
1C9A:  MOVFF  64C,649
1C9E:  MOVF   x49,W
1CA0:  SUBWF  x4D,W
1CA2:  BNC   1CBA
....................          { 
....................             glcd_pixel(xmin, i, color); 
1CA4:  MOVFF  64A,65E
1CA8:  MOVFF  649,65F
1CAC:  MOVFF  648,660
1CB0:  MOVLB  0
1CB2:  RCALL  1A64
....................          } 
1CB4:  MOVLB  6
1CB6:  INCF   x49,F
1CB8:  BRA    1C9E
....................       } 
1CBA:  INCF   x4A,F
1CBC:  BRA    1C94
....................    } 
....................    else 
1CBE:  BRA    1D1C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1CC0:  MOVFF  643,64E
1CC4:  MOVFF  644,64F
1CC8:  MOVFF  645,650
1CCC:  MOVFF  644,651
1CD0:  MOVFF  648,652
1CD4:  MOVLB  0
1CD6:  RCALL  1B20
....................       glcd_line(x1, y2, x2, y2, color); 
1CD8:  MOVFF  643,64E
1CDC:  MOVFF  646,64F
1CE0:  MOVFF  645,650
1CE4:  MOVFF  646,651
1CE8:  MOVFF  648,652
1CEC:  RCALL  1B20
....................       glcd_line(x1, y1, x1, y2, color); 
1CEE:  MOVFF  643,64E
1CF2:  MOVFF  644,64F
1CF6:  MOVFF  643,650
1CFA:  MOVFF  646,651
1CFE:  MOVFF  648,652
1D02:  RCALL  1B20
....................       glcd_line(x2, y1, x2, y2, color); 
1D04:  MOVFF  645,64E
1D08:  MOVFF  644,64F
1D0C:  MOVFF  645,650
1D10:  MOVFF  646,651
1D14:  MOVFF  648,652
1D18:  RCALL  1B20
1D1A:  MOVLB  6
....................    } 
.................... } 
1D1C:  MOVLB  0
1D1E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
....................    b = radius; 
....................    P = 1 - radius; 
....................  
....................    do 
....................    { 
....................       if(fill) 
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
....................       } 
....................       else 
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
....................          glcd_pixel(b+x, a+y, color); 
....................          glcd_pixel(x-a, b+y, color); 
....................          glcd_pixel(x-b, a+y, color); 
....................          glcd_pixel(b+x, y-a, color); 
....................          glcd_pixel(a+x, y-b, color); 
....................          glcd_pixel(x-a, y-b, color); 
....................          glcd_pixel(x-b, y-a, color); 
....................       } 
....................  
....................       if(P < 0) 
....................          P += 3 + 2 * a++; 
....................       else 
....................          P += 5 + 2 * (a++ - b--); 
....................     } while(a <= b); 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
1D20:  MOVFF  646,03
1D24:  MOVLB  6
1D26:  MOVFF  645,FE9
1D2A:  MOVFF  646,FEA
1D2E:  MOVF   FEF,F
1D30:  BTFSC  FD8.2
1D32:  BRA    1ED4
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
1D34:  MOVFF  646,03
1D38:  MOVFF  645,FE9
1D3C:  MOVFF  646,FEA
1D40:  MOVF   FEF,W
1D42:  SUBLW  52
1D44:  BNC   1D94
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1D46:  MOVFF  646,03
1D4A:  MOVFF  645,FE9
1D4E:  MOVFF  646,FEA
1D52:  MOVLW  20
1D54:  SUBWF  FEF,W
1D56:  MULLW  05
1D58:  MOVF   FF3,W
1D5A:  CLRF   03
1D5C:  MOVWF  x52
1D5E:  MOVLW  06
1D60:  MOVWF  FEA
1D62:  MOVLW  4D
1D64:  MOVWF  FE9
1D66:  CLRF   x56
1D68:  MOVFF  652,655
1D6C:  MOVFF  FF2,653
1D70:  BCF    FF2.7
1D72:  MOVLW  05
1D74:  MOVWF  01
1D76:  CLRF   FF7
1D78:  MOVF   x52,W
1D7A:  MOVLB  0
1D7C:  CALL   0096
1D80:  TBLRD*-
1D82:  TBLRD*+
1D84:  MOVFF  FF5,FEE
1D88:  DECFSZ 01,F
1D8A:  BRA    1D82
1D8C:  MOVLB  6
1D8E:  BTFSC  x53.7
1D90:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
1D92:  BRA    1DFE
1D94:  MOVFF  646,03
1D98:  MOVFF  645,FE9
1D9C:  MOVFF  646,FEA
1DA0:  MOVF   FEF,W
1DA2:  SUBLW  7E
1DA4:  BNC   1DF4
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
1DA6:  MOVFF  646,03
1DAA:  MOVFF  645,FE9
1DAE:  MOVFF  646,FEA
1DB2:  MOVLW  53
1DB4:  SUBWF  FEF,W
1DB6:  MULLW  05
1DB8:  MOVF   FF3,W
1DBA:  CLRF   03
1DBC:  MOVWF  x52
1DBE:  MOVLW  06
1DC0:  MOVWF  FEA
1DC2:  MOVLW  4D
1DC4:  MOVWF  FE9
1DC6:  CLRF   x56
1DC8:  MOVFF  652,655
1DCC:  MOVFF  FF2,653
1DD0:  BCF    FF2.7
1DD2:  MOVLW  05
1DD4:  MOVWF  01
1DD6:  CLRF   FF7
1DD8:  MOVF   x52,W
1DDA:  MOVLB  0
1DDC:  CALL   01B0
1DE0:  TBLRD*-
1DE2:  TBLRD*+
1DE4:  MOVFF  FF5,FEE
1DE8:  DECFSZ 01,F
1DEA:  BRA    1DE2
1DEC:  MOVLB  6
1DEE:  BTFSC  x53.7
1DF0:  BSF    FF2.7
....................       else 
1DF2:  BRA    1DFE
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
1DF4:  CLRF   x4D
1DF6:  CLRF   x4E
1DF8:  CLRF   x4F
1DFA:  CLRF   x50
1DFC:  CLRF   x51
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1DFE:  MOVFF  646,03
1E02:  MOVF   x45,W
1E04:  MOVWF  FE9
1E06:  MOVFF  03,FEA
1E0A:  MOVF   FEF,W
1E0C:  XORLW  0A
1E0E:  MOVLB  0
1E10:  BZ    1E18
1E12:  XORLW  07
1E14:  BZ    1E28
1E16:  BRA    1E2E
....................          case '\n': 
....................             y += 7*size + 1; 
1E18:  MOVLB  6
1E1A:  MOVF   x47,W
1E1C:  MULLW  07
1E1E:  MOVF   FF3,W
1E20:  ADDLW  01
1E22:  ADDWF  x44,F
....................             continue; 
1E24:  BRA    1EC6
1E26:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1E28:  MOVLB  6
1E2A:  CLRF   x43
....................             continue; 
1E2C:  BRA    1EC6
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1E2E:  MOVLB  6
1E30:  MOVF   x47,W
1E32:  MULLW  05
1E34:  MOVF   FF3,W
1E36:  ADDWF  x43,W
1E38:  SUBLW  7F
1E3A:  BC    1E48
....................       { 
....................          x = 0;                           // Set x at far left position 
1E3C:  CLRF   x43
....................          y += 7*size + 1;                 // Set y at next position down 
1E3E:  MOVF   x47,W
1E40:  MULLW  07
1E42:  MOVF   FF3,W
1E44:  ADDLW  01
1E46:  ADDWF  x44,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1E48:  CLRF   x49
1E4A:  MOVF   x49,W
1E4C:  SUBLW  04
1E4E:  BNC   1EC6
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
1E50:  CLRF   x4A
1E52:  MOVF   x4A,W
1E54:  SUBLW  06
1E56:  BNC   1EBE
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1E58:  CLRF   03
1E5A:  MOVF   x49,W
1E5C:  ADDLW  4D
1E5E:  MOVWF  FE9
1E60:  MOVLW  06
1E62:  ADDWFC 03,W
1E64:  MOVWF  FEA
1E66:  MOVFF  FEF,652
1E6A:  MOVFF  652,00
1E6E:  MOVF   x4A,W
1E70:  MOVWF  01
1E72:  BZ    1E7C
1E74:  BCF    FD8.0
1E76:  RRCF   00,F
1E78:  DECFSZ 01,F
1E7A:  BRA    1E74
1E7C:  BTFSS  00.0
1E7E:  BRA    1EBA
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1E80:  CLRF   x4B
1E82:  MOVF   x47,W
1E84:  SUBWF  x4B,W
1E86:  BC    1EBA
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1E88:  CLRF   x4C
1E8A:  MOVF   x47,W
1E8C:  SUBWF  x4C,W
1E8E:  BC    1EB6
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1E90:  MOVF   x4C,W
1E92:  ADDWF  x43,W
1E94:  MOVWF  x52
1E96:  MOVF   x4A,W
1E98:  MULWF  x47
1E9A:  MOVF   FF3,W
1E9C:  ADDWF  x44,W
1E9E:  ADDWF  x4B,W
1EA0:  MOVWF  x53
1EA2:  MOVFF  652,65E
1EA6:  MOVWF  x5F
1EA8:  MOVFF  648,660
1EAC:  MOVLB  0
1EAE:  RCALL  1A64
....................                   } 
1EB0:  MOVLB  6
1EB2:  INCF   x4C,F
1EB4:  BRA    1E8A
....................                } 
1EB6:  INCF   x4B,F
1EB8:  BRA    1E82
....................             } 
....................          } 
1EBA:  INCF   x4A,F
1EBC:  BRA    1E52
....................       } 
1EBE:  INCF   x49,F
1EC0:  MOVF   x47,W
1EC2:  ADDWF  x43,F
1EC4:  BRA    1E4A
....................    } 
1EC6:  INCF   x45,F
1EC8:  BTFSC  FD8.2
1ECA:  INCF   x46,F
1ECC:  INCF   x43,F
1ECE:  MOVLB  0
1ED0:  BRA    1D20
1ED2:  MOVLB  6
.................... } 
1ED4:  MOVLB  0
1ED6:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Bombillo [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x80, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x02, 0xF8, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x84, 0x80, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x78, 0x40, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x48, 0x20, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x48, 0x10, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Tomai [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x03, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x03, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFC, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x84, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x84, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFC, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Ventilador [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x71, 0xC0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x93, 0xE0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0xF0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0xF0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7D, 0x93, 0xE0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x61, 0xC0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00 
.................... }; 
....................  
....................  
.................... #define   UP               input(PIN_A0) 
.................... #define   DOWN             input(PIN_A1) 
.................... #define   RIGHT            input(PIN_A2) 
.................... #define   LEFT             input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... const int8 Lenbuf = 32; 
.................... int8 txbuf[Lenbuf]; 
....................  
.................... int16 tiempos=0; 
.................... int8 i=0; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... short Flanco=0,Flanco1=0,Flanco2=0,Flanco3=0,Flanco4=0,Flanco5=0,Flanco6=0,imprimir=0,flag_uv=0,flag_blower=0,flag_toma=0,flag_luz=0,flag_alarma=0,w=0; 
.................... short tiempo_purga=0,tiempo_uv=0,tiempo_trabajo=0,tiempo_postpurga=0,Latencia=0,flag_latencia=0; 
.................... short guardauv=0,guardatrabajo=0,Lectura=0,n=0; 
.................... char  JP[] = "JP Inglobal", Cabina[] = "Cabina Flujo Laminar",tiempo_est[]="T est=", Dos_puntos[]=":"; 
.................... char  Clase[] = "Vertical", Tiempo[] = "Tiempo de Purga", UV[]="UV"; 
.................... char  Baje_Vidrio[] = "!!Ubique Vidrio!!",Inflowt[] = "JPCV36-B",Downflowt[] = "Dnflow(m/s):", ZF[] = "Fabrica:203.0", ZA[] = "Actual:",AJ[]="Ajuste:"; 
.................... char  Vida_UV[] = "UVLife:",Vida_Filtro[] = "Filter:",ZFP[] = "Fabrica:235.0", Perdida[]="!Perdida Flujo!"; 
.................... int8 Menu=200, unidad=1, Opcion=1,inicie=0,negativo=10,MediaMovil=5,G_l=0,G_h=0,tiemporeset=0; 
.................... int8 q=0,r=0,l=0,h=0,Entero=0,Decimal1=0,LuzBlanca=10,LuzUV=10,Motor=10,Alarma=10,Toma=10,UV2=0; 
.................... unsigned int8 Inflow_l=0,Inflow_h=0,Downflow_h=0,Downflow_l=0,Vidrio_abajo=0,Vidrio_ok=0,Filtro_Inflow_l=0,Filtro_Inflow_h=0; 
.................... unsigned int8 Filtro_Downflow_l=0,Filtro_Downflow_h=0; 
....................  
.................... unsigned int16 Inflow_adc=0,Downflow_adc=0,Filtro_Inflow_adc=0,Filtro_Downflow_adc=0,Temporal1=0; 
....................  
.................... int16 t_latencia=0,minutos_uv=0,minutos_trabajo=0,G16=0; 
.................... signed int  Tpurga[4]={0,0,0,0};       // Tiempo de Purga transcurrido 
.................... signed int  Tpurgap[4]={9,0,0,0};      // Tiempo de Purga programado 
.................... signed int  Tppurga[4]={0,0,0,0};      // Tiempo de Post-Purga transcurrido 
.................... signed int  Tppurgap[4]={9,0,0,0};     // Tiempo de Post-Purga programado 
.................... signed int  Tuv[4]={0,0,0,0};          // Tiempo de UV transcurrido(en Horas) 
.................... signed int  Tempouv[4]={0,0,0,0};         // Tiempo de UV transcurrido 
.................... signed int  Tempouvp[4]={0,0,0,0};        // Tiempo de UV transcurrido 
.................... signed int  Ttrabajo[4]={0,0,0,0};        // Tiempo de trabajo transcurrido (en Horas) 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float Inflow=0.0,Downflow=0.0,Filtro_Downflow=0.0,Diferencia=0.0,barra=0.0,barra_old=0.0,barra2=0.0,barra_old2=0.0,Inflowdec=0.0; 
.................... float Velocidad=0.0,x_uno=0.0,x_cuadrado=0.0,x_cubo=0.0,Ajuste1=0.0,Ajuste2=0.0; 
.................... float ADC=0,Temporal=0.0,Temporal2=0.0; 
.................... float a=0.0000001418633343546420,b=-0.00009476749001431169,c= 0.040182822903506,d= -5.354852229527197;//Sensor 2 Posible bueno 
.................... float promedio[8]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float PromPresion[8]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float Flujo2=0.0,zero_fabrica=203.0,zero_actual=0.0; 
.................... float V1=0.0,Presion=0.0,G=2.0,UVTime=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[20]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................       
....................    if(x==3){ 
*
2F2C:  MOVLB  6
2F2E:  MOVF   x2C,W
2F30:  SUBLW  03
2F32:  BNZ   2FD6
....................    for( i = 0 ; i < 64 ; i ++ ) 
2F34:  CLRF   x2D
2F36:  MOVF   x2D,W
2F38:  SUBLW  3F
2F3A:  BNC   2FD6
....................    {  for( j = 0 ; j < 16 ; j ++) 
2F3C:  CLRF   x2E
2F3E:  MOVF   x2E,W
2F40:  SUBLW  0F
2F42:  BNC   2FD2
....................       {  for(k=7;k>-1;k--) 
2F44:  MOVLW  07
2F46:  MOVWF  x2F
2F48:  MOVF   x2F,W
2F4A:  XORLW  80
2F4C:  SUBLW  7F
2F4E:  BC    2FCE
....................          {       
....................             if( bit_test(Bombillo[i][j] ,7-k ))  
2F50:  CLRF   x31
2F52:  MOVFF  62D,630
2F56:  CLRF   x33
2F58:  MOVLW  10
2F5A:  MOVWF  x32
2F5C:  MOVLB  0
2F5E:  RCALL  2F0A
2F60:  MOVFF  02,631
2F64:  MOVFF  01,630
2F68:  MOVLB  6
2F6A:  MOVF   x2E,W
2F6C:  ADDWF  01,W
2F6E:  MOVWF  01
2F70:  MOVLW  00
2F72:  ADDWFC 02,W
2F74:  MOVWF  03
2F76:  MOVF   01,W
2F78:  MOVFF  FF2,630
2F7C:  BCF    FF2.7
2F7E:  MOVFF  03,FF7
2F82:  MOVLB  0
2F84:  CALL   02A6
2F88:  MOVLB  6
2F8A:  BTFSC  x30.7
2F8C:  BSF    FF2.7
2F8E:  MOVWF  x30
2F90:  MOVLW  07
2F92:  BSF    FD8.0
2F94:  SUBFWB x2F,W
2F96:  MOVWF  x31
2F98:  MOVFF  630,00
2F9C:  MOVF   x31,W
2F9E:  MOVWF  01
2FA0:  BZ    2FAA
2FA2:  BCF    FD8.0
2FA4:  RRCF   00,F
2FA6:  DECFSZ 01,F
2FA8:  BRA    2FA2
2FAA:  BTFSS  00.0
2FAC:  BRA    2FCA
....................                glcd_pixel( j*8+k,i, ON ); 
2FAE:  MOVF   x2E,W
2FB0:  MULLW  08
2FB2:  MOVF   FF3,W
2FB4:  ADDWF  x2F,W
2FB6:  MOVWF  x30
2FB8:  MOVWF  x5E
2FBA:  MOVFF  62D,65F
2FBE:  MOVLW  01
2FC0:  MOVWF  x60
2FC2:  MOVLB  0
2FC4:  CALL   1A64
2FC8:  MOVLB  6
....................          }   
2FCA:  DECF   x2F,F
2FCC:  BRA    2F48
....................       } 
2FCE:  INCF   x2E,F
2FD0:  BRA    2F3E
....................    } 
2FD2:  INCF   x2D,F
2FD4:  BRA    2F36
....................    } 
....................     
....................    if(x==4){ 
2FD6:  MOVF   x2C,W
2FD8:  SUBLW  04
2FDA:  BNZ   307E
....................    for( i = 0 ; i < 64 ; i ++ ) 
2FDC:  CLRF   x2D
2FDE:  MOVF   x2D,W
2FE0:  SUBLW  3F
2FE2:  BNC   307E
....................    {  for( j = 0 ; j < 16 ; j ++) 
2FE4:  CLRF   x2E
2FE6:  MOVF   x2E,W
2FE8:  SUBLW  0F
2FEA:  BNC   307A
....................       {  for(k=7;k>-1;k--) 
2FEC:  MOVLW  07
2FEE:  MOVWF  x2F
2FF0:  MOVF   x2F,W
2FF2:  XORLW  80
2FF4:  SUBLW  7F
2FF6:  BC    3076
....................          {       
....................             if( bit_test(Tomai[i][j] ,7-k ))  
2FF8:  CLRF   x31
2FFA:  MOVFF  62D,630
2FFE:  CLRF   x33
3000:  MOVLW  10
3002:  MOVWF  x32
3004:  MOVLB  0
3006:  RCALL  2F0A
3008:  MOVFF  02,631
300C:  MOVFF  01,630
3010:  MOVLB  6
3012:  MOVF   x2E,W
3014:  ADDWF  01,W
3016:  MOVWF  01
3018:  MOVLW  00
301A:  ADDWFC 02,W
301C:  MOVWF  03
301E:  MOVF   01,W
3020:  MOVFF  FF2,630
3024:  BCF    FF2.7
3026:  MOVFF  03,FF7
302A:  MOVLB  0
302C:  CALL   06BE
3030:  MOVLB  6
3032:  BTFSC  x30.7
3034:  BSF    FF2.7
3036:  MOVWF  x30
3038:  MOVLW  07
303A:  BSF    FD8.0
303C:  SUBFWB x2F,W
303E:  MOVWF  x31
3040:  MOVFF  630,00
3044:  MOVF   x31,W
3046:  MOVWF  01
3048:  BZ    3052
304A:  BCF    FD8.0
304C:  RRCF   00,F
304E:  DECFSZ 01,F
3050:  BRA    304A
3052:  BTFSS  00.0
3054:  BRA    3072
....................                glcd_pixel( j*8+k,i, ON ); 
3056:  MOVF   x2E,W
3058:  MULLW  08
305A:  MOVF   FF3,W
305C:  ADDWF  x2F,W
305E:  MOVWF  x30
3060:  MOVWF  x5E
3062:  MOVFF  62D,65F
3066:  MOVLW  01
3068:  MOVWF  x60
306A:  MOVLB  0
306C:  CALL   1A64
3070:  MOVLB  6
....................          }   
3072:  DECF   x2F,F
3074:  BRA    2FF0
....................       } 
3076:  INCF   x2E,F
3078:  BRA    2FE6
....................    } 
307A:  INCF   x2D,F
307C:  BRA    2FDE
....................    } 
....................     
....................    if(x==5){ 
307E:  MOVF   x2C,W
3080:  SUBLW  05
3082:  BNZ   3126
....................    for( i = 0 ; i < 64 ; i ++ ) 
3084:  CLRF   x2D
3086:  MOVF   x2D,W
3088:  SUBLW  3F
308A:  BNC   3126
....................    {  for( j = 0 ; j < 16 ; j ++) 
308C:  CLRF   x2E
308E:  MOVF   x2E,W
3090:  SUBLW  0F
3092:  BNC   3122
....................       {  for(k=7;k>-1;k--) 
3094:  MOVLW  07
3096:  MOVWF  x2F
3098:  MOVF   x2F,W
309A:  XORLW  80
309C:  SUBLW  7F
309E:  BC    311E
....................          {       
....................             if( bit_test(Ventilador[i][j] ,7-k ))  
30A0:  CLRF   x31
30A2:  MOVFF  62D,630
30A6:  CLRF   x33
30A8:  MOVLW  10
30AA:  MOVWF  x32
30AC:  MOVLB  0
30AE:  RCALL  2F0A
30B0:  MOVFF  02,631
30B4:  MOVFF  01,630
30B8:  MOVLB  6
30BA:  MOVF   x2E,W
30BC:  ADDWF  01,W
30BE:  MOVWF  01
30C0:  MOVLW  00
30C2:  ADDWFC 02,W
30C4:  MOVWF  03
30C6:  MOVF   01,W
30C8:  MOVFF  FF2,630
30CC:  BCF    FF2.7
30CE:  MOVFF  03,FF7
30D2:  MOVLB  0
30D4:  CALL   0AD6
30D8:  MOVLB  6
30DA:  BTFSC  x30.7
30DC:  BSF    FF2.7
30DE:  MOVWF  x30
30E0:  MOVLW  07
30E2:  BSF    FD8.0
30E4:  SUBFWB x2F,W
30E6:  MOVWF  x31
30E8:  MOVFF  630,00
30EC:  MOVF   x31,W
30EE:  MOVWF  01
30F0:  BZ    30FA
30F2:  BCF    FD8.0
30F4:  RRCF   00,F
30F6:  DECFSZ 01,F
30F8:  BRA    30F2
30FA:  BTFSS  00.0
30FC:  BRA    311A
....................                glcd_pixel( j*8+k,i, ON ); 
30FE:  MOVF   x2E,W
3100:  MULLW  08
3102:  MOVF   FF3,W
3104:  ADDWF  x2F,W
3106:  MOVWF  x30
3108:  MOVWF  x5E
310A:  MOVFF  62D,65F
310E:  MOVLW  01
3110:  MOVWF  x60
3112:  MOVLB  0
3114:  CALL   1A64
3118:  MOVLB  6
....................          }   
311A:  DECF   x2F,F
311C:  BRA    3098
....................       } 
311E:  INCF   x2E,F
3120:  BRA    308E
....................    } 
3122:  INCF   x2D,F
3124:  BRA    3086
....................    } 
.................... } 
3126:  MOVLB  0
3128:  RETLW  00
....................  
.................... void mensajes(int8 x,y){// Funcion para imprimir mensajes de Menu Principal. 
....................   if(x==1) 
....................    {glcd_text57(7, y, tiempo_est, 1, ON);} 
.................... } 
....................   
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
202C:  MOVLW  06
202E:  MOVLB  6
2030:  MOVWF  x2B
2032:  MOVLW  32
2034:  MOVWF  x2A
2036:  MOVFF  62E,63B
203A:  MOVLW  1F
203C:  MOVWF  x3C
203E:  MOVLB  0
2040:  RCALL  1F4E
....................     
....................    if(sombreado==1) 
2042:  MOVLB  6
2044:  DECFSZ x31,W
2046:  BRA    2096
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
2048:  MOVLW  12
204A:  ADDWF  x2F,W
204C:  MOVWF  x3B
204E:  MOVLW  18
2050:  ADDWF  x30,W
2052:  MOVWF  x3C
2054:  MOVFF  62F,643
2058:  MOVFF  630,644
205C:  MOVFF  63B,645
2060:  MOVWF  x46
2062:  MOVLW  01
2064:  MOVWF  x47
2066:  MOVWF  x48
2068:  MOVLB  0
206A:  RCALL  1C5E
206C:  MOVLW  02
206E:  MOVLB  6
2070:  ADDWF  x2F,W
2072:  MOVWF  x3B
2074:  MOVLW  01
2076:  ADDWF  x30,W
2078:  MOVWF  x3C
207A:  MOVFF  63B,643
207E:  MOVWF  x44
2080:  MOVLW  06
2082:  MOVWF  x46
2084:  MOVLW  32
2086:  MOVWF  x45
2088:  MOVLW  02
208A:  MOVWF  x47
208C:  CLRF   x48
208E:  MOVLB  0
2090:  RCALL  1D20
....................    else    
2092:  BRA    20E0
2094:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
2096:  MOVLW  12
2098:  ADDWF  x2F,W
209A:  MOVWF  x3B
209C:  MOVLW  18
209E:  ADDWF  x30,W
20A0:  MOVWF  x3C
20A2:  MOVFF  62F,643
20A6:  MOVFF  630,644
20AA:  MOVFF  63B,645
20AE:  MOVWF  x46
20B0:  CLRF   x47
20B2:  CLRF   x48
20B4:  MOVLB  0
20B6:  RCALL  1C5E
20B8:  MOVLW  02
20BA:  MOVLB  6
20BC:  ADDWF  x2F,W
20BE:  MOVWF  x3B
20C0:  MOVLW  01
20C2:  ADDWF  x30,W
20C4:  MOVWF  x3C
20C6:  MOVFF  63B,643
20CA:  MOVWF  x44
20CC:  MOVLW  06
20CE:  MOVWF  x46
20D0:  MOVLW  32
20D2:  MOVWF  x45
20D4:  MOVLW  02
20D6:  MOVWF  x47
20D8:  MOVLW  01
20DA:  MOVWF  x48
20DC:  MOVLB  0
20DE:  RCALL  1D20
....................  
.................... } 
20E0:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
2208:  MOVLW  06
220A:  MOVLB  6
220C:  MOVWF  x2B
220E:  MOVLW  31
2210:  MOVWF  x2A
2212:  MOVFF  62C,63B
2216:  MOVLW  1F
2218:  MOVWF  x3C
221A:  MOVLB  0
221C:  RCALL  1F4E
....................     
....................    if(sombreado==1) 
221E:  MOVLB  6
2220:  DECFSZ x2F,W
2222:  BRA    2278
....................       {glcd_rect(x, y, x+(tamano*6), y+(tamano*8), YES, ON);glcd_text57(x+2, y+1, voltage, tamano, OFF);} 
2224:  MOVF   x30,W
2226:  MULLW  06
2228:  MOVF   FF3,W
222A:  ADDWF  x2D,W
222C:  MOVWF  x3A
222E:  MOVF   x30,W
2230:  MULLW  08
2232:  MOVF   FF3,W
2234:  ADDWF  x2E,W
2236:  MOVWF  x3B
2238:  MOVFF  62D,643
223C:  MOVFF  62E,644
2240:  MOVFF  63A,645
2244:  MOVWF  x46
2246:  MOVLW  01
2248:  MOVWF  x47
224A:  MOVWF  x48
224C:  MOVLB  0
224E:  RCALL  1C5E
2250:  MOVLW  02
2252:  MOVLB  6
2254:  ADDWF  x2D,W
2256:  MOVWF  x3A
2258:  MOVLW  01
225A:  ADDWF  x2E,W
225C:  MOVWF  x3B
225E:  MOVFF  63A,643
2262:  MOVWF  x44
2264:  MOVLW  06
2266:  MOVWF  x46
2268:  MOVLW  31
226A:  MOVWF  x45
226C:  MOVFF  630,647
2270:  CLRF   x48
2272:  MOVLB  0
2274:  RCALL  1D20
2276:  MOVLB  6
....................    if(sombreado==0) 
2278:  MOVF   x2F,F
227A:  BNZ   22D2
....................       {glcd_rect(x, y, x+(tamano*6), y+(tamano*8), YES, OFF);glcd_text57(x+2, y+1, voltage, tamano, ON);} 
227C:  MOVF   x30,W
227E:  MULLW  06
2280:  MOVF   FF3,W
2282:  ADDWF  x2D,W
2284:  MOVWF  x3A
2286:  MOVF   x30,W
2288:  MULLW  08
228A:  MOVF   FF3,W
228C:  ADDWF  x2E,W
228E:  MOVWF  x3B
2290:  MOVFF  62D,643
2294:  MOVFF  62E,644
2298:  MOVFF  63A,645
229C:  MOVWF  x46
229E:  MOVLW  01
22A0:  MOVWF  x47
22A2:  CLRF   x48
22A4:  MOVLB  0
22A6:  RCALL  1C5E
22A8:  MOVLW  02
22AA:  MOVLB  6
22AC:  ADDWF  x2D,W
22AE:  MOVWF  x3A
22B0:  MOVLW  01
22B2:  ADDWF  x2E,W
22B4:  MOVWF  x3B
22B6:  MOVFF  63A,643
22BA:  MOVWF  x44
22BC:  MOVLW  06
22BE:  MOVWF  x46
22C0:  MOVLW  31
22C2:  MOVWF  x45
22C4:  MOVFF  630,647
22C8:  MOVLW  01
22CA:  MOVWF  x48
22CC:  MOVLB  0
22CE:  RCALL  1D20
22D0:  MOVLB  6
....................  
.................... } 
22D2:  MOVLB  0
22D4:  RETLW  00
....................  
.................... void displayMenu(char palabra[100], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
213C:  MOVLB  6
213E:  MOVFF  62C,01
2142:  MOVFF  62D,03
2146:  MOVFF  62C,632
214A:  MOVFF  62D,633
214E:  MOVLW  06
2150:  MOVWF  FEA
2152:  MOVLW  16
2154:  MOVWF  FE9
2156:  MOVFF  62D,FE2
215A:  MOVFF  62C,FE1
215E:  MOVF   FE7,F
2160:  MOVFF  FE6,FEE
2164:  BNZ   215E
....................    if(sombreado==1) 
2166:  DECFSZ x30,W
2168:  BRA    21B4
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
216A:  MOVF   x31,W
216C:  MULLW  08
216E:  MOVF   FF3,W
2170:  ADDWF  x2F,W
2172:  MOVWF  x32
2174:  CLRF   x43
2176:  MOVFF  62F,644
217A:  MOVLW  7F
217C:  MOVWF  x45
217E:  MOVFF  632,646
2182:  MOVLW  01
2184:  MOVWF  x47
2186:  MOVWF  x48
2188:  MOVLB  0
218A:  RCALL  1C5E
218C:  MOVLW  01
218E:  MOVLB  6
2190:  ADDWF  x2E,W
2192:  MOVWF  x32
2194:  MOVLW  01
2196:  ADDWF  x2F,W
2198:  MOVWF  x33
219A:  MOVFF  632,643
219E:  MOVWF  x44
21A0:  MOVLW  06
21A2:  MOVWF  x46
21A4:  MOVLW  16
21A6:  MOVWF  x45
21A8:  MOVFF  631,647
21AC:  CLRF   x48
21AE:  MOVLB  0
21B0:  RCALL  1D20
21B2:  MOVLB  6
....................    if(sombreado==0) 
21B4:  MOVF   x30,F
21B6:  BNZ   2204
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
21B8:  MOVF   x31,W
21BA:  MULLW  08
21BC:  MOVF   FF3,W
21BE:  ADDWF  x2F,W
21C0:  MOVWF  x32
21C2:  CLRF   x43
21C4:  MOVFF  62F,644
21C8:  MOVLW  7F
21CA:  MOVWF  x45
21CC:  MOVFF  632,646
21D0:  MOVLW  01
21D2:  MOVWF  x47
21D4:  CLRF   x48
21D6:  MOVLB  0
21D8:  RCALL  1C5E
21DA:  MOVLW  01
21DC:  MOVLB  6
21DE:  ADDWF  x2E,W
21E0:  MOVWF  x32
21E2:  MOVLW  01
21E4:  ADDWF  x2F,W
21E6:  MOVWF  x33
21E8:  MOVFF  632,643
21EC:  MOVWF  x44
21EE:  MOVLW  06
21F0:  MOVWF  x46
21F2:  MOVLW  16
21F4:  MOVWF  x45
21F6:  MOVFF  631,647
21FA:  MOVLW  01
21FC:  MOVWF  x48
21FE:  MOVLB  0
2200:  RCALL  1D20
2202:  MOVLB  6
....................  
.................... } 
2204:  MOVLB  0
2206:  RETLW  00
....................  
.................... void displayfloat(float adc,int x,int y,int sombreado, int tamano) { 
....................    char voltage[9];     
....................       sprintf(voltage, "%1.2f",adc); // Converts adc to text 
*
2E24:  MOVLW  06
2E26:  MOVLB  6
2E28:  MOVWF  x2B
2E2A:  MOVLW  38
2E2C:  MOVWF  x2A
2E2E:  MOVLW  89
2E30:  MOVWF  FE9
2E32:  MOVFF  633,644
2E36:  MOVFF  632,643
2E3A:  MOVFF  631,642
2E3E:  MOVFF  630,641
2E42:  MOVLW  02
2E44:  MOVWF  x45
2E46:  MOVLB  0
2E48:  BRA    2C6E
....................        
....................    if(sombreado==1) 
2E4A:  MOVLB  6
2E4C:  DECFSZ x36,W
2E4E:  BRA    2EA8
....................       {glcd_rect(x, y, x+(tamano*48), y+(tamano*8), YES, ON);glcd_text57(x+2, y+1, voltage, tamano, OFF);} 
2E50:  MOVF   x37,W
2E52:  MULLW  30
2E54:  MOVF   FF3,W
2E56:  ADDWF  x34,W
2E58:  MOVWF  x41
2E5A:  MOVF   x37,W
2E5C:  MULLW  08
2E5E:  MOVF   FF3,W
2E60:  ADDWF  x35,W
2E62:  MOVWF  x42
2E64:  MOVFF  634,643
2E68:  MOVFF  635,644
2E6C:  MOVFF  641,645
2E70:  MOVWF  x46
2E72:  MOVLW  01
2E74:  MOVWF  x47
2E76:  MOVWF  x48
2E78:  MOVLB  0
2E7A:  CALL   1C5E
2E7E:  MOVLW  02
2E80:  MOVLB  6
2E82:  ADDWF  x34,W
2E84:  MOVWF  x41
2E86:  MOVLW  01
2E88:  ADDWF  x35,W
2E8A:  MOVWF  x42
2E8C:  MOVFF  641,643
2E90:  MOVWF  x44
2E92:  MOVLW  06
2E94:  MOVWF  x46
2E96:  MOVLW  38
2E98:  MOVWF  x45
2E9A:  MOVFF  637,647
2E9E:  CLRF   x48
2EA0:  MOVLB  0
2EA2:  CALL   1D20
2EA6:  MOVLB  6
....................    if(sombreado==0) 
2EA8:  MOVF   x36,F
2EAA:  BNZ   2F06
....................       {glcd_rect(x, y, x+(tamano*48), y+(tamano*8), YES, OFF);glcd_text57(x+2, y+1, voltage, tamano, ON);} 
2EAC:  MOVF   x37,W
2EAE:  MULLW  30
2EB0:  MOVF   FF3,W
2EB2:  ADDWF  x34,W
2EB4:  MOVWF  x41
2EB6:  MOVF   x37,W
2EB8:  MULLW  08
2EBA:  MOVF   FF3,W
2EBC:  ADDWF  x35,W
2EBE:  MOVWF  x42
2EC0:  MOVFF  634,643
2EC4:  MOVFF  635,644
2EC8:  MOVFF  641,645
2ECC:  MOVWF  x46
2ECE:  MOVLW  01
2ED0:  MOVWF  x47
2ED2:  CLRF   x48
2ED4:  MOVLB  0
2ED6:  CALL   1C5E
2EDA:  MOVLW  02
2EDC:  MOVLB  6
2EDE:  ADDWF  x34,W
2EE0:  MOVWF  x41
2EE2:  MOVLW  01
2EE4:  ADDWF  x35,W
2EE6:  MOVWF  x42
2EE8:  MOVFF  641,643
2EEC:  MOVWF  x44
2EEE:  MOVLW  06
2EF0:  MOVWF  x46
2EF2:  MOVLW  38
2EF4:  MOVWF  x45
2EF6:  MOVFF  637,647
2EFA:  MOVLW  01
2EFC:  MOVWF  x48
2EFE:  MOVLB  0
2F00:  CALL   1D20
2F04:  MOVLB  6
....................        
.................... } 
2F06:  MOVLB  0
2F08:  RETLW  00
....................  
.................... Float Leer_Sensor_Flujo(int media) 
.................... { 
....................     if(negativo==10) 
*
2408:  MOVLB  5
240A:  MOVF   x0D,W
240C:  SUBLW  0A
240E:  BNZ   2456
....................     { 
....................       x_uno=Inflow_adc+Diferencia; 
2410:  MOVFF  529,632
2414:  MOVFF  528,631
2418:  MOVLB  0
241A:  CALL   126A
241E:  BCF    FD8.1
2420:  MOVFF  03,638
2424:  MOVFF  02,637
2428:  MOVFF  01,636
242C:  MOVFF  00,635
2430:  MOVFF  571,63C
2434:  MOVFF  570,63B
2438:  MOVFF  56F,63A
243C:  MOVFF  56E,639
2440:  CALL   13FE
2444:  MOVFF  03,58D
2448:  MOVFF  02,58C
244C:  MOVFF  01,58B
2450:  MOVFF  00,58A
2454:  MOVLB  5
....................     } 
....................     if(negativo==20) 
2456:  MOVF   x0D,W
2458:  SUBLW  14
245A:  BNZ   24A0
....................     { 
....................       x_uno=Inflow_adc-Diferencia; 
245C:  MOVFF  529,632
2460:  MOVFF  528,631
2464:  MOVLB  0
2466:  CALL   126A
246A:  BSF    FD8.1
246C:  MOVFF  03,638
2470:  MOVFF  02,637
2474:  MOVFF  01,636
2478:  MOVFF  00,635
247C:  MOVFF  571,63C
2480:  MOVFF  570,63B
2484:  MOVFF  56F,63A
2488:  MOVFF  56E,639
248C:  CALL   13FE
2490:  MOVFF  03,58D
2494:  MOVFF  02,58C
2498:  MOVFF  01,58B
249C:  MOVFF  00,58A
....................     } 
....................     x_cuadrado=x_uno*x_uno; 
24A0:  MOVFF  58D,651
24A4:  MOVFF  58C,650
24A8:  MOVFF  58B,64F
24AC:  MOVFF  58A,64E
24B0:  MOVFF  58D,655
24B4:  MOVFF  58C,654
24B8:  MOVFF  58B,653
24BC:  MOVFF  58A,652
24C0:  MOVLB  0
24C2:  CALL   16B2
24C6:  MOVFF  03,591
24CA:  MOVFF  02,590
24CE:  MOVFF  01,58F
24D2:  MOVFF  00,58E
....................     x_cubo=x_uno*x_cuadrado; 
24D6:  MOVFF  58D,651
24DA:  MOVFF  58C,650
24DE:  MOVFF  58B,64F
24E2:  MOVFF  58A,64E
24E6:  MOVFF  591,655
24EA:  MOVFF  590,654
24EE:  MOVFF  58F,653
24F2:  MOVFF  58E,652
24F6:  CALL   16B2
24FA:  MOVFF  03,595
24FE:  MOVFF  02,594
2502:  MOVFF  01,593
2506:  MOVFF  00,592
....................     Velocidad=(x_cubo*a)+(x_cuadrado*b)+(x_uno*c)+d;  
250A:  MOVFF  595,651
250E:  MOVFF  594,650
2512:  MOVFF  593,64F
2516:  MOVFF  592,64E
251A:  MOVFF  5AD,655
251E:  MOVFF  5AC,654
2522:  MOVFF  5AB,653
2526:  MOVFF  5AA,652
252A:  CALL   16B2
252E:  MOVFF  00,62D
2532:  MOVFF  01,62E
2536:  MOVFF  02,62F
253A:  MOVFF  03,630
253E:  MOVFF  591,651
2542:  MOVFF  590,650
2546:  MOVFF  58F,64F
254A:  MOVFF  58E,64E
254E:  MOVFF  5B1,655
2552:  MOVFF  5B0,654
2556:  MOVFF  5AF,653
255A:  MOVFF  5AE,652
255E:  CALL   16B2
2562:  BCF    FD8.1
2564:  MOVFF  630,638
2568:  MOVFF  62F,637
256C:  MOVFF  62E,636
2570:  MOVFF  62D,635
2574:  MOVFF  03,63C
2578:  MOVFF  02,63B
257C:  MOVFF  01,63A
2580:  MOVFF  00,639
2584:  CALL   13FE
2588:  MOVFF  00,62D
258C:  MOVFF  01,62E
2590:  MOVFF  02,62F
2594:  MOVFF  03,630
2598:  MOVFF  58D,651
259C:  MOVFF  58C,650
25A0:  MOVFF  58B,64F
25A4:  MOVFF  58A,64E
25A8:  MOVFF  5B5,655
25AC:  MOVFF  5B4,654
25B0:  MOVFF  5B3,653
25B4:  MOVFF  5B2,652
25B8:  CALL   16B2
25BC:  BCF    FD8.1
25BE:  MOVFF  630,638
25C2:  MOVFF  62F,637
25C6:  MOVFF  62E,636
25CA:  MOVFF  62D,635
25CE:  MOVFF  03,63C
25D2:  MOVFF  02,63B
25D6:  MOVFF  01,63A
25DA:  MOVFF  00,639
25DE:  CALL   13FE
25E2:  MOVFF  00,62D
25E6:  MOVFF  01,62E
25EA:  MOVFF  02,62F
25EE:  MOVFF  03,630
25F2:  BCF    FD8.1
25F4:  MOVFF  03,638
25F8:  MOVFF  02,637
25FC:  MOVFF  01,636
2600:  MOVFF  00,635
2604:  MOVFF  5B9,63C
2608:  MOVFF  5B8,63B
260C:  MOVFF  5B7,63A
2610:  MOVFF  5B6,639
2614:  CALL   13FE
2618:  MOVFF  03,589
261C:  MOVFF  02,588
2620:  MOVFF  01,587
2624:  MOVFF  00,586
....................     //Velocidad=Velocidad*correccion;//Ajuste de Temperatura 
....................     Velocidad=Velocidad-0.08; 
2628:  BSF    FD8.1
262A:  MOVFF  589,638
262E:  MOVFF  588,637
2632:  MOVFF  587,636
2636:  MOVFF  586,635
263A:  MOVLW  0A
263C:  MOVLB  6
263E:  MOVWF  x3C
2640:  MOVLW  D7
2642:  MOVWF  x3B
2644:  MOVLW  23
2646:  MOVWF  x3A
2648:  MOVLW  7B
264A:  MOVWF  x39
264C:  MOVLB  0
264E:  CALL   13FE
2652:  MOVFF  03,589
2656:  MOVFF  02,588
265A:  MOVFF  01,587
265E:  MOVFF  00,586
....................     if(Velocidad<0.0) 
2662:  MOVFF  589,634
2666:  MOVFF  588,633
266A:  MOVFF  587,632
266E:  MOVFF  586,631
2672:  MOVLB  6
2674:  CLRF   x38
2676:  CLRF   x37
2678:  CLRF   x36
267A:  CLRF   x35
267C:  MOVLB  0
267E:  RCALL  238E
2680:  BNC   268C
....................      {Velocidad=0.0;} 
2682:  MOVLB  5
2684:  CLRF   x89
2686:  CLRF   x88
2688:  CLRF   x87
268A:  CLRF   x86
....................       
....................      if(l>=media) 
268C:  MOVLB  6
268E:  MOVF   x2C,W
2690:  MOVLB  5
2692:  SUBWF  x14,W
2694:  BNC   2698
....................        {l=0;} 
2696:  CLRF   x14
....................       
....................      promedio[l]=Velocidad;l++; 
2698:  MOVF   x14,W
269A:  MULLW  04
269C:  MOVF   FF3,W
269E:  CLRF   03
26A0:  ADDLW  BA
26A2:  MOVWF  FE9
26A4:  MOVLW  05
26A6:  ADDWFC 03,W
26A8:  MOVWF  FEA
26AA:  MOVFF  586,FEF
26AE:  MOVFF  587,FEC
26B2:  MOVFF  588,FEC
26B6:  MOVFF  589,FEC
26BA:  INCF   x14,F
....................      Flujo2=0; 
26BC:  CLRF   xFD
26BE:  CLRF   xFC
26C0:  CLRF   xFB
26C2:  CLRF   xFA
....................         for(h=0;h<=(media-1);h++) 
26C4:  CLRF   x15
26C6:  MOVLW  01
26C8:  MOVLB  6
26CA:  SUBWF  x2C,W
26CC:  MOVLB  5
26CE:  SUBWF  x15,W
26D0:  BZ    26D4
26D2:  BC    2744
....................         { 
....................            Flujo2+=promedio[h]; 
26D4:  MOVF   x15,W
26D6:  MULLW  04
26D8:  MOVF   FF3,W
26DA:  CLRF   03
26DC:  ADDLW  BA
26DE:  MOVWF  FE9
26E0:  MOVLW  05
26E2:  ADDWFC 03,W
26E4:  MOVWF  FEA
26E6:  MOVFF  FEF,00
26EA:  MOVFF  FEC,01
26EE:  MOVFF  FEC,02
26F2:  MOVFF  FEC,03
26F6:  MOVFF  FEA,62E
26FA:  MOVFF  FE9,62D
26FE:  BCF    FD8.1
2700:  MOVFF  5FD,638
2704:  MOVFF  5FC,637
2708:  MOVFF  5FB,636
270C:  MOVFF  5FA,635
2710:  MOVFF  03,63C
2714:  MOVFF  02,63B
2718:  MOVFF  01,63A
271C:  MOVFF  00,639
2720:  MOVLB  0
2722:  CALL   13FE
2726:  MOVFF  62E,FEA
272A:  MOVFF  62D,FE9
272E:  MOVFF  03,5FD
2732:  MOVFF  02,5FC
2736:  MOVFF  01,5FB
273A:  MOVFF  00,5FA
....................         }  
273E:  MOVLB  5
2740:  INCF   x15,F
2742:  BRA    26C6
....................            Flujo2=(Flujo2/media)*Ajuste1;  
2744:  MOVLB  6
2746:  CLRF   x32
2748:  MOVFF  62C,631
274C:  MOVLB  0
274E:  CALL   126A
2752:  MOVFF  5FD,634
2756:  MOVFF  5FC,633
275A:  MOVFF  5FB,632
275E:  MOVFF  5FA,631
2762:  MOVFF  03,638
2766:  MOVFF  02,637
276A:  MOVFF  01,636
276E:  MOVFF  00,635
2772:  CALL   12A0
2776:  MOVFF  00,62D
277A:  MOVFF  01,62E
277E:  MOVFF  02,62F
2782:  MOVFF  03,630
2786:  MOVFF  03,651
278A:  MOVFF  02,650
278E:  MOVFF  01,64F
2792:  MOVFF  00,64E
2796:  MOVFF  599,655
279A:  MOVFF  598,654
279E:  MOVFF  597,653
27A2:  MOVFF  596,652
27A6:  CALL   16B2
27AA:  MOVFF  03,5FD
27AE:  MOVFF  02,5FC
27B2:  MOVFF  01,5FB
27B6:  MOVFF  00,5FA
....................            return Flujo2; 
27BA:  MOVFF  5FA,00
27BE:  MOVFF  5FB,01
27C2:  MOVFF  5FC,02
27C6:  MOVFF  5FD,03
.................... } 
27CA:  GOTO   2A8C (RETURN)
....................  
.................... float Leer_Sensor_Presion(int media){ 
27CE:  MOVLB  6
27D0:  CLRF   x30
27D2:  CLRF   x2F
27D4:  CLRF   x2E
27D6:  CLRF   x2D
....................    float promediopresion=0.0; 
....................     
....................    V1=Filtro_Downflow_adc;  
27D8:  MOVFF  52F,632
27DC:  MOVFF  52E,631
27E0:  MOVLB  0
27E2:  CALL   126A
27E6:  MOVFF  03,609
27EA:  MOVFF  02,608
27EE:  MOVFF  01,607
27F2:  MOVFF  00,606
....................    //V1 = (x_uno*5.0)/1023.0;   //Lectura de Divisor de Voltaje de PT100 con resistencia de 1k (+-10%) 
....................    Presion=(V1/G)-1.0;// Presion=(Voltaje/Ganancia)-1 
27F6:  MOVFF  609,634
27FA:  MOVFF  608,633
27FE:  MOVFF  607,632
2802:  MOVFF  606,631
2806:  MOVFF  611,638
280A:  MOVFF  610,637
280E:  MOVFF  60F,636
2812:  MOVFF  60E,635
2816:  CALL   12A0
281A:  MOVFF  00,631
281E:  MOVFF  01,632
2822:  MOVFF  02,633
2826:  MOVFF  03,634
282A:  BSF    FD8.1
282C:  MOVFF  03,638
2830:  MOVFF  02,637
2834:  MOVFF  01,636
2838:  MOVFF  00,635
283C:  MOVLB  6
283E:  CLRF   x3C
2840:  CLRF   x3B
2842:  CLRF   x3A
2844:  MOVLW  7F
2846:  MOVWF  x39
2848:  MOVLB  0
284A:  CALL   13FE
284E:  MOVFF  03,60D
2852:  MOVFF  02,60C
2856:  MOVFF  01,60B
285A:  MOVFF  00,60A
....................     
....................    if(Presion<0.0) 
285E:  MOVFF  60D,634
2862:  MOVFF  60C,633
2866:  MOVFF  60B,632
286A:  MOVFF  60A,631
286E:  MOVLB  6
2870:  CLRF   x38
2872:  CLRF   x37
2874:  CLRF   x36
2876:  CLRF   x35
2878:  MOVLB  0
287A:  RCALL  238E
287C:  BNC   2888
....................    { 
....................       Presion=0.0; 
287E:  MOVLB  6
2880:  CLRF   x0D
2882:  CLRF   x0C
2884:  CLRF   x0B
2886:  CLRF   x0A
....................    } 
....................  
....................    if(r>media-1) 
2888:  MOVLW  01
288A:  MOVLB  6
288C:  SUBWF  x2C,W
288E:  MOVLB  5
2890:  SUBWF  x13,W
2892:  BZ    2898
2894:  BNC   2898
....................    {r=0;} 
2896:  CLRF   x13
....................    PromPresion[r]=Presion*4.02;r++; 
2898:  MOVF   x13,W
289A:  MULLW  04
289C:  MOVF   FF3,W
289E:  CLRF   03
28A0:  ADDLW  DA
28A2:  MOVWF  FE9
28A4:  MOVLW  05
28A6:  ADDWFC 03,W
28A8:  MOVWF  FEA
28AA:  MOVFF  60D,651
28AE:  MOVFF  60C,650
28B2:  MOVFF  60B,64F
28B6:  MOVFF  60A,64E
28BA:  MOVLW  D7
28BC:  MOVLB  6
28BE:  MOVWF  x55
28C0:  MOVLW  A3
28C2:  MOVWF  x54
28C4:  CLRF   x53
28C6:  MOVLW  81
28C8:  MOVWF  x52
28CA:  MOVLB  0
28CC:  CALL   16B2
28D0:  MOVFF  00,FEF
28D4:  MOVFF  01,FEC
28D8:  MOVFF  02,FEC
28DC:  MOVFF  03,FEC
28E0:  MOVLB  5
28E2:  INCF   x13,F
....................           
....................    for(q=0;q<=(media-1);q++) 
28E4:  CLRF   x12
28E6:  MOVLW  01
28E8:  MOVLB  6
28EA:  SUBWF  x2C,W
28EC:  MOVLB  5
28EE:  SUBWF  x12,W
28F0:  BZ    28F4
28F2:  BC    2964
....................    { 
....................       promediopresion+=PromPresion[q]; 
28F4:  MOVF   x12,W
28F6:  MULLW  04
28F8:  MOVF   FF3,W
28FA:  CLRF   03
28FC:  ADDLW  DA
28FE:  MOVWF  FE9
2900:  MOVLW  05
2902:  ADDWFC 03,W
2904:  MOVWF  FEA
2906:  MOVFF  FEF,00
290A:  MOVFF  FEC,01
290E:  MOVFF  FEC,02
2912:  MOVFF  FEC,03
2916:  MOVFF  FEA,632
291A:  MOVFF  FE9,631
291E:  BCF    FD8.1
2920:  MOVFF  630,638
2924:  MOVFF  62F,637
2928:  MOVFF  62E,636
292C:  MOVFF  62D,635
2930:  MOVFF  03,63C
2934:  MOVFF  02,63B
2938:  MOVFF  01,63A
293C:  MOVFF  00,639
2940:  MOVLB  0
2942:  CALL   13FE
2946:  MOVFF  632,FEA
294A:  MOVFF  631,FE9
294E:  MOVFF  03,630
2952:  MOVFF  02,62F
2956:  MOVFF  01,62E
295A:  MOVFF  00,62D
....................    }  
295E:  MOVLB  5
2960:  INCF   x12,F
2962:  BRA    28E6
....................    promediopresion=promediopresion/media;    
2964:  MOVLB  6
2966:  CLRF   x32
2968:  MOVFF  62C,631
296C:  MOVLB  0
296E:  CALL   126A
2972:  MOVFF  630,634
2976:  MOVFF  62F,633
297A:  MOVFF  62E,632
297E:  MOVFF  62D,631
2982:  MOVFF  03,638
2986:  MOVFF  02,637
298A:  MOVFF  01,636
298E:  MOVFF  00,635
2992:  CALL   12A0
2996:  MOVFF  03,630
299A:  MOVFF  02,62F
299E:  MOVFF  01,62E
29A2:  MOVFF  00,62D
....................     
....................    return promediopresion; 
29A6:  MOVFF  62D,00
29AA:  MOVFF  62E,01
29AE:  MOVFF  62F,02
29B2:  MOVFF  630,03
.................... } 
29B6:  GOTO   2AA2 (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    set_timer1(5536); 
*
10EE:  MOVLW  15
10F0:  MOVWF  FCF
10F2:  MOVLW  A0
10F4:  MOVWF  FCE
....................    tiempos++; 
10F6:  MOVLB  4
10F8:  INCF   x36,F
10FA:  BTFSC  FD8.2
10FC:  INCF   x37,F
....................     
....................    if(flag_latencia==1) 
10FE:  BTFSS  x4E.3
1100:  BRA    110A
....................    { 
....................       t_latencia++;          
1102:  MOVLB  5
1104:  INCF   x32,F
1106:  BTFSC  FD8.2
1108:  INCF   x33,F
....................    } 
....................     
....................    if(t_latencia>=3000) 
110A:  MOVLB  5
110C:  MOVF   x33,W
110E:  SUBLW  0A
1110:  BC    1120
1112:  XORLW  FF
1114:  BNZ   111C
1116:  MOVF   x32,W
1118:  SUBLW  B7
111A:  BC    1120
....................    {Latencia=1;} 
111C:  MOVLB  4
111E:  BSF    x4E.2
....................                  
....................    if(tiempos>=200) 
1120:  MOVLB  4
1122:  MOVF   x37,F
1124:  BNZ   112E
1126:  MOVF   x36,W
1128:  SUBLW  C7
112A:  BTFSC  FD8.0
112C:  BRA    1262
....................    { 
....................       tiempos=0;imprimir=1;inicie++;Lectura=1;tiemporeset++; 
112E:  CLRF   x37
1130:  CLRF   x36
1132:  BSF    x4C.7
1134:  MOVLB  5
1136:  INCF   x0C,F
1138:  MOVLB  4
113A:  BSF    x4E.6
113C:  MOVLB  5
113E:  INCF   x11,F
....................     
....................    if(tiempo_postpurga) 
1140:  MOVLB  4
1142:  BTFSS  x4E.1
1144:  BRA    1182
....................    { 
....................       Tppurga[0]++; 
1146:  MOVLB  5
1148:  INCF   x42,F
....................       if(Tppurga[0]>9) 
114A:  BTFSC  x42.7
114C:  BRA    1158
114E:  MOVF   x42,W
1150:  SUBLW  09
1152:  BC    1158
....................       { 
....................          Tppurga[0]=0; 
1154:  CLRF   x42
....................          Tppurga[1]++; 
1156:  INCF   x43,F
....................       } 
....................       if(Tppurga[1]>5) 
1158:  BTFSC  x43.7
115A:  BRA    1166
115C:  MOVF   x43,W
115E:  SUBLW  05
1160:  BC    1166
....................       {   
....................          Tppurga[1]=0; 
1162:  CLRF   x43
....................          Tppurga[2]++; 
1164:  INCF   x44,F
....................       } 
....................       if(Tppurga[2]>9) 
1166:  BTFSC  x44.7
1168:  BRA    1174
116A:  MOVF   x44,W
116C:  SUBLW  09
116E:  BC    1174
....................       { 
....................          Tppurga[2]=0; 
1170:  CLRF   x44
....................          Tppurga[3]++; 
1172:  INCF   x45,F
....................       } 
....................       if(Tppurga[3]>5) 
1174:  BTFSC  x45.7
1176:  BRA    1180
1178:  MOVF   x45,W
117A:  SUBLW  05
117C:  BC    1180
....................       { 
....................          Tppurga[3]=0; 
117E:  CLRF   x45
1180:  MOVLB  4
....................       } 
....................    } 
....................     
....................    if(tiempo_uv==1) 
1182:  BTFSS  x4D.7
1184:  BRA    1214
....................    { 
....................       minutos_uv++; 
1186:  MOVLB  5
1188:  INCF   x34,F
118A:  BTFSC  FD8.2
118C:  INCF   x35,F
....................       if(minutos_uv>=3600) 
118E:  MOVF   x35,W
1190:  SUBLW  0D
1192:  BC    11DA
1194:  XORLW  FF
1196:  BNZ   119E
1198:  MOVF   x34,W
119A:  SUBLW  0F
119C:  BC    11DA
....................       //if(minutos_uv>=1) 
....................       {  minutos_uv=0; 
119E:  CLRF   x35
11A0:  CLRF   x34
....................          Tuv[0]++; 
11A2:  INCF   x4A,F
....................          if(Tuv[0]>9) 
11A4:  BTFSC  x4A.7
11A6:  BRA    11B2
11A8:  MOVF   x4A,W
11AA:  SUBLW  09
11AC:  BC    11B2
....................          { 
....................             Tuv[0]=0; 
11AE:  CLRF   x4A
....................             Tuv[1]++; 
11B0:  INCF   x4B,F
....................          } 
....................          if(Tuv[1]>9) 
11B2:  BTFSC  x4B.7
11B4:  BRA    11C0
11B6:  MOVF   x4B,W
11B8:  SUBLW  09
11BA:  BC    11C0
....................          { 
....................             Tuv[1]=0; 
11BC:  CLRF   x4B
....................             Tuv[2]++; 
11BE:  INCF   x4C,F
....................          } 
....................          if(Tuv[2]>9) 
11C0:  BTFSC  x4C.7
11C2:  BRA    11CE
11C4:  MOVF   x4C,W
11C6:  SUBLW  09
11C8:  BC    11CE
....................          { 
....................             Tuv[2]=0; 
11CA:  CLRF   x4C
....................             Tuv[3]++; 
11CC:  INCF   x4D,F
....................          } 
....................          if(Tuv[3]>9) 
11CE:  BTFSC  x4D.7
11D0:  BRA    11DA
11D2:  MOVF   x4D,W
11D4:  SUBLW  09
11D6:  BC    11DA
....................          { 
....................             Tuv[3]=0; 
11D8:  CLRF   x4D
....................          } 
....................       }       
....................        
....................          Tempouv[0]++; 
11DA:  INCF   x4E,F
....................          if(Tempouv[0]>9) 
11DC:  BTFSC  x4E.7
11DE:  BRA    11EA
11E0:  MOVF   x4E,W
11E2:  SUBLW  09
11E4:  BC    11EA
....................          { 
....................             Tempouv[0]=0; 
11E6:  CLRF   x4E
....................             Tempouv[1]++; 
11E8:  INCF   x4F,F
....................          } 
....................          if(Tempouv[1]>5) 
11EA:  BTFSC  x4F.7
11EC:  BRA    11F8
11EE:  MOVF   x4F,W
11F0:  SUBLW  05
11F2:  BC    11F8
....................          { 
....................             Tempouv[1]=0; 
11F4:  CLRF   x4F
....................             Tempouv[2]++; 
11F6:  INCF   x50,F
....................          } 
....................          if(Tempouv[2]>9) 
11F8:  BTFSC  x50.7
11FA:  BRA    1206
11FC:  MOVF   x50,W
11FE:  SUBLW  09
1200:  BC    1206
....................          { 
....................             Tempouv[2]=0; 
1202:  CLRF   x50
....................             Tempouv[3]++; 
1204:  INCF   x51,F
....................          } 
....................          if(Tempouv[3]>5) 
1206:  BTFSC  x51.7
1208:  BRA    1212
120A:  MOVF   x51,W
120C:  SUBLW  05
120E:  BC    1212
....................          { 
....................             Tempouv[3]=0; 
1210:  CLRF   x51
1212:  MOVLB  4
....................          } 
....................                
....................    } 
....................     
....................    if(flag_blower==1) 
1214:  BTFSS  x4D.1
1216:  BRA    1222
....................    { 
....................       minutos_trabajo++;  
1218:  MOVLB  5
121A:  INCF   x36,F
121C:  BTFSC  FD8.2
121E:  INCF   x37,F
1220:  MOVLB  4
....................    } 
....................    
....................    if(tiempo_purga==1) 
1222:  BTFSS  x4D.6
1224:  BRA    1262
....................    {                   
....................       Tpurga[0]++; 
1226:  MOVLB  5
1228:  INCF   x3A,F
....................       if(Tpurga[0]>9) 
122A:  BTFSC  x3A.7
122C:  BRA    1238
122E:  MOVF   x3A,W
1230:  SUBLW  09
1232:  BC    1238
....................       { 
....................          Tpurga[0]=0; 
1234:  CLRF   x3A
....................          Tpurga[1]++; 
1236:  INCF   x3B,F
....................       } 
....................       if(Tpurga[1]>5) 
1238:  BTFSC  x3B.7
123A:  BRA    1246
123C:  MOVF   x3B,W
123E:  SUBLW  05
1240:  BC    1246
....................       { 
....................          Tpurga[1]=0; 
1242:  CLRF   x3B
....................          Tpurga[2]++; 
1244:  INCF   x3C,F
....................       } 
....................       if(Tpurga[2]>9) 
1246:  BTFSC  x3C.7
1248:  BRA    1254
124A:  MOVF   x3C,W
124C:  SUBLW  09
124E:  BC    1254
....................       { 
....................          Tpurga[2]=0; 
1250:  CLRF   x3C
....................          Tpurga[3]++; 
1252:  INCF   x3D,F
....................       } 
....................       if(Tpurga[3]>5) 
1254:  BTFSC  x3D.7
1256:  BRA    1260
1258:  MOVF   x3D,W
125A:  SUBLW  05
125C:  BC    1260
....................       { 
....................          Tpurga[3]=0; 
125E:  CLRF   x3D
1260:  MOVLB  4
....................       } 
....................    }        
....................          
....................    } 
.................... } 
....................  
1262:  BCF    F9E.0
1264:  MOVLB  0
1266:  GOTO   0054
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
18D6:  BSF    F93.0
18D8:  MOVLW  02
18DA:  MOVWF  00
18DC:  DECFSZ 00,F
18DE:  BRA    18DC
18E0:  BSF    F93.1
18E2:  MOVLW  02
18E4:  MOVWF  00
18E6:  DECFSZ 00,F
18E8:  BRA    18E6
18EA:  BCF    F8A.0
18EC:  BCF    F93.0
18EE:  MOVLW  02
18F0:  MOVWF  00
18F2:  DECFSZ 00,F
18F4:  BRA    18F2
18F6:  BCF    F8A.1
18F8:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
18FA:  MOVFF  62D,630
18FE:  RCALL  1860
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1900:  MOVFF  62E,630
1904:  RCALL  1860
....................    i2c_write(dato);        // Dato a transmitir 
1906:  MOVFF  62F,630
190A:  RCALL  1860
....................    i2c_stop();             // Fin comunicación 
190C:  BCF    F93.0
190E:  NOP   
1910:  BSF    F93.1
1912:  BTFSS  F81.1
1914:  BRA    1912
1916:  MOVLW  02
1918:  MOVWF  00
191A:  DECFSZ 00,F
191C:  BRA    191A
191E:  BRA    1920
1920:  NOP   
1922:  BSF    F93.0
1924:  MOVLW  02
1926:  MOVWF  00
1928:  DECFSZ 00,F
192A:  BRA    1928
....................  } 
192C:  GOTO   1962 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
29D4:  BSF    F93.0
29D6:  MOVLW  02
29D8:  MOVWF  00
29DA:  DECFSZ 00,F
29DC:  BRA    29DA
29DE:  BSF    F93.1
29E0:  MOVLW  02
29E2:  MOVWF  00
29E4:  DECFSZ 00,F
29E6:  BRA    29E4
29E8:  BCF    F8A.0
29EA:  BCF    F93.0
29EC:  MOVLW  02
29EE:  MOVWF  00
29F0:  DECFSZ 00,F
29F2:  BRA    29F0
29F4:  BCF    F8A.1
29F6:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
29F8:  MOVFF  62C,630
29FC:  MOVLB  0
29FE:  CALL   1860
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
2A02:  MOVFF  62D,630
2A06:  CALL   1860
....................    i2c_start();            // Reinicio 
2A0A:  BSF    F93.0
2A0C:  MOVLW  02
2A0E:  MOVWF  00
2A10:  DECFSZ 00,F
2A12:  BRA    2A10
2A14:  BSF    F93.1
2A16:  MOVLW  02
2A18:  MOVWF  00
2A1A:  DECFSZ 00,F
2A1C:  BRA    2A1A
2A1E:  BTFSS  F81.1
2A20:  BRA    2A1E
2A22:  BCF    F8A.0
2A24:  BCF    F93.0
2A26:  MOVLW  02
2A28:  MOVWF  00
2A2A:  DECFSZ 00,F
2A2C:  BRA    2A2A
2A2E:  BCF    F8A.1
2A30:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
2A32:  MOVLW  01
2A34:  MOVLB  6
2A36:  ADDWF  x2C,W
2A38:  MOVWF  x2E
2A3A:  MOVWF  x30
2A3C:  MOVLB  0
2A3E:  CALL   1860
....................    dato=i2c_read(0);       // Lectura del dato 
2A42:  CLRF   00
2A44:  BRA    22D6
2A46:  MOVFF  01,449
....................    i2c_stop();             // Fin comunicación 
2A4A:  BCF    F93.0
2A4C:  NOP   
2A4E:  BSF    F93.1
2A50:  BTFSS  F81.1
2A52:  BRA    2A50
2A54:  MOVLW  02
2A56:  MOVWF  00
2A58:  DECFSZ 00,F
2A5A:  BRA    2A58
2A5C:  BRA    2A5E
2A5E:  NOP   
2A60:  BSF    F93.0
2A62:  MOVLW  02
2A64:  MOVWF  00
2A66:  DECFSZ 00,F
2A68:  BRA    2A66
.................... } 
....................  
.................... void Lee_Vector(void){ 
....................    Inflow_l=txbuf[0]; 
*
2342:  MOVFF  416,51E
....................    Inflow_h=txbuf[1]; 
2346:  MOVFF  417,51F
....................    Downflow_l=txbuf[2]; 
234A:  MOVFF  418,521
....................    Downflow_h=txbuf[3]; 
234E:  MOVFF  419,520
....................    Vidrio_abajo=txbuf[4]; 
2352:  MOVFF  41A,522
....................    Vidrio_ok=txbuf[5]; 
2356:  MOVFF  41B,523
....................    Filtro_Inflow_l=txbuf[8]; 
235A:  MOVFF  41E,524
....................    Filtro_Inflow_h=txbuf[9]; 
235E:  MOVFF  41F,525
....................    Filtro_Downflow_l=txbuf[6]; 
2362:  MOVFF  41C,526
....................    Filtro_Downflow_h=txbuf[7]; 
2366:  MOVFF  41D,527
....................     
....................    Inflow_adc=make16(Inflow_h,Inflow_l); 
236A:  MOVFF  51F,529
236E:  MOVFF  51E,528
....................    Downflow_adc=make16(Downflow_h,Downflow_l); 
2372:  MOVFF  520,52B
2376:  MOVFF  521,52A
....................     
....................    Filtro_Inflow_adc=make16(Filtro_Inflow_h,Filtro_Inflow_l); 
237A:  MOVFF  525,52D
237E:  MOVFF  524,52C
....................    Filtro_Downflow_adc=make16(Filtro_Downflow_h,Filtro_Downflow_l); 
2382:  MOVFF  527,52F
2386:  MOVFF  526,52E
.................... } 
238A:  GOTO   2A86 (RETURN)
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=LuzBlanca; 
*
17A8:  MOVFF  518,439
....................    SlaveA0Tx[1]=LuzUV; 
17AC:  MOVFF  519,43A
....................    SlaveA0Tx[2]=Motor; 
17B0:  MOVFF  51A,43B
....................    SlaveA0Tx[3]=Toma; 
17B4:  MOVFF  51C,43C
....................    SlaveA0Tx[4]=Alarma; 
17B8:  MOVFF  51B,43D
....................    SlaveA0Tx[5]=(int8)Inflow; 
17BC:  MOVFF  565,62F
17C0:  MOVFF  564,62E
17C4:  MOVFF  563,62D
17C8:  MOVFF  562,62C
17CC:  RCALL  1676
17CE:  MOVFF  01,43E
....................    Inflowdec=100*(Inflow-(int8)Inflow); 
17D2:  MOVFF  565,62F
17D6:  MOVFF  564,62E
17DA:  MOVFF  563,62D
17DE:  MOVFF  562,62C
17E2:  RCALL  1676
17E4:  MOVLB  6
17E6:  CLRF   x32
17E8:  MOVFF  01,631
17EC:  MOVLB  0
17EE:  RCALL  126A
17F0:  BSF    FD8.1
17F2:  MOVFF  565,638
17F6:  MOVFF  564,637
17FA:  MOVFF  563,636
17FE:  MOVFF  562,635
1802:  MOVFF  03,63C
1806:  MOVFF  02,63B
180A:  MOVFF  01,63A
180E:  MOVFF  00,639
1812:  RCALL  13FE
1814:  MOVLB  6
1816:  CLRF   x51
1818:  CLRF   x50
181A:  MOVLW  48
181C:  MOVWF  x4F
181E:  MOVLW  85
1820:  MOVWF  x4E
1822:  MOVFF  03,655
1826:  MOVFF  02,654
182A:  MOVFF  01,653
182E:  MOVFF  00,652
1832:  MOVLB  0
1834:  RCALL  16B2
1836:  MOVFF  03,585
183A:  MOVFF  02,584
183E:  MOVFF  01,583
1842:  MOVFF  00,582
....................    SlaveA0Tx[6]=(int8)Inflowdec; 
1846:  MOVFF  585,62F
184A:  MOVFF  584,62E
184E:  MOVFF  583,62D
1852:  MOVFF  582,62C
1856:  RCALL  1676
1858:  MOVFF  01,43F
.................... } 
185C:  GOTO   1932 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
1930:  BRA    17A8
....................    for(i=0;i<7;i++) 
1932:  MOVLB  4
1934:  CLRF   x38
1936:  MOVF   x38,W
1938:  SUBLW  06
193A:  BNC   1968
....................    { 
....................       direccion=0xA0; 
193C:  MOVLW  A0
193E:  MOVWF  x4A
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
1940:  CLRF   03
1942:  MOVF   x38,W
1944:  ADDLW  39
1946:  MOVWF  FE9
1948:  MOVLW  04
194A:  ADDWFC 03,W
194C:  MOVWF  FEA
194E:  MOVFF  FEF,62C
1952:  MOVFF  44A,62D
1956:  MOVFF  438,62E
195A:  MOVFF  62C,62F
195E:  MOVLB  0
1960:  BRA    18D6
....................    }  
1962:  MOVLB  4
1964:  INCF   x38,F
1966:  BRA    1936
.................... } 
1968:  MOVLB  0
196A:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
29BA:  MOVLB  4
29BC:  CLRF   x38
29BE:  MOVF   x38,W
29C0:  SUBLW  09
29C2:  BNC   2A82
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
29C4:  MOVLW  A0
29C6:  MOVWF  x4A
....................       posicion=i;                         //Posición de memoria a leer 
29C8:  MOVFF  438,44B
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
29CC:  MOVFF  44A,62C
29D0:  MOVFF  44B,62D
....................       txbuf[i]=(int8)dato; 
*
2A6A:  CLRF   03
2A6C:  MOVLB  4
2A6E:  MOVF   x38,W
2A70:  ADDLW  16
2A72:  MOVWF  FE9
2A74:  MOVLW  04
2A76:  ADDWFC 03,W
2A78:  MOVWF  FEA
2A7A:  MOVFF  449,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
2A7E:  INCF   x38,F
2A80:  BRA    29BE
....................    Lee_Vector(); 
2A82:  MOVLB  0
2A84:  BRA    2342
....................    Inflow=Leer_Sensor_Flujo(MediaMovil); 
2A86:  MOVFF  50E,62C
2A8A:  BRA    2408
2A8C:  MOVFF  03,565
2A90:  MOVFF  02,564
2A94:  MOVFF  01,563
2A98:  MOVFF  00,562
....................    Filtro_Downflow=Leer_Sensor_Presion(MediaMovil); 
2A9C:  MOVFF  50E,62C
2AA0:  BRA    27CE
2AA2:  MOVFF  03,56D
2AA6:  MOVFF  02,56C
2AAA:  MOVFF  01,56B
2AAE:  MOVFF  00,56A
.................... } 
2AB2:  RETLW  00
....................  
.................... void main(){ 
*
31EA:  CLRF   FF8
31EC:  BCF    FD0.7
31EE:  BSF    07.7
31F0:  CLRF   FEA
31F2:  CLRF   FE9
31F4:  MOVLB  4
31F6:  CLRF   x37
31F8:  CLRF   x36
31FA:  CLRF   x38
31FC:  CLRF   x49
31FE:  CLRF   x4A
3200:  CLRF   x4B
3202:  BCF    x4C.0
3204:  BCF    x4C.1
3206:  BCF    x4C.2
3208:  BCF    x4C.3
320A:  BCF    x4C.4
320C:  BCF    x4C.5
320E:  BCF    x4C.6
3210:  BCF    x4C.7
3212:  BCF    x4D.0
3214:  BCF    x4D.1
3216:  BCF    x4D.2
3218:  BCF    x4D.3
321A:  BCF    x4D.4
321C:  BCF    x4D.5
321E:  BCF    x4D.6
3220:  BCF    x4D.7
3222:  BCF    x4E.0
3224:  BCF    x4E.1
3226:  BCF    x4E.2
3228:  BCF    x4E.3
322A:  BCF    x4E.4
322C:  BCF    x4E.5
322E:  BCF    x4E.6
3230:  BCF    x4E.7
3232:  MOVLW  C8
3234:  MOVLB  5
3236:  MOVWF  x09
3238:  MOVLW  01
323A:  MOVWF  x0A
323C:  MOVWF  x0B
323E:  CLRF   x0C
3240:  MOVLW  0A
3242:  MOVWF  x0D
3244:  MOVLW  05
3246:  MOVWF  x0E
3248:  CLRF   x0F
324A:  CLRF   x10
324C:  CLRF   x11
324E:  CLRF   x12
3250:  CLRF   x13
3252:  CLRF   x14
3254:  CLRF   x15
3256:  CLRF   x16
3258:  CLRF   x17
325A:  MOVLW  0A
325C:  MOVWF  x18
325E:  MOVWF  x19
3260:  MOVWF  x1A
3262:  MOVWF  x1B
3264:  MOVWF  x1C
3266:  CLRF   x1D
3268:  CLRF   x1E
326A:  CLRF   x1F
326C:  CLRF   x20
326E:  CLRF   x21
3270:  CLRF   x22
3272:  CLRF   x23
3274:  CLRF   x24
3276:  CLRF   x25
3278:  CLRF   x26
327A:  CLRF   x27
327C:  CLRF   x29
327E:  CLRF   x28
3280:  CLRF   x2B
3282:  CLRF   x2A
3284:  CLRF   x2D
3286:  CLRF   x2C
3288:  CLRF   x2F
328A:  CLRF   x2E
328C:  CLRF   x31
328E:  CLRF   x30
3290:  CLRF   x33
3292:  CLRF   x32
3294:  CLRF   x35
3296:  CLRF   x34
3298:  CLRF   x37
329A:  CLRF   x36
329C:  CLRF   x39
329E:  CLRF   x38
32A0:  CLRF   x65
32A2:  CLRF   x64
32A4:  CLRF   x63
32A6:  CLRF   x62
32A8:  CLRF   x69
32AA:  CLRF   x68
32AC:  CLRF   x67
32AE:  CLRF   x66
32B0:  CLRF   x6D
32B2:  CLRF   x6C
32B4:  CLRF   x6B
32B6:  CLRF   x6A
32B8:  CLRF   x71
32BA:  CLRF   x70
32BC:  CLRF   x6F
32BE:  CLRF   x6E
32C0:  CLRF   x75
32C2:  CLRF   x74
32C4:  CLRF   x73
32C6:  CLRF   x72
32C8:  CLRF   x79
32CA:  CLRF   x78
32CC:  CLRF   x77
32CE:  CLRF   x76
32D0:  CLRF   x7D
32D2:  CLRF   x7C
32D4:  CLRF   x7B
32D6:  CLRF   x7A
32D8:  CLRF   x81
32DA:  CLRF   x80
32DC:  CLRF   x7F
32DE:  CLRF   x7E
32E0:  CLRF   x85
32E2:  CLRF   x84
32E4:  CLRF   x83
32E6:  CLRF   x82
32E8:  CLRF   x89
32EA:  CLRF   x88
32EC:  CLRF   x87
32EE:  CLRF   x86
32F0:  CLRF   x8D
32F2:  CLRF   x8C
32F4:  CLRF   x8B
32F6:  CLRF   x8A
32F8:  CLRF   x91
32FA:  CLRF   x90
32FC:  CLRF   x8F
32FE:  CLRF   x8E
3300:  CLRF   x95
3302:  CLRF   x94
3304:  CLRF   x93
3306:  CLRF   x92
3308:  CLRF   x99
330A:  CLRF   x98
330C:  CLRF   x97
330E:  CLRF   x96
3310:  CLRF   x9D
3312:  CLRF   x9C
3314:  CLRF   x9B
3316:  CLRF   x9A
3318:  CLRF   xA1
331A:  CLRF   xA0
331C:  CLRF   x9F
331E:  CLRF   x9E
3320:  CLRF   xA5
3322:  CLRF   xA4
3324:  CLRF   xA3
3326:  CLRF   xA2
3328:  CLRF   xA9
332A:  CLRF   xA8
332C:  CLRF   xA7
332E:  CLRF   xA6
3330:  MOVLW  19
3332:  MOVWF  xAD
3334:  MOVLW  53
3336:  MOVWF  xAC
3338:  MOVLW  18
333A:  MOVWF  xAB
333C:  MOVLW  68
333E:  MOVWF  xAA
3340:  MOVLW  E9
3342:  MOVWF  xB1
3344:  MOVLW  BD
3346:  MOVWF  xB0
3348:  MOVLW  C6
334A:  MOVWF  xAF
334C:  MOVLW  71
334E:  MOVWF  xAE
3350:  MOVLW  BE
3352:  MOVWF  xB5
3354:  MOVLW  96
3356:  MOVWF  xB4
3358:  MOVLW  24
335A:  MOVWF  xB3
335C:  MOVLW  7A
335E:  MOVWF  xB2
3360:  MOVLW  F3
3362:  MOVWF  xB9
3364:  MOVLW  5A
3366:  MOVWF  xB8
3368:  MOVLW  AB
336A:  MOVWF  xB7
336C:  MOVLW  81
336E:  MOVWF  xB6
3370:  CLRF   xFD
3372:  CLRF   xFC
3374:  CLRF   xFB
3376:  CLRF   xFA
3378:  MOVLB  6
337A:  CLRF   x01
337C:  CLRF   x00
337E:  MOVLW  4B
3380:  MOVLB  5
3382:  MOVWF  xFF
3384:  MOVLW  86
3386:  MOVWF  xFE
3388:  MOVLB  6
338A:  CLRF   x05
338C:  CLRF   x04
338E:  CLRF   x03
3390:  CLRF   x02
3392:  CLRF   x09
3394:  CLRF   x08
3396:  CLRF   x07
3398:  CLRF   x06
339A:  CLRF   x0D
339C:  CLRF   x0C
339E:  CLRF   x0B
33A0:  CLRF   x0A
33A2:  CLRF   x11
33A4:  CLRF   x10
33A6:  CLRF   x0F
33A8:  MOVLW  80
33AA:  MOVWF  x0E
33AC:  CLRF   x15
33AE:  CLRF   x14
33B0:  CLRF   x13
33B2:  CLRF   x12
33B4:  MOVF   FC1,W
33B6:  ANDLW  C0
33B8:  IORLW  0F
33BA:  MOVWF  FC1
33BC:  MOVLW  07
33BE:  MOVWF  FB4
33C0:  MOVLW  4A
33C2:  MOVLB  4
33C4:  MOVWF  x4F
33C6:  MOVLW  50
33C8:  MOVWF  x50
33CA:  MOVLW  20
33CC:  MOVWF  x51
33CE:  MOVLW  49
33D0:  MOVWF  x52
33D2:  MOVLW  6E
33D4:  MOVWF  x53
33D6:  MOVLW  67
33D8:  MOVWF  x54
33DA:  MOVLW  6C
33DC:  MOVWF  x55
33DE:  MOVLW  6F
33E0:  MOVWF  x56
33E2:  MOVLW  62
33E4:  MOVWF  x57
33E6:  MOVLW  61
33E8:  MOVWF  x58
33EA:  MOVLW  6C
33EC:  MOVWF  x59
33EE:  CLRF   x5A
33F0:  MOVLW  43
33F2:  MOVWF  x5B
33F4:  MOVLW  61
33F6:  MOVWF  x5C
33F8:  MOVLW  62
33FA:  MOVWF  x5D
33FC:  MOVLW  69
33FE:  MOVWF  x5E
3400:  MOVLW  6E
3402:  MOVWF  x5F
3404:  MOVLW  61
3406:  MOVWF  x60
3408:  MOVLW  20
340A:  MOVWF  x61
340C:  MOVLW  46
340E:  MOVWF  x62
3410:  MOVLW  6C
3412:  MOVWF  x63
3414:  MOVLW  75
3416:  MOVWF  x64
3418:  MOVLW  6A
341A:  MOVWF  x65
341C:  MOVLW  6F
341E:  MOVWF  x66
3420:  MOVLW  20
3422:  MOVWF  x67
3424:  MOVLW  4C
3426:  MOVWF  x68
3428:  MOVLW  61
342A:  MOVWF  x69
342C:  MOVLW  6D
342E:  MOVWF  x6A
3430:  MOVLW  69
3432:  MOVWF  x6B
3434:  MOVLW  6E
3436:  MOVWF  x6C
3438:  MOVLW  61
343A:  MOVWF  x6D
343C:  MOVLW  72
343E:  MOVWF  x6E
3440:  CLRF   x6F
3442:  MOVLW  54
3444:  MOVWF  x70
3446:  MOVLW  20
3448:  MOVWF  x71
344A:  MOVLW  65
344C:  MOVWF  x72
344E:  MOVLW  73
3450:  MOVWF  x73
3452:  MOVLW  74
3454:  MOVWF  x74
3456:  MOVLW  3D
3458:  MOVWF  x75
345A:  CLRF   x76
345C:  MOVLW  3A
345E:  MOVWF  x77
3460:  CLRF   x78
3462:  MOVLW  56
3464:  MOVWF  x79
3466:  MOVLW  65
3468:  MOVWF  x7A
346A:  MOVLW  72
346C:  MOVWF  x7B
346E:  MOVLW  74
3470:  MOVWF  x7C
3472:  MOVLW  69
3474:  MOVWF  x7D
3476:  MOVLW  63
3478:  MOVWF  x7E
347A:  MOVLW  61
347C:  MOVWF  x7F
347E:  MOVLW  6C
3480:  MOVWF  x80
3482:  CLRF   x81
3484:  MOVLW  54
3486:  MOVWF  x82
3488:  MOVLW  69
348A:  MOVWF  x83
348C:  MOVLW  65
348E:  MOVWF  x84
3490:  MOVLW  6D
3492:  MOVWF  x85
3494:  MOVLW  70
3496:  MOVWF  x86
3498:  MOVLW  6F
349A:  MOVWF  x87
349C:  MOVLW  20
349E:  MOVWF  x88
34A0:  MOVLW  64
34A2:  MOVWF  x89
34A4:  MOVLW  65
34A6:  MOVWF  x8A
34A8:  MOVLW  20
34AA:  MOVWF  x8B
34AC:  MOVLW  50
34AE:  MOVWF  x8C
34B0:  MOVLW  75
34B2:  MOVWF  x8D
34B4:  MOVLW  72
34B6:  MOVWF  x8E
34B8:  MOVLW  67
34BA:  MOVWF  x8F
34BC:  MOVLW  61
34BE:  MOVWF  x90
34C0:  CLRF   x91
34C2:  MOVLW  55
34C4:  MOVWF  x92
34C6:  MOVLW  56
34C8:  MOVWF  x93
34CA:  CLRF   x94
34CC:  MOVLW  21
34CE:  MOVWF  x95
34D0:  MOVWF  x96
34D2:  MOVLW  55
34D4:  MOVWF  x97
34D6:  MOVLW  62
34D8:  MOVWF  x98
34DA:  MOVLW  69
34DC:  MOVWF  x99
34DE:  MOVLW  71
34E0:  MOVWF  x9A
34E2:  MOVLW  75
34E4:  MOVWF  x9B
34E6:  MOVLW  65
34E8:  MOVWF  x9C
34EA:  MOVLW  20
34EC:  MOVWF  x9D
34EE:  MOVLW  56
34F0:  MOVWF  x9E
34F2:  MOVLW  69
34F4:  MOVWF  x9F
34F6:  MOVLW  64
34F8:  MOVWF  xA0
34FA:  MOVLW  72
34FC:  MOVWF  xA1
34FE:  MOVLW  69
3500:  MOVWF  xA2
3502:  MOVLW  6F
3504:  MOVWF  xA3
3506:  MOVLW  21
3508:  MOVWF  xA4
350A:  MOVWF  xA5
350C:  CLRF   xA6
350E:  MOVLW  4A
3510:  MOVWF  xA7
3512:  MOVLW  50
3514:  MOVWF  xA8
3516:  MOVLW  43
3518:  MOVWF  xA9
351A:  MOVLW  56
351C:  MOVWF  xAA
351E:  MOVLW  33
3520:  MOVWF  xAB
3522:  MOVLW  36
3524:  MOVWF  xAC
3526:  MOVLW  2D
3528:  MOVWF  xAD
352A:  MOVLW  42
352C:  MOVWF  xAE
352E:  CLRF   xAF
3530:  MOVLW  44
3532:  MOVWF  xB0
3534:  MOVLW  6E
3536:  MOVWF  xB1
3538:  MOVLW  66
353A:  MOVWF  xB2
353C:  MOVLW  6C
353E:  MOVWF  xB3
3540:  MOVLW  6F
3542:  MOVWF  xB4
3544:  MOVLW  77
3546:  MOVWF  xB5
3548:  MOVLW  28
354A:  MOVWF  xB6
354C:  MOVLW  6D
354E:  MOVWF  xB7
3550:  MOVLW  2F
3552:  MOVWF  xB8
3554:  MOVLW  73
3556:  MOVWF  xB9
3558:  MOVLW  29
355A:  MOVWF  xBA
355C:  MOVLW  3A
355E:  MOVWF  xBB
3560:  CLRF   xBC
3562:  MOVLW  46
3564:  MOVWF  xBD
3566:  MOVLW  61
3568:  MOVWF  xBE
356A:  MOVLW  62
356C:  MOVWF  xBF
356E:  MOVLW  72
3570:  MOVWF  xC0
3572:  MOVLW  69
3574:  MOVWF  xC1
3576:  MOVLW  63
3578:  MOVWF  xC2
357A:  MOVLW  61
357C:  MOVWF  xC3
357E:  MOVLW  3A
3580:  MOVWF  xC4
3582:  MOVLW  32
3584:  MOVWF  xC5
3586:  MOVLW  30
3588:  MOVWF  xC6
358A:  MOVLW  33
358C:  MOVWF  xC7
358E:  MOVLW  2E
3590:  MOVWF  xC8
3592:  MOVLW  30
3594:  MOVWF  xC9
3596:  CLRF   xCA
3598:  MOVLW  41
359A:  MOVWF  xCB
359C:  MOVLW  63
359E:  MOVWF  xCC
35A0:  MOVLW  74
35A2:  MOVWF  xCD
35A4:  MOVLW  75
35A6:  MOVWF  xCE
35A8:  MOVLW  61
35AA:  MOVWF  xCF
35AC:  MOVLW  6C
35AE:  MOVWF  xD0
35B0:  MOVLW  3A
35B2:  MOVWF  xD1
35B4:  CLRF   xD2
35B6:  MOVLW  41
35B8:  MOVWF  xD3
35BA:  MOVLW  6A
35BC:  MOVWF  xD4
35BE:  MOVLW  75
35C0:  MOVWF  xD5
35C2:  MOVLW  73
35C4:  MOVWF  xD6
35C6:  MOVLW  74
35C8:  MOVWF  xD7
35CA:  MOVLW  65
35CC:  MOVWF  xD8
35CE:  MOVLW  3A
35D0:  MOVWF  xD9
35D2:  CLRF   xDA
35D4:  MOVLW  55
35D6:  MOVWF  xDB
35D8:  MOVLW  56
35DA:  MOVWF  xDC
35DC:  MOVLW  4C
35DE:  MOVWF  xDD
35E0:  MOVLW  69
35E2:  MOVWF  xDE
35E4:  MOVLW  66
35E6:  MOVWF  xDF
35E8:  MOVLW  65
35EA:  MOVWF  xE0
35EC:  MOVLW  3A
35EE:  MOVWF  xE1
35F0:  CLRF   xE2
35F2:  MOVLW  46
35F4:  MOVWF  xE3
35F6:  MOVLW  69
35F8:  MOVWF  xE4
35FA:  MOVLW  6C
35FC:  MOVWF  xE5
35FE:  MOVLW  74
3600:  MOVWF  xE6
3602:  MOVLW  65
3604:  MOVWF  xE7
3606:  MOVLW  72
3608:  MOVWF  xE8
360A:  MOVLW  3A
360C:  MOVWF  xE9
360E:  CLRF   xEA
3610:  MOVLW  46
3612:  MOVWF  xEB
3614:  MOVLW  61
3616:  MOVWF  xEC
3618:  MOVLW  62
361A:  MOVWF  xED
361C:  MOVLW  72
361E:  MOVWF  xEE
3620:  MOVLW  69
3622:  MOVWF  xEF
3624:  MOVLW  63
3626:  MOVWF  xF0
3628:  MOVLW  61
362A:  MOVWF  xF1
362C:  MOVLW  3A
362E:  MOVWF  xF2
3630:  MOVLW  32
3632:  MOVWF  xF3
3634:  MOVLW  33
3636:  MOVWF  xF4
3638:  MOVLW  35
363A:  MOVWF  xF5
363C:  MOVLW  2E
363E:  MOVWF  xF6
3640:  MOVLW  30
3642:  MOVWF  xF7
3644:  CLRF   xF8
3646:  MOVLW  21
3648:  MOVWF  xF9
364A:  MOVLW  50
364C:  MOVWF  xFA
364E:  MOVLW  65
3650:  MOVWF  xFB
3652:  MOVLW  72
3654:  MOVWF  xFC
3656:  MOVLW  64
3658:  MOVWF  xFD
365A:  MOVLW  69
365C:  MOVWF  xFE
365E:  MOVLW  64
3660:  MOVWF  xFF
3662:  MOVLW  61
3664:  MOVLB  5
3666:  MOVWF  x00
3668:  MOVLW  20
366A:  MOVWF  x01
366C:  MOVLW  46
366E:  MOVWF  x02
3670:  MOVLW  6C
3672:  MOVWF  x03
3674:  MOVLW  75
3676:  MOVWF  x04
3678:  MOVLW  6A
367A:  MOVWF  x05
367C:  MOVLW  6F
367E:  MOVWF  x06
3680:  MOVLW  21
3682:  MOVWF  x07
3684:  CLRF   x08
3686:  CLRF   x3A
3688:  CLRF   x3B
368A:  CLRF   x3C
368C:  CLRF   x3D
368E:  MOVLW  09
3690:  MOVWF  x3E
3692:  CLRF   x3F
3694:  CLRF   x40
3696:  CLRF   x41
3698:  CLRF   x42
369A:  CLRF   x43
369C:  CLRF   x44
369E:  CLRF   x45
36A0:  MOVWF  x46
36A2:  CLRF   x47
36A4:  CLRF   x48
36A6:  CLRF   x49
36A8:  CLRF   x4A
36AA:  CLRF   x4B
36AC:  CLRF   x4C
36AE:  CLRF   x4D
36B0:  CLRF   x4E
36B2:  CLRF   x4F
36B4:  CLRF   x50
36B6:  CLRF   x51
36B8:  CLRF   x52
36BA:  CLRF   x53
36BC:  CLRF   x54
36BE:  CLRF   x55
36C0:  CLRF   x56
36C2:  CLRF   x57
36C4:  CLRF   x58
36C6:  CLRF   x59
36C8:  CLRF   x5A
36CA:  CLRF   x5B
36CC:  CLRF   x5C
36CE:  CLRF   x5D
36D0:  CLRF   x5E
36D2:  CLRF   x5F
36D4:  CLRF   x60
36D6:  CLRF   x61
36D8:  CLRF   xBA
36DA:  CLRF   xBB
36DC:  CLRF   xBC
36DE:  CLRF   xBD
36E0:  CLRF   xBE
36E2:  CLRF   xBF
36E4:  CLRF   xC0
36E6:  CLRF   xC1
36E8:  CLRF   xC2
36EA:  CLRF   xC3
36EC:  CLRF   xC4
36EE:  CLRF   xC5
36F0:  CLRF   xC6
36F2:  CLRF   xC7
36F4:  CLRF   xC8
36F6:  CLRF   xC9
36F8:  CLRF   xCA
36FA:  CLRF   xCB
36FC:  CLRF   xCC
36FE:  CLRF   xCD
3700:  CLRF   xCE
3702:  CLRF   xCF
3704:  CLRF   xD0
3706:  CLRF   xD1
3708:  CLRF   xD2
370A:  CLRF   xD3
370C:  CLRF   xD4
370E:  CLRF   xD5
3710:  CLRF   xD6
3712:  CLRF   xD7
3714:  CLRF   xD8
3716:  CLRF   xD9
3718:  CLRF   xDA
371A:  CLRF   xDB
371C:  CLRF   xDC
371E:  CLRF   xDD
3720:  CLRF   xDE
3722:  CLRF   xDF
3724:  CLRF   xE0
3726:  CLRF   xE1
3728:  CLRF   xE2
372A:  CLRF   xE3
372C:  CLRF   xE4
372E:  CLRF   xE5
3730:  CLRF   xE6
3732:  CLRF   xE7
3734:  CLRF   xE8
3736:  CLRF   xE9
3738:  CLRF   xEA
373A:  CLRF   xEB
373C:  CLRF   xEC
373E:  CLRF   xED
3740:  CLRF   xEE
3742:  CLRF   xEF
3744:  CLRF   xF0
3746:  CLRF   xF1
3748:  CLRF   xF2
374A:  CLRF   xF3
374C:  CLRF   xF4
374E:  CLRF   xF5
3750:  CLRF   xF6
3752:  CLRF   xF7
3754:  CLRF   xF8
3756:  CLRF   xF9
3758:  MOVLB  6
375A:  CLRF   x2A
375C:  CLRF   x2B
....................  
....................    for (posicion=0;posicion<0x10;posicion++) 
375E:  MOVLB  4
3760:  CLRF   x4B
3762:  MOVF   x4B,W
3764:  SUBLW  0F
3766:  BNC   377C
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
3768:  CLRF   03
376A:  MOVF   x4B,W
376C:  ADDLW  39
376E:  MOVWF  FE9
3770:  MOVLW  04
3772:  ADDWFC 03,W
3774:  MOVWF  FEA
3776:  CLRF   FEF
....................    } 
3778:  INCF   x4B,F
377A:  BRA    3762
....................  
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
377C:  MOVLW  85
377E:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
3780:  BSF    F9D.0
....................    enable_interrupts(global);    
3782:  MOVLW  C0
3784:  IORWF  FF2,F
....................     
....................     
....................    Password[0]=read_eeprom(0);Password[1]=read_eeprom(1);Password[2]=read_eeprom(2);Password[3]=read_eeprom(3); 
3786:  MOVFF  FF2,62C
378A:  BCF    FF2.7
378C:  CLRF   FA9
378E:  BCF    FA6.6
3790:  BCF    FA6.7
3792:  BSF    FA6.0
3794:  MOVF   FA8,W
3796:  MOVLB  6
3798:  BTFSC  x2C.7
379A:  BSF    FF2.7
379C:  MOVLB  5
379E:  MOVWF  x5E
37A0:  MOVFF  FF2,62C
37A4:  BCF    FF2.7
37A6:  MOVLW  01
37A8:  MOVWF  FA9
37AA:  BCF    FA6.6
37AC:  BCF    FA6.7
37AE:  BSF    FA6.0
37B0:  MOVF   FA8,W
37B2:  MOVLB  6
37B4:  BTFSC  x2C.7
37B6:  BSF    FF2.7
37B8:  MOVLB  5
37BA:  MOVWF  x5F
37BC:  MOVFF  FF2,62C
37C0:  BCF    FF2.7
37C2:  MOVLW  02
37C4:  MOVWF  FA9
37C6:  BCF    FA6.6
37C8:  BCF    FA6.7
37CA:  BSF    FA6.0
37CC:  MOVF   FA8,W
37CE:  MOVLB  6
37D0:  BTFSC  x2C.7
37D2:  BSF    FF2.7
37D4:  MOVLB  5
37D6:  MOVWF  x60
37D8:  MOVFF  FF2,62C
37DC:  BCF    FF2.7
37DE:  MOVLW  03
37E0:  MOVWF  FA9
37E2:  BCF    FA6.6
37E4:  BCF    FA6.7
37E6:  BSF    FA6.0
37E8:  MOVF   FA8,W
37EA:  MOVLB  6
37EC:  BTFSC  x2C.7
37EE:  BSF    FF2.7
37F0:  MOVLB  5
37F2:  MOVWF  x61
....................    Tpurgap[0]=read_eeprom(4);Tpurgap[1]=read_eeprom(5);Tpurgap[2]=read_eeprom(6);Tpurgap[3]=read_eeprom(7); 
37F4:  MOVFF  FF2,62C
37F8:  BCF    FF2.7
37FA:  MOVLW  04
37FC:  MOVWF  FA9
37FE:  BCF    FA6.6
3800:  BCF    FA6.7
3802:  BSF    FA6.0
3804:  MOVF   FA8,W
3806:  MOVLB  6
3808:  BTFSC  x2C.7
380A:  BSF    FF2.7
380C:  MOVLB  5
380E:  MOVWF  x3E
3810:  MOVFF  FF2,62C
3814:  BCF    FF2.7
3816:  MOVLW  05
3818:  MOVWF  FA9
381A:  BCF    FA6.6
381C:  BCF    FA6.7
381E:  BSF    FA6.0
3820:  MOVF   FA8,W
3822:  MOVLB  6
3824:  BTFSC  x2C.7
3826:  BSF    FF2.7
3828:  MOVLB  5
382A:  MOVWF  x3F
382C:  MOVFF  FF2,62C
3830:  BCF    FF2.7
3832:  MOVLW  06
3834:  MOVWF  FA9
3836:  BCF    FA6.6
3838:  BCF    FA6.7
383A:  BSF    FA6.0
383C:  MOVF   FA8,W
383E:  MOVLB  6
3840:  BTFSC  x2C.7
3842:  BSF    FF2.7
3844:  MOVLB  5
3846:  MOVWF  x40
3848:  MOVFF  FF2,62C
384C:  BCF    FF2.7
384E:  MOVLW  07
3850:  MOVWF  FA9
3852:  BCF    FA6.6
3854:  BCF    FA6.7
3856:  BSF    FA6.0
3858:  MOVF   FA8,W
385A:  MOVLB  6
385C:  BTFSC  x2C.7
385E:  BSF    FF2.7
3860:  MOVLB  5
3862:  MOVWF  x41
....................    Tppurgap[0]=read_eeprom(8);Tppurgap[1]=read_eeprom(9);Tppurgap[2]=read_eeprom(10);Tppurgap[3]=read_eeprom(11); 
3864:  MOVFF  FF2,62C
3868:  BCF    FF2.7
386A:  MOVLW  08
386C:  MOVWF  FA9
386E:  BCF    FA6.6
3870:  BCF    FA6.7
3872:  BSF    FA6.0
3874:  MOVF   FA8,W
3876:  MOVLB  6
3878:  BTFSC  x2C.7
387A:  BSF    FF2.7
387C:  MOVLB  5
387E:  MOVWF  x46
3880:  MOVFF  FF2,62C
3884:  BCF    FF2.7
3886:  MOVLW  09
3888:  MOVWF  FA9
388A:  BCF    FA6.6
388C:  BCF    FA6.7
388E:  BSF    FA6.0
3890:  MOVF   FA8,W
3892:  MOVLB  6
3894:  BTFSC  x2C.7
3896:  BSF    FF2.7
3898:  MOVLB  5
389A:  MOVWF  x47
389C:  MOVFF  FF2,62C
38A0:  BCF    FF2.7
38A2:  MOVLW  0A
38A4:  MOVWF  FA9
38A6:  BCF    FA6.6
38A8:  BCF    FA6.7
38AA:  BSF    FA6.0
38AC:  MOVF   FA8,W
38AE:  MOVLB  6
38B0:  BTFSC  x2C.7
38B2:  BSF    FF2.7
38B4:  MOVLB  5
38B6:  MOVWF  x48
38B8:  MOVFF  FF2,62C
38BC:  BCF    FF2.7
38BE:  MOVLW  0B
38C0:  MOVWF  FA9
38C2:  BCF    FA6.6
38C4:  BCF    FA6.7
38C6:  BSF    FA6.0
38C8:  MOVF   FA8,W
38CA:  MOVLB  6
38CC:  BTFSC  x2C.7
38CE:  BSF    FF2.7
38D0:  MOVLB  5
38D2:  MOVWF  x49
....................    Tuv[0]=read_eeprom(12);Tuv[1]=read_eeprom(13);Tuv[2]=read_eeprom(14);Tuv[3]=read_eeprom(15); 
38D4:  MOVFF  FF2,62C
38D8:  BCF    FF2.7
38DA:  MOVLW  0C
38DC:  MOVWF  FA9
38DE:  BCF    FA6.6
38E0:  BCF    FA6.7
38E2:  BSF    FA6.0
38E4:  MOVF   FA8,W
38E6:  MOVLB  6
38E8:  BTFSC  x2C.7
38EA:  BSF    FF2.7
38EC:  MOVLB  5
38EE:  MOVWF  x4A
38F0:  MOVFF  FF2,62C
38F4:  BCF    FF2.7
38F6:  MOVLW  0D
38F8:  MOVWF  FA9
38FA:  BCF    FA6.6
38FC:  BCF    FA6.7
38FE:  BSF    FA6.0
3900:  MOVF   FA8,W
3902:  MOVLB  6
3904:  BTFSC  x2C.7
3906:  BSF    FF2.7
3908:  MOVLB  5
390A:  MOVWF  x4B
390C:  MOVFF  FF2,62C
3910:  BCF    FF2.7
3912:  MOVLW  0E
3914:  MOVWF  FA9
3916:  BCF    FA6.6
3918:  BCF    FA6.7
391A:  BSF    FA6.0
391C:  MOVF   FA8,W
391E:  MOVLB  6
3920:  BTFSC  x2C.7
3922:  BSF    FF2.7
3924:  MOVLB  5
3926:  MOVWF  x4C
3928:  MOVFF  FF2,62C
392C:  BCF    FF2.7
392E:  MOVLW  0F
3930:  MOVWF  FA9
3932:  BCF    FA6.6
3934:  BCF    FA6.7
3936:  BSF    FA6.0
3938:  MOVF   FA8,W
393A:  MOVLB  6
393C:  BTFSC  x2C.7
393E:  BSF    FF2.7
3940:  MOVLB  5
3942:  MOVWF  x4D
....................    Ttrabajo[0]=read_eeprom(16);Ttrabajo[1]=read_eeprom(17);Ttrabajo[2]=read_eeprom(18);Ttrabajo[3]=read_eeprom(19); 
3944:  MOVFF  FF2,62C
3948:  BCF    FF2.7
394A:  MOVLW  10
394C:  MOVWF  FA9
394E:  BCF    FA6.6
3950:  BCF    FA6.7
3952:  BSF    FA6.0
3954:  MOVF   FA8,W
3956:  MOVLB  6
3958:  BTFSC  x2C.7
395A:  BSF    FF2.7
395C:  MOVLB  5
395E:  MOVWF  x56
3960:  MOVFF  FF2,62C
3964:  BCF    FF2.7
3966:  MOVLW  11
3968:  MOVWF  FA9
396A:  BCF    FA6.6
396C:  BCF    FA6.7
396E:  BSF    FA6.0
3970:  MOVF   FA8,W
3972:  MOVLB  6
3974:  BTFSC  x2C.7
3976:  BSF    FF2.7
3978:  MOVLB  5
397A:  MOVWF  x57
397C:  MOVFF  FF2,62C
3980:  BCF    FF2.7
3982:  MOVLW  12
3984:  MOVWF  FA9
3986:  BCF    FA6.6
3988:  BCF    FA6.7
398A:  BSF    FA6.0
398C:  MOVF   FA8,W
398E:  MOVLB  6
3990:  BTFSC  x2C.7
3992:  BSF    FF2.7
3994:  MOVLB  5
3996:  MOVWF  x58
3998:  MOVFF  FF2,62C
399C:  BCF    FF2.7
399E:  MOVLW  13
39A0:  MOVWF  FA9
39A2:  BCF    FA6.6
39A4:  BCF    FA6.7
39A6:  BSF    FA6.0
39A8:  MOVF   FA8,W
39AA:  MOVLB  6
39AC:  BTFSC  x2C.7
39AE:  BSF    FF2.7
39B0:  MOVLB  5
39B2:  MOVWF  x59
....................    flag_alarma=read_eeprom(20); 
39B4:  MOVFF  FF2,62C
39B8:  BCF    FF2.7
39BA:  MOVLW  14
39BC:  MOVWF  FA9
39BE:  BCF    FA6.6
39C0:  BCF    FA6.7
39C2:  BSF    FA6.0
39C4:  MOVF   FA8,W
39C6:  MOVLB  6
39C8:  BTFSC  x2C.7
39CA:  BSF    FF2.7
39CC:  MOVWF  01
39CE:  MOVLB  4
39D0:  BCF    x4D.4
39D2:  BTFSC  01.0
39D4:  BSF    x4D.4
....................    Tempouvp[0]=read_eeprom(21);Tempouvp[1]=read_eeprom(22);Tempouvp[2]=read_eeprom(23);Tempouvp[3]=read_eeprom(24); 
39D6:  MOVFF  FF2,62C
39DA:  BCF    FF2.7
39DC:  MOVLW  15
39DE:  MOVWF  FA9
39E0:  BCF    FA6.6
39E2:  BCF    FA6.7
39E4:  BSF    FA6.0
39E6:  MOVF   FA8,W
39E8:  MOVLB  6
39EA:  BTFSC  x2C.7
39EC:  BSF    FF2.7
39EE:  MOVLB  5
39F0:  MOVWF  x52
39F2:  MOVFF  FF2,62C
39F6:  BCF    FF2.7
39F8:  MOVLW  16
39FA:  MOVWF  FA9
39FC:  BCF    FA6.6
39FE:  BCF    FA6.7
3A00:  BSF    FA6.0
3A02:  MOVF   FA8,W
3A04:  MOVLB  6
3A06:  BTFSC  x2C.7
3A08:  BSF    FF2.7
3A0A:  MOVLB  5
3A0C:  MOVWF  x53
3A0E:  MOVFF  FF2,62C
3A12:  BCF    FF2.7
3A14:  MOVLW  17
3A16:  MOVWF  FA9
3A18:  BCF    FA6.6
3A1A:  BCF    FA6.7
3A1C:  BSF    FA6.0
3A1E:  MOVF   FA8,W
3A20:  MOVLB  6
3A22:  BTFSC  x2C.7
3A24:  BSF    FF2.7
3A26:  MOVLB  5
3A28:  MOVWF  x54
3A2A:  MOVFF  FF2,62C
3A2E:  BCF    FF2.7
3A30:  MOVLW  18
3A32:  MOVWF  FA9
3A34:  BCF    FA6.6
3A36:  BCF    FA6.7
3A38:  BSF    FA6.0
3A3A:  MOVF   FA8,W
3A3C:  MOVLB  6
3A3E:  BTFSC  x2C.7
3A40:  BSF    FF2.7
3A42:  MOVLB  5
3A44:  MOVWF  x55
....................     
....................    Entero=read_eeprom(25);//Decimal1=read_eeprom(26); 
3A46:  MOVFF  FF2,62C
3A4A:  BCF    FF2.7
3A4C:  MOVLW  19
3A4E:  MOVWF  FA9
3A50:  BCF    FA6.6
3A52:  BCF    FA6.7
3A54:  BSF    FA6.0
3A56:  MOVF   FA8,W
3A58:  MOVLB  6
3A5A:  BTFSC  x2C.7
3A5C:  BSF    FF2.7
3A5E:  MOVLB  5
3A60:  MOVWF  x16
....................    Temporal=read_eeprom(26); 
3A62:  MOVFF  FF2,62C
3A66:  BCF    FF2.7
3A68:  MOVLW  1A
3A6A:  MOVWF  FA9
3A6C:  BCF    FA6.6
3A6E:  BCF    FA6.7
3A70:  BSF    FA6.0
3A72:  MOVF   FA8,W
3A74:  MOVLB  6
3A76:  BTFSC  x2C.7
3A78:  BSF    FF2.7
3A7A:  CLRF   x32
3A7C:  MOVWF  x31
3A7E:  MOVLB  0
3A80:  CALL   126A
3A84:  MOVFF  03,5A5
3A88:  MOVFF  02,5A4
3A8C:  MOVFF  01,5A3
3A90:  MOVFF  00,5A2
....................    Temporal=Temporal/100.0; 
3A94:  MOVFF  5A5,634
3A98:  MOVFF  5A4,633
3A9C:  MOVFF  5A3,632
3AA0:  MOVFF  5A2,631
3AA4:  MOVLB  6
3AA6:  CLRF   x38
3AA8:  CLRF   x37
3AAA:  MOVLW  48
3AAC:  MOVWF  x36
3AAE:  MOVLW  85
3AB0:  MOVWF  x35
3AB2:  MOVLB  0
3AB4:  CALL   12A0
3AB8:  MOVFF  03,5A5
3ABC:  MOVFF  02,5A4
3AC0:  MOVFF  01,5A3
3AC4:  MOVFF  00,5A2
....................    Ajuste1=Entero+Temporal; 
3AC8:  MOVLB  6
3ACA:  CLRF   x32
3ACC:  MOVFF  516,631
3AD0:  MOVLB  0
3AD2:  CALL   126A
3AD6:  BCF    FD8.1
3AD8:  MOVFF  03,638
3ADC:  MOVFF  02,637
3AE0:  MOVFF  01,636
3AE4:  MOVFF  00,635
3AE8:  MOVFF  5A5,63C
3AEC:  MOVFF  5A4,63B
3AF0:  MOVFF  5A3,63A
3AF4:  MOVFF  5A2,639
3AF8:  CALL   13FE
3AFC:  MOVFF  03,599
3B00:  MOVFF  02,598
3B04:  MOVFF  01,597
3B08:  MOVFF  00,596
....................     
....................     
....................    Entero=read_eeprom(27);//Decimal1=read_eeprom(26); 
3B0C:  MOVFF  FF2,62C
3B10:  BCF    FF2.7
3B12:  MOVLW  1B
3B14:  MOVWF  FA9
3B16:  BCF    FA6.6
3B18:  BCF    FA6.7
3B1A:  BSF    FA6.0
3B1C:  MOVF   FA8,W
3B1E:  MOVLB  6
3B20:  BTFSC  x2C.7
3B22:  BSF    FF2.7
3B24:  MOVLB  5
3B26:  MOVWF  x16
....................    Temporal=read_eeprom(28); 
3B28:  MOVFF  FF2,62C
3B2C:  BCF    FF2.7
3B2E:  MOVLW  1C
3B30:  MOVWF  FA9
3B32:  BCF    FA6.6
3B34:  BCF    FA6.7
3B36:  BSF    FA6.0
3B38:  MOVF   FA8,W
3B3A:  MOVLB  6
3B3C:  BTFSC  x2C.7
3B3E:  BSF    FF2.7
3B40:  CLRF   x32
3B42:  MOVWF  x31
3B44:  MOVLB  0
3B46:  CALL   126A
3B4A:  MOVFF  03,5A5
3B4E:  MOVFF  02,5A4
3B52:  MOVFF  01,5A3
3B56:  MOVFF  00,5A2
....................    Temporal=Temporal/100.0; 
3B5A:  MOVFF  5A5,634
3B5E:  MOVFF  5A4,633
3B62:  MOVFF  5A3,632
3B66:  MOVFF  5A2,631
3B6A:  MOVLB  6
3B6C:  CLRF   x38
3B6E:  CLRF   x37
3B70:  MOVLW  48
3B72:  MOVWF  x36
3B74:  MOVLW  85
3B76:  MOVWF  x35
3B78:  MOVLB  0
3B7A:  CALL   12A0
3B7E:  MOVFF  03,5A5
3B82:  MOVFF  02,5A4
3B86:  MOVFF  01,5A3
3B8A:  MOVFF  00,5A2
....................    Ajuste2=Entero+Temporal; 
3B8E:  MOVLB  6
3B90:  CLRF   x32
3B92:  MOVFF  516,631
3B96:  MOVLB  0
3B98:  CALL   126A
3B9C:  BCF    FD8.1
3B9E:  MOVFF  03,638
3BA2:  MOVFF  02,637
3BA6:  MOVFF  01,636
3BAA:  MOVFF  00,635
3BAE:  MOVFF  5A5,63C
3BB2:  MOVFF  5A4,63B
3BB6:  MOVFF  5A3,63A
3BBA:  MOVFF  5A2,639
3BBE:  CALL   13FE
3BC2:  MOVFF  03,59D
3BC6:  MOVFF  02,59C
3BCA:  MOVFF  01,59B
3BCE:  MOVFF  00,59A
....................     
....................     
....................    Entero=read_eeprom(29);//Decimal1=read_eeprom(26); 
3BD2:  MOVFF  FF2,62C
3BD6:  BCF    FF2.7
3BD8:  MOVLW  1D
3BDA:  MOVWF  FA9
3BDC:  BCF    FA6.6
3BDE:  BCF    FA6.7
3BE0:  BSF    FA6.0
3BE2:  MOVF   FA8,W
3BE4:  MOVLB  6
3BE6:  BTFSC  x2C.7
3BE8:  BSF    FF2.7
3BEA:  MOVLB  5
3BEC:  MOVWF  x16
....................    Temporal=read_eeprom(30); 
3BEE:  MOVFF  FF2,62C
3BF2:  BCF    FF2.7
3BF4:  MOVLW  1E
3BF6:  MOVWF  FA9
3BF8:  BCF    FA6.6
3BFA:  BCF    FA6.7
3BFC:  BSF    FA6.0
3BFE:  MOVF   FA8,W
3C00:  MOVLB  6
3C02:  BTFSC  x2C.7
3C04:  BSF    FF2.7
3C06:  CLRF   x32
3C08:  MOVWF  x31
3C0A:  MOVLB  0
3C0C:  CALL   126A
3C10:  MOVFF  03,5A5
3C14:  MOVFF  02,5A4
3C18:  MOVFF  01,5A3
3C1C:  MOVFF  00,5A2
....................    Temporal=Temporal/100.0; 
3C20:  MOVFF  5A5,634
3C24:  MOVFF  5A4,633
3C28:  MOVFF  5A3,632
3C2C:  MOVFF  5A2,631
3C30:  MOVLB  6
3C32:  CLRF   x38
3C34:  CLRF   x37
3C36:  MOVLW  48
3C38:  MOVWF  x36
3C3A:  MOVLW  85
3C3C:  MOVWF  x35
3C3E:  MOVLB  0
3C40:  CALL   12A0
3C44:  MOVFF  03,5A5
3C48:  MOVFF  02,5A4
3C4C:  MOVFF  01,5A3
3C50:  MOVFF  00,5A2
....................    zero_actual=Entero+Temporal; 
3C54:  MOVLB  6
3C56:  CLRF   x32
3C58:  MOVFF  516,631
3C5C:  MOVLB  0
3C5E:  CALL   126A
3C62:  BCF    FD8.1
3C64:  MOVFF  03,638
3C68:  MOVFF  02,637
3C6C:  MOVFF  01,636
3C70:  MOVFF  00,635
3C74:  MOVFF  5A5,63C
3C78:  MOVFF  5A4,63B
3C7C:  MOVFF  5A3,63A
3C80:  MOVFF  5A2,639
3C84:  CALL   13FE
3C88:  MOVFF  03,605
3C8C:  MOVFF  02,604
3C90:  MOVFF  01,603
3C94:  MOVFF  00,602
....................     
....................    Diferencia=make16(read_eeprom(61),read_eeprom(60)); 
3C98:  MOVFF  FF2,62C
3C9C:  BCF    FF2.7
3C9E:  MOVLW  3D
3CA0:  MOVWF  FA9
3CA2:  BCF    FA6.6
3CA4:  BCF    FA6.7
3CA6:  BSF    FA6.0
3CA8:  MOVF   FA8,W
3CAA:  MOVLB  6
3CAC:  BTFSC  x2C.7
3CAE:  BSF    FF2.7
3CB0:  MOVWF  x2D
3CB2:  MOVFF  FF2,62E
3CB6:  BCF    FF2.7
3CB8:  MOVLW  3C
3CBA:  MOVWF  FA9
3CBC:  BCF    FA6.6
3CBE:  BCF    FA6.7
3CC0:  BSF    FA6.0
3CC2:  MOVF   FA8,W
3CC4:  BTFSC  x2E.7
3CC6:  BSF    FF2.7
3CC8:  MOVWF  x2F
3CCA:  MOVFF  62D,03
3CCE:  MOVF   x2F,W
3CD0:  MOVWF  x31
3CD2:  MOVFF  03,632
3CD6:  MOVLB  0
3CD8:  CALL   126A
3CDC:  MOVFF  03,571
3CE0:  MOVFF  02,570
3CE4:  MOVFF  01,56F
3CE8:  MOVFF  00,56E
....................    G=make16(read_eeprom(63),read_eeprom(62)); 
3CEC:  MOVFF  FF2,62C
3CF0:  BCF    FF2.7
3CF2:  MOVLW  3F
3CF4:  MOVWF  FA9
3CF6:  BCF    FA6.6
3CF8:  BCF    FA6.7
3CFA:  BSF    FA6.0
3CFC:  MOVF   FA8,W
3CFE:  MOVLB  6
3D00:  BTFSC  x2C.7
3D02:  BSF    FF2.7
3D04:  MOVWF  x2D
3D06:  MOVFF  FF2,62E
3D0A:  BCF    FF2.7
3D0C:  MOVLW  3E
3D0E:  MOVWF  FA9
3D10:  BCF    FA6.6
3D12:  BCF    FA6.7
3D14:  BSF    FA6.0
3D16:  MOVF   FA8,W
3D18:  BTFSC  x2E.7
3D1A:  BSF    FF2.7
3D1C:  MOVWF  x2F
3D1E:  MOVFF  62D,03
3D22:  MOVF   x2F,W
3D24:  MOVWF  x31
3D26:  MOVFF  03,632
3D2A:  MOVLB  0
3D2C:  CALL   126A
3D30:  MOVFF  03,611
3D34:  MOVFF  02,610
3D38:  MOVFF  01,60F
3D3C:  MOVFF  00,60E
....................    negativo=read_eeprom(50); 
3D40:  MOVFF  FF2,62C
3D44:  BCF    FF2.7
3D46:  MOVLW  32
3D48:  MOVWF  FA9
3D4A:  BCF    FA6.6
3D4C:  BCF    FA6.7
3D4E:  BSF    FA6.0
3D50:  MOVF   FA8,W
3D52:  MOVLB  6
3D54:  BTFSC  x2C.7
3D56:  BSF    FF2.7
3D58:  MOVLB  5
3D5A:  MOVWF  x0D
....................  
....................    while(true){ 
....................  
....................       Envio_Esclavos(); 
3D5C:  MOVLB  0
3D5E:  CALL   1930
....................     
....................       glcd_update(); 
3D62:  CALL   19AC
....................     
....................    if(minutos_trabajo>=3600) // Tiempo de Trabajo 
3D66:  MOVLB  5
3D68:  MOVF   x37,W
3D6A:  SUBLW  0D
3D6C:  BC    3DB4
3D6E:  XORLW  FF
3D70:  BNZ   3D78
3D72:  MOVF   x36,W
3D74:  SUBLW  0F
3D76:  BC    3DB4
....................    { 
....................       minutos_trabajo=0; 
3D78:  CLRF   x37
3D7A:  CLRF   x36
....................       Ttrabajo[0]++; 
3D7C:  INCF   x56,F
....................       if(Ttrabajo[0]>9) 
3D7E:  BTFSC  x56.7
3D80:  BRA    3D8C
3D82:  MOVF   x56,W
3D84:  SUBLW  09
3D86:  BC    3D8C
....................       { 
....................          Ttrabajo[0]=0; 
3D88:  CLRF   x56
....................          Ttrabajo[1]++; 
3D8A:  INCF   x57,F
....................       } 
....................       if(Ttrabajo[1]>9) 
3D8C:  BTFSC  x57.7
3D8E:  BRA    3D9A
3D90:  MOVF   x57,W
3D92:  SUBLW  09
3D94:  BC    3D9A
....................       { 
....................          Ttrabajo[1]=0; 
3D96:  CLRF   x57
....................          Ttrabajo[2]++; 
3D98:  INCF   x58,F
....................       } 
....................       if(Ttrabajo[2]>9) 
3D9A:  BTFSC  x58.7
3D9C:  BRA    3DA8
3D9E:  MOVF   x58,W
3DA0:  SUBLW  09
3DA2:  BC    3DA8
....................       { 
....................          Ttrabajo[2]=0; 
3DA4:  CLRF   x58
....................          Ttrabajo[3]++; 
3DA6:  INCF   x59,F
....................       } 
....................       if(Ttrabajo[3]>9) 
3DA8:  BTFSC  x59.7
3DAA:  BRA    3DB4
3DAC:  MOVF   x59,W
3DAE:  SUBLW  09
3DB0:  BC    3DB4
....................       { 
....................          Ttrabajo[3]=0; 
3DB2:  CLRF   x59
....................       } 
....................    }           
....................     
....................    if(Menu!=2) 
3DB4:  MOVF   x09,W
3DB6:  SUBLW  02
3DB8:  BZ    3DBE
....................       Alarma=10; 
3DBA:  MOVLW  0A
3DBC:  MOVWF  x1B
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3DBE:  MOVF   x09,F
3DC0:  BTFSS  FD8.2
3DC2:  BRA    44A6
....................       glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);    
3DC4:  MOVLB  6
3DC6:  CLRF   x43
3DC8:  CLRF   x44
3DCA:  MOVLW  7F
3DCC:  MOVWF  x45
3DCE:  MOVLW  19
3DD0:  MOVWF  x46
3DD2:  MOVLW  01
3DD4:  MOVWF  x47
3DD6:  MOVWF  x48
3DD8:  MOVLB  0
3DDA:  CALL   1C5E
3DDE:  MOVLW  06
3DE0:  MOVWF  FEA
3DE2:  MOVLW  16
3DE4:  MOVWF  FE9
3DE6:  MOVFF  FF2,62C
3DEA:  BCF    FF2.7
3DEC:  MOVLW  00
3DEE:  CALL   0EEE
3DF2:  TBLRD*-
3DF4:  TBLRD*+
3DF6:  MOVF   FF5,W
3DF8:  MOVWF  FEE
3DFA:  IORLW  00
3DFC:  BNZ   3DF4
3DFE:  MOVLB  6
3E00:  BTFSC  x2C.7
3E02:  BSF    FF2.7
3E04:  MOVLW  19
3E06:  MOVWF  x43
3E08:  MOVLW  01
3E0A:  MOVWF  x44
3E0C:  MOVLW  06
3E0E:  MOVWF  x46
3E10:  MOVLW  16
3E12:  MOVWF  x45
3E14:  MOVLW  03
3E16:  MOVWF  x47
3E18:  CLRF   x48
3E1A:  MOVLB  0
3E1C:  CALL   1D20
....................       flag_latencia=1; 
3E20:  MOVLB  4
3E22:  BSF    x4E.3
....................        
....................       if(UP)//Si oprime hacia arriba 
3E24:  BSF    F92.0
3E26:  BTFSS  F80.0
3E28:  BRA    3F0E
....................       { 
....................          flag_latencia=0;t_latencia=0; 
3E2A:  BCF    x4E.3
3E2C:  MOVLB  5
3E2E:  CLRF   x33
3E30:  CLRF   x32
....................          if(Flanco == 0) 
3E32:  MOVLB  4
3E34:  BTFSC  x4C.0
3E36:  BRA    3F0C
....................          { 
....................             Flanco = 1;delay_ms(30); 
3E38:  BSF    x4C.0
3E3A:  MOVLW  1E
3E3C:  MOVLB  6
3E3E:  MOVWF  x2D
3E40:  MOVLB  0
3E42:  CALL   1ED8
....................             for(i=1;i<=4;i++) 
3E46:  MOVLW  01
3E48:  MOVLB  4
3E4A:  MOVWF  x38
3E4C:  MOVF   x38,W
3E4E:  SUBLW  04
3E50:  BNC   3F0C
....................             { 
....................                if(unidad==i) 
3E52:  MOVF   x38,W
3E54:  MOVLB  5
3E56:  SUBWF  x0A,W
3E58:  BNZ   3ED2
....................                { 
....................                   Contrasena[i-1]++; 
3E5A:  MOVLW  01
3E5C:  MOVLB  4
3E5E:  SUBWF  x38,W
3E60:  CLRF   03
3E62:  ADDLW  5A
3E64:  MOVWF  FE9
3E66:  MOVLW  05
3E68:  ADDWFC 03,W
3E6A:  MOVWF  FEA
3E6C:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9) 
3E6E:  MOVLW  01
3E70:  SUBWF  x38,W
3E72:  CLRF   03
3E74:  ADDLW  5A
3E76:  MOVWF  FE9
3E78:  MOVLW  05
3E7A:  ADDWFC 03,W
3E7C:  MOVWF  FEA
3E7E:  BTFSC  FEF.7
3E80:  BRA    3E9A
3E82:  MOVF   FEF,W
3E84:  SUBLW  09
3E86:  BC    3E9A
....................                   { 
....................                      Contrasena[i-1]=0; 
3E88:  MOVLW  01
3E8A:  SUBWF  x38,W
3E8C:  CLRF   03
3E8E:  ADDLW  5A
3E90:  MOVWF  FE9
3E92:  MOVLW  05
3E94:  ADDWFC 03,W
3E96:  MOVWF  FEA
3E98:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
3E9A:  MOVLW  01
3E9C:  SUBWF  x38,W
3E9E:  CLRF   03
3EA0:  ADDLW  5A
3EA2:  MOVWF  FE9
3EA4:  MOVLW  05
3EA6:  ADDWFC 03,W
3EA8:  MOVWF  FEA
3EAA:  MOVFF  FEF,62C
3EAE:  MOVF   x38,W
3EB0:  MULLW  14
3EB2:  MOVFF  FF3,62D
3EB6:  MOVLB  6
3EB8:  MOVFF  62C,62E
3EBC:  MOVFF  62D,62F
3EC0:  MOVLW  1E
3EC2:  MOVWF  x30
3EC4:  MOVLW  01
3EC6:  MOVWF  x31
3EC8:  MOVLB  0
3ECA:  CALL   202C
....................                } 
....................                else 
3ECE:  BRA    3F06
3ED0:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3ED2:  MOVLW  01
3ED4:  MOVLB  4
3ED6:  SUBWF  x38,W
3ED8:  CLRF   03
3EDA:  ADDLW  5A
3EDC:  MOVWF  FE9
3EDE:  MOVLW  05
3EE0:  ADDWFC 03,W
3EE2:  MOVWF  FEA
3EE4:  MOVFF  FEF,62C
3EE8:  MOVF   x38,W
3EEA:  MULLW  14
3EEC:  MOVFF  FF3,62D
3EF0:  MOVLB  6
3EF2:  MOVFF  62C,62E
3EF6:  MOVFF  62D,62F
3EFA:  MOVLW  1E
3EFC:  MOVWF  x30
3EFE:  CLRF   x31
3F00:  MOVLB  0
3F02:  CALL   202C
....................                } 
....................             } 
3F06:  MOVLB  4
3F08:  INCF   x38,F
3F0A:  BRA    3E4C
....................          } 
....................       } 
....................       else 
3F0C:  BRA    3F10
....................       { 
....................          Flanco = 0; 
3F0E:  BCF    x4C.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3F10:  BSF    F92.1
3F12:  BTFSS  F80.1
3F14:  BRA    3FF8
....................       { 
....................          flag_latencia=0;t_latencia=0; 
3F16:  BCF    x4E.3
3F18:  MOVLB  5
3F1A:  CLRF   x33
3F1C:  CLRF   x32
....................          if(Flanco2 == 0) 
3F1E:  MOVLB  4
3F20:  BTFSC  x4C.2
3F22:  BRA    3FF6
....................          { 
....................             Flanco2 = 1;delay_ms(30); 
3F24:  BSF    x4C.2
3F26:  MOVLW  1E
3F28:  MOVLB  6
3F2A:  MOVWF  x2D
3F2C:  MOVLB  0
3F2E:  CALL   1ED8
....................             for(i=1;i<=4;i++) 
3F32:  MOVLW  01
3F34:  MOVLB  4
3F36:  MOVWF  x38
3F38:  MOVF   x38,W
3F3A:  SUBLW  04
3F3C:  BNC   3FF6
....................             { 
....................                if(unidad==i) 
3F3E:  MOVF   x38,W
3F40:  MOVLB  5
3F42:  SUBWF  x0A,W
3F44:  BNZ   3FBC
....................                { 
....................                   Contrasena[i-1]--; 
3F46:  MOVLW  01
3F48:  MOVLB  4
3F4A:  SUBWF  x38,W
3F4C:  CLRF   03
3F4E:  ADDLW  5A
3F50:  MOVWF  FE9
3F52:  MOVLW  05
3F54:  ADDWFC 03,W
3F56:  MOVWF  FEA
3F58:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0) 
3F5A:  MOVLW  01
3F5C:  SUBWF  x38,W
3F5E:  CLRF   03
3F60:  ADDLW  5A
3F62:  MOVWF  FE9
3F64:  MOVLW  05
3F66:  ADDWFC 03,W
3F68:  MOVWF  FEA
3F6A:  BTFSC  FEF.7
3F6C:  BRA    3F70
3F6E:  BRA    3F84
....................                   { 
....................                      Contrasena[i-1]=9;} 
3F70:  MOVLW  01
3F72:  SUBWF  x38,W
3F74:  CLRF   03
3F76:  ADDLW  5A
3F78:  MOVWF  FE9
3F7A:  MOVLW  05
3F7C:  ADDWFC 03,W
3F7E:  MOVWF  FEA
3F80:  MOVLW  09
3F82:  MOVWF  FEF
....................                      displayContrasena(Contrasena[i-1],i*20,30,1); 
3F84:  MOVLW  01
3F86:  SUBWF  x38,W
3F88:  CLRF   03
3F8A:  ADDLW  5A
3F8C:  MOVWF  FE9
3F8E:  MOVLW  05
3F90:  ADDWFC 03,W
3F92:  MOVWF  FEA
3F94:  MOVFF  FEF,62C
3F98:  MOVF   x38,W
3F9A:  MULLW  14
3F9C:  MOVFF  FF3,62D
3FA0:  MOVLB  6
3FA2:  MOVFF  62C,62E
3FA6:  MOVFF  62D,62F
3FAA:  MOVLW  1E
3FAC:  MOVWF  x30
3FAE:  MOVLW  01
3FB0:  MOVWF  x31
3FB2:  MOVLB  0
3FB4:  CALL   202C
....................                } 
....................                else 
3FB8:  BRA    3FF0
3FBA:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3FBC:  MOVLW  01
3FBE:  MOVLB  4
3FC0:  SUBWF  x38,W
3FC2:  CLRF   03
3FC4:  ADDLW  5A
3FC6:  MOVWF  FE9
3FC8:  MOVLW  05
3FCA:  ADDWFC 03,W
3FCC:  MOVWF  FEA
3FCE:  MOVFF  FEF,62C
3FD2:  MOVF   x38,W
3FD4:  MULLW  14
3FD6:  MOVFF  FF3,62D
3FDA:  MOVLB  6
3FDC:  MOVFF  62C,62E
3FE0:  MOVFF  62D,62F
3FE4:  MOVLW  1E
3FE6:  MOVWF  x30
3FE8:  CLRF   x31
3FEA:  MOVLB  0
3FEC:  CALL   202C
....................                } 
....................             }       
3FF0:  MOVLB  4
3FF2:  INCF   x38,F
3FF4:  BRA    3F38
....................          }      
....................       } 
....................       else 
3FF6:  BRA    3FFA
....................       { 
....................          Flanco2 = 0; 
3FF8:  BCF    x4C.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
3FFA:  BSF    F92.2
3FFC:  BTFSS  F80.2
3FFE:  BRA    40AA
....................       { 
....................          flag_latencia=0;t_latencia=0; 
4000:  BCF    x4E.3
4002:  MOVLB  5
4004:  CLRF   x33
4006:  CLRF   x32
....................          if(Flanco1 == 0) 
4008:  MOVLB  4
400A:  BTFSC  x4C.1
400C:  BRA    40A8
....................          { 
....................             Flanco1 = 1;delay_ms(30);unidad++; 
400E:  BSF    x4C.1
4010:  MOVLW  1E
4012:  MOVLB  6
4014:  MOVWF  x2D
4016:  MOVLB  0
4018:  CALL   1ED8
401C:  MOVLB  5
401E:  INCF   x0A,F
....................             for(i=1;i<=4;i++) 
4020:  MOVLW  01
4022:  MOVLB  4
4024:  MOVWF  x38
4026:  MOVF   x38,W
4028:  SUBLW  04
402A:  BNC   40A8
....................             { 
....................                if(unidad==i) 
402C:  MOVF   x38,W
402E:  MOVLB  5
4030:  SUBWF  x0A,W
4032:  BNZ   406E
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
4034:  MOVLW  01
4036:  MOVLB  4
4038:  SUBWF  x38,W
403A:  CLRF   03
403C:  ADDLW  5A
403E:  MOVWF  FE9
4040:  MOVLW  05
4042:  ADDWFC 03,W
4044:  MOVWF  FEA
4046:  MOVFF  FEF,62C
404A:  MOVF   x38,W
404C:  MULLW  14
404E:  MOVFF  FF3,62D
4052:  MOVLB  6
4054:  MOVFF  62C,62E
4058:  MOVFF  62D,62F
405C:  MOVLW  1E
405E:  MOVWF  x30
4060:  MOVLW  01
4062:  MOVWF  x31
4064:  MOVLB  0
4066:  CALL   202C
....................                } 
....................                else 
406A:  BRA    40A2
406C:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
406E:  MOVLW  01
4070:  MOVLB  4
4072:  SUBWF  x38,W
4074:  CLRF   03
4076:  ADDLW  5A
4078:  MOVWF  FE9
407A:  MOVLW  05
407C:  ADDWFC 03,W
407E:  MOVWF  FEA
4080:  MOVFF  FEF,62C
4084:  MOVF   x38,W
4086:  MULLW  14
4088:  MOVFF  FF3,62D
408C:  MOVLB  6
408E:  MOVFF  62C,62E
4092:  MOVFF  62D,62F
4096:  MOVLW  1E
4098:  MOVWF  x30
409A:  CLRF   x31
409C:  MOVLB  0
409E:  CALL   202C
....................                } 
....................             } 
40A2:  MOVLB  4
40A4:  INCF   x38,F
40A6:  BRA    4026
....................          } 
....................       } 
....................       else 
40A8:  BRA    40AC
....................       { 
....................          Flanco1 = 0; 
40AA:  BCF    x4C.1
....................       } 
....................      
....................       if(unidad>4) 
40AC:  MOVLB  5
40AE:  MOVF   x0A,W
40B0:  SUBLW  04
40B2:  BTFSC  FD8.0
40B4:  BRA    44A6
....................       { 
....................          glcd_fillScreen(OFF);unidad=4;flag_latencia=0;t_latencia=0; 
40B6:  MOVLB  6
40B8:  CLRF   x2D
40BA:  MOVLB  0
40BC:  CALL   20E2
40C0:  MOVLW  04
40C2:  MOVLB  5
40C4:  MOVWF  x0A
40C6:  MOVLB  4
40C8:  BCF    x4E.3
40CA:  MOVLB  5
40CC:  CLRF   x33
40CE:  CLRF   x32
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
40D0:  MOVF   x5A,W
40D2:  SUBLW  03
40D4:  BNZ   41BA
40D6:  MOVF   x5B,W
40D8:  SUBLW  08
40DA:  BNZ   41BA
40DC:  MOVF   x5C,W
40DE:  SUBLW  09
40E0:  BNZ   41BA
40E2:  MOVF   x5D,W
40E4:  SUBLW  02
40E6:  BNZ   41BA
....................          { 
....................             write_eeprom(0,0);delay_ms(20);write_eeprom(1,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
40E8:  CLRF   FA9
40EA:  CLRF   FA8
40EC:  BCF    FA6.6
40EE:  BCF    FA6.7
40F0:  BSF    FA6.2
40F2:  MOVF   FF2,W
40F4:  MOVWF  00
40F6:  BCF    FF2.7
40F8:  MOVLB  F
40FA:  MOVLW  55
40FC:  MOVWF  FA7
40FE:  MOVLW  AA
4100:  MOVWF  FA7
4102:  BSF    FA6.1
4104:  BTFSC  FA6.1
4106:  BRA    4104
4108:  BCF    FA6.2
410A:  MOVF   00,W
410C:  IORWF  FF2,F
410E:  MOVLW  14
4110:  MOVLB  6
4112:  MOVWF  x2D
4114:  MOVLB  0
4116:  CALL   1ED8
411A:  MOVLW  01
411C:  MOVWF  FA9
411E:  CLRF   FA8
4120:  BCF    FA6.6
4122:  BCF    FA6.7
4124:  BSF    FA6.2
4126:  MOVF   FF2,W
4128:  MOVWF  00
412A:  BCF    FF2.7
412C:  MOVLB  F
412E:  MOVLW  55
4130:  MOVWF  FA7
4132:  MOVLW  AA
4134:  MOVWF  FA7
4136:  BSF    FA6.1
4138:  BTFSC  FA6.1
413A:  BRA    4138
413C:  BCF    FA6.2
413E:  MOVF   00,W
4140:  IORWF  FF2,F
4142:  MOVLW  14
4144:  MOVLB  6
4146:  MOVWF  x2D
4148:  MOVLB  0
414A:  CALL   1ED8
....................             write_eeprom(2,0);delay_ms(20);write_eeprom(3,0);delay_ms(20); 
414E:  MOVLW  02
4150:  MOVWF  FA9
4152:  CLRF   FA8
4154:  BCF    FA6.6
4156:  BCF    FA6.7
4158:  BSF    FA6.2
415A:  MOVF   FF2,W
415C:  MOVWF  00
415E:  BCF    FF2.7
4160:  MOVLB  F
4162:  MOVLW  55
4164:  MOVWF  FA7
4166:  MOVLW  AA
4168:  MOVWF  FA7
416A:  BSF    FA6.1
416C:  BTFSC  FA6.1
416E:  BRA    416C
4170:  BCF    FA6.2
4172:  MOVF   00,W
4174:  IORWF  FF2,F
4176:  MOVLW  14
4178:  MOVLB  6
417A:  MOVWF  x2D
417C:  MOVLB  0
417E:  CALL   1ED8
4182:  MOVLW  03
4184:  MOVWF  FA9
4186:  CLRF   FA8
4188:  BCF    FA6.6
418A:  BCF    FA6.7
418C:  BSF    FA6.2
418E:  MOVF   FF2,W
4190:  MOVWF  00
4192:  BCF    FF2.7
4194:  MOVLB  F
4196:  MOVLW  55
4198:  MOVWF  FA7
419A:  MOVLW  AA
419C:  MOVWF  FA7
419E:  BSF    FA6.1
41A0:  BTFSC  FA6.1
41A2:  BRA    41A0
41A4:  BCF    FA6.2
41A6:  MOVF   00,W
41A8:  IORWF  FF2,F
41AA:  MOVLW  14
41AC:  MOVLB  6
41AE:  MOVWF  x2D
41B0:  MOVLB  0
41B2:  CALL   1ED8
....................             reset_cpu(); 
41B6:  RESET
41B8:  MOVLB  5
....................          } 
....................        
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
41BA:  MOVF   x5E,W
41BC:  SUBWF  x5A,W
41BE:  BTFSS  FD8.2
41C0:  BRA    432C
41C2:  MOVF   x5F,W
41C4:  SUBWF  x5B,W
41C6:  BTFSS  FD8.2
41C8:  BRA    432C
41CA:  MOVF   x60,W
41CC:  SUBWF  x5C,W
41CE:  BTFSS  FD8.2
41D0:  BRA    432C
41D2:  MOVF   x61,W
41D4:  SUBWF  x5D,W
41D6:  BTFSS  FD8.2
41D8:  BRA    432C
....................          { 
....................             glcd_fillScreen(OFF); 
41DA:  MOVLB  6
41DC:  CLRF   x2D
41DE:  MOVLB  0
41E0:  CALL   20E2
....................             strcpy(Menus.Letra,"Clave"); 
41E4:  MOVLW  06
41E6:  MOVWF  FEA
41E8:  MOVLW  16
41EA:  MOVWF  FE9
41EC:  MOVFF  FF2,62C
41F0:  BCF    FF2.7
41F2:  MOVLW  00
41F4:  CALL   0EEE
41F8:  TBLRD*-
41FA:  TBLRD*+
41FC:  MOVF   FF5,W
41FE:  MOVWF  FEE
4200:  IORLW  00
4202:  BNZ   41FA
4204:  MOVLB  6
4206:  BTFSC  x2C.7
4208:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
420A:  MOVLW  06
420C:  MOVWF  x2D
420E:  MOVLW  16
4210:  MOVWF  x2C
4212:  MOVLW  1E
4214:  MOVWF  x2E
4216:  CLRF   x2F
4218:  CLRF   x30
421A:  MOVLW  02
421C:  MOVWF  x31
421E:  MOVLB  0
4220:  CALL   213C
....................             strcpy(Menus.Letra,"Correcta"); 
4224:  MOVLW  06
4226:  MOVWF  FEA
4228:  MOVLW  16
422A:  MOVWF  FE9
422C:  MOVFF  FF2,62C
4230:  BCF    FF2.7
4232:  MOVLW  00
4234:  CALL   0F0E
4238:  TBLRD*-
423A:  TBLRD*+
423C:  MOVF   FF5,W
423E:  MOVWF  FEE
4240:  IORLW  00
4242:  BNZ   423A
4244:  MOVLB  6
4246:  BTFSC  x2C.7
4248:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
424A:  MOVLW  06
424C:  MOVWF  x2D
424E:  MOVLW  16
4250:  MOVWF  x2C
4252:  MOVLW  0F
4254:  MOVWF  x2E
4256:  MOVLW  1E
4258:  MOVWF  x2F
425A:  CLRF   x30
425C:  MOVLW  02
425E:  MOVWF  x31
4260:  MOVLB  0
4262:  CALL   213C
....................             Menu=1;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
4266:  MOVLW  01
4268:  MOVLB  5
426A:  MOVWF  x09
426C:  MOVLB  0
426E:  CALL   19AC
4272:  MOVLW  04
4274:  MOVLB  6
4276:  MOVWF  x2C
4278:  MOVLW  FA
427A:  MOVWF  x2D
427C:  MOVLB  0
427E:  CALL   1ED8
4282:  MOVLB  6
4284:  DECFSZ x2C,F
4286:  BRA    4278
4288:  CLRF   x2D
428A:  MOVLB  0
428C:  CALL   20E2
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4290:  MOVLB  5
4292:  CLRF   x5A
4294:  CLRF   x5B
4296:  CLRF   x5C
4298:  CLRF   x5D
....................             displayTiempo(Tpurga[3],20,20,0,2);displayTiempo(Tpurga[2],40,20,0,2);glcd_text57(60, 22, Dos_puntos, 2, ON); 
429A:  MOVFF  53D,62C
429E:  MOVLW  14
42A0:  MOVLB  6
42A2:  MOVWF  x2D
42A4:  MOVWF  x2E
42A6:  CLRF   x2F
42A8:  MOVLW  02
42AA:  MOVWF  x30
42AC:  MOVLB  0
42AE:  CALL   2208
42B2:  MOVFF  53C,62C
42B6:  MOVLW  28
42B8:  MOVLB  6
42BA:  MOVWF  x2D
42BC:  MOVLW  14
42BE:  MOVWF  x2E
42C0:  CLRF   x2F
42C2:  MOVLW  02
42C4:  MOVWF  x30
42C6:  MOVLB  0
42C8:  CALL   2208
42CC:  MOVLW  3C
42CE:  MOVLB  6
42D0:  MOVWF  x43
42D2:  MOVLW  16
42D4:  MOVWF  x44
42D6:  MOVLW  04
42D8:  MOVWF  x46
42DA:  MOVLW  77
42DC:  MOVWF  x45
42DE:  MOVLW  02
42E0:  MOVWF  x47
42E2:  MOVLW  01
42E4:  MOVWF  x48
42E6:  MOVLB  0
42E8:  CALL   1D20
....................             displayTiempo(Tpurga[1],70,20,0,2);displayTiempo(Tpurga[0],90,20,0,2); 
42EC:  MOVFF  53B,62C
42F0:  MOVLW  46
42F2:  MOVLB  6
42F4:  MOVWF  x2D
42F6:  MOVLW  14
42F8:  MOVWF  x2E
42FA:  CLRF   x2F
42FC:  MOVLW  02
42FE:  MOVWF  x30
4300:  MOVLB  0
4302:  CALL   2208
4306:  MOVFF  53A,62C
430A:  MOVLW  5A
430C:  MOVLB  6
430E:  MOVWF  x2D
4310:  MOVLW  14
4312:  MOVWF  x2E
4314:  CLRF   x2F
4316:  MOVLW  02
4318:  MOVWF  x30
431A:  MOVLB  0
431C:  CALL   2208
....................             enable_interrupts(global);tiempo_purga=1; 
4320:  MOVLW  C0
4322:  IORWF  FF2,F
4324:  MOVLB  4
4326:  BSF    x4D.6
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4328:  BRA    44A4
432A:  MOVLB  5
....................          { 
....................             glcd_fillScreen(OFF); 
432C:  MOVLB  6
432E:  CLRF   x2D
4330:  MOVLB  0
4332:  CALL   20E2
....................             strcpy(Menus.Letra,"Clave"); 
4336:  MOVLW  06
4338:  MOVWF  FEA
433A:  MOVLW  16
433C:  MOVWF  FE9
433E:  MOVFF  FF2,62C
4342:  BCF    FF2.7
4344:  MOVLW  00
4346:  CALL   0EEE
434A:  TBLRD*-
434C:  TBLRD*+
434E:  MOVF   FF5,W
4350:  MOVWF  FEE
4352:  IORLW  00
4354:  BNZ   434C
4356:  MOVLB  6
4358:  BTFSC  x2C.7
435A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
435C:  MOVLW  06
435E:  MOVWF  x2D
4360:  MOVLW  16
4362:  MOVWF  x2C
4364:  MOVLW  1E
4366:  MOVWF  x2E
4368:  CLRF   x2F
436A:  CLRF   x30
436C:  MOVLW  02
436E:  MOVWF  x31
4370:  MOVLB  0
4372:  CALL   213C
....................             strcpy(Menus.Letra,"Incorrecta"); 
4376:  MOVLW  06
4378:  MOVWF  FEA
437A:  MOVLW  16
437C:  MOVWF  FE9
437E:  MOVFF  FF2,62C
4382:  BCF    FF2.7
4384:  MOVLW  00
4386:  CALL   0F32
438A:  TBLRD*-
438C:  TBLRD*+
438E:  MOVF   FF5,W
4390:  MOVWF  FEE
4392:  IORLW  00
4394:  BNZ   438C
4396:  MOVLB  6
4398:  BTFSC  x2C.7
439A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
439C:  MOVLW  06
439E:  MOVWF  x2D
43A0:  MOVLW  16
43A2:  MOVWF  x2C
43A4:  CLRF   x2E
43A6:  MOVLW  1E
43A8:  MOVWF  x2F
43AA:  CLRF   x30
43AC:  MOVLW  02
43AE:  MOVWF  x31
43B0:  MOVLB  0
43B2:  CALL   213C
....................             unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
43B6:  MOVLW  01
43B8:  MOVLB  5
43BA:  MOVWF  x0A
43BC:  MOVLB  0
43BE:  CALL   19AC
43C2:  MOVLW  04
43C4:  MOVLB  6
43C6:  MOVWF  x2C
43C8:  MOVLW  FA
43CA:  MOVWF  x2D
43CC:  MOVLB  0
43CE:  CALL   1ED8
43D2:  MOVLB  6
43D4:  DECFSZ x2C,F
43D6:  BRA    43C8
43D8:  MOVLB  5
43DA:  CLRF   x5A
43DC:  CLRF   x5B
43DE:  CLRF   x5C
43E0:  CLRF   x5D
43E2:  MOVLB  6
43E4:  CLRF   x2D
43E6:  MOVLB  0
43E8:  CALL   20E2
....................             glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
43EC:  MOVLB  6
43EE:  CLRF   x43
43F0:  CLRF   x44
43F2:  MOVLW  7F
43F4:  MOVWF  x45
43F6:  MOVLW  19
43F8:  MOVWF  x46
43FA:  MOVLW  01
43FC:  MOVWF  x47
43FE:  MOVWF  x48
4400:  MOVLB  0
4402:  CALL   1C5E
4406:  MOVLW  06
4408:  MOVWF  FEA
440A:  MOVLW  16
440C:  MOVWF  FE9
440E:  MOVFF  FF2,62C
4412:  BCF    FF2.7
4414:  MOVLW  00
4416:  CALL   0EEE
441A:  TBLRD*-
441C:  TBLRD*+
441E:  MOVF   FF5,W
4420:  MOVWF  FEE
4422:  IORLW  00
4424:  BNZ   441C
4426:  MOVLB  6
4428:  BTFSC  x2C.7
442A:  BSF    FF2.7
442C:  MOVLW  19
442E:  MOVWF  x43
4430:  MOVLW  01
4432:  MOVWF  x44
4434:  MOVLW  06
4436:  MOVWF  x46
4438:  MOVLW  16
443A:  MOVWF  x45
443C:  MOVLW  03
443E:  MOVWF  x47
4440:  CLRF   x48
4442:  MOVLB  0
4444:  CALL   1D20
4448:  MOVFF  55A,62E
444C:  MOVLW  14
444E:  MOVLB  6
4450:  MOVWF  x2F
4452:  MOVLW  1E
4454:  MOVWF  x30
4456:  MOVLW  01
4458:  MOVWF  x31
445A:  MOVLB  0
445C:  CALL   202C
....................             displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
4460:  MOVFF  55B,62E
4464:  MOVLW  28
4466:  MOVLB  6
4468:  MOVWF  x2F
446A:  MOVLW  1E
446C:  MOVWF  x30
446E:  CLRF   x31
4470:  MOVLB  0
4472:  CALL   202C
4476:  MOVFF  55C,62E
447A:  MOVLW  3C
447C:  MOVLB  6
447E:  MOVWF  x2F
4480:  MOVLW  1E
4482:  MOVWF  x30
4484:  CLRF   x31
4486:  MOVLB  0
4488:  CALL   202C
448C:  MOVFF  55A,62E
4490:  MOVLW  50
4492:  MOVLB  6
4494:  MOVWF  x2F
4496:  MOVLW  1E
4498:  MOVWF  x30
449A:  CLRF   x31
449C:  MOVLB  0
449E:  CALL   202C
44A2:  MOVLB  4
44A4:  MOVLB  5
....................          } 
....................       } 
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1)//Menu de Purga. 
44A6:  DECFSZ x09,W
44A8:  BRA    461E
....................       {  
....................          glcd_text57(15, 1, Tiempo, 1, ON); 
44AA:  MOVLW  0F
44AC:  MOVLB  6
44AE:  MOVWF  x43
44B0:  MOVLW  01
44B2:  MOVWF  x44
44B4:  MOVLW  04
44B6:  MOVWF  x46
44B8:  MOVLW  82
44BA:  MOVWF  x45
44BC:  MOVLW  01
44BE:  MOVWF  x47
44C0:  MOVWF  x48
44C2:  MOVLB  0
44C4:  CALL   1D20
....................          Lectura_Esclavos(); 
44C8:  CALL   29BA
....................          // Para que inicie el tiempo de purga se debe tener el vidrio en la altura adecuada. 
....................          // Una vez ubicado el vidrio se debe encender la Luz Blanca y el Ventilador e iniciar el Tiempo de purga. 
....................          //Motor(1); 
....................          tiempo_purga=1;LuzBlanca=10;LuzUV=10;Toma=5;Alarma=10;Motor=5; 
44CC:  MOVLB  4
44CE:  BSF    x4D.6
44D0:  MOVLW  0A
44D2:  MOVLB  5
44D4:  MOVWF  x18
44D6:  MOVWF  x19
44D8:  MOVLW  05
44DA:  MOVWF  x1C
44DC:  MOVLW  0A
44DE:  MOVWF  x1B
44E0:  MOVLW  05
44E2:  MOVWF  x1A
....................          glcd_rect(9, 54, 120, 64, YES, OFF); 
44E4:  MOVLW  09
44E6:  MOVLB  6
44E8:  MOVWF  x43
44EA:  MOVLW  36
44EC:  MOVWF  x44
44EE:  MOVLW  78
44F0:  MOVWF  x45
44F2:  MOVLW  40
44F4:  MOVWF  x46
44F6:  MOVLW  01
44F8:  MOVWF  x47
44FA:  CLRF   x48
44FC:  MOVLB  0
44FE:  CALL   1C5E
....................           
....................          displayTiempo(Tpurga[3],20,20,0,2);displayTiempo(Tpurga[2],40,20,0,2);glcd_text57(60, 22, Dos_puntos, 2, ON); 
4502:  MOVFF  53D,62C
4506:  MOVLW  14
4508:  MOVLB  6
450A:  MOVWF  x2D
450C:  MOVWF  x2E
450E:  CLRF   x2F
4510:  MOVLW  02
4512:  MOVWF  x30
4514:  MOVLB  0
4516:  CALL   2208
451A:  MOVFF  53C,62C
451E:  MOVLW  28
4520:  MOVLB  6
4522:  MOVWF  x2D
4524:  MOVLW  14
4526:  MOVWF  x2E
4528:  CLRF   x2F
452A:  MOVLW  02
452C:  MOVWF  x30
452E:  MOVLB  0
4530:  CALL   2208
4534:  MOVLW  3C
4536:  MOVLB  6
4538:  MOVWF  x43
453A:  MOVLW  16
453C:  MOVWF  x44
453E:  MOVLW  04
4540:  MOVWF  x46
4542:  MOVLW  77
4544:  MOVWF  x45
4546:  MOVLW  02
4548:  MOVWF  x47
454A:  MOVLW  01
454C:  MOVWF  x48
454E:  MOVLB  0
4550:  CALL   1D20
....................          displayTiempo(Tpurga[1],70,20,0,2);displayTiempo(Tpurga[0],90,20,0,2);         
4554:  MOVFF  53B,62C
4558:  MOVLW  46
455A:  MOVLB  6
455C:  MOVWF  x2D
455E:  MOVLW  14
4560:  MOVWF  x2E
4562:  CLRF   x2F
4564:  MOVLW  02
4566:  MOVWF  x30
4568:  MOVLB  0
456A:  CALL   2208
456E:  MOVFF  53A,62C
4572:  MOVLW  5A
4574:  MOVLB  6
4576:  MOVWF  x2D
4578:  MOVLW  14
457A:  MOVWF  x2E
457C:  CLRF   x2F
457E:  MOVLW  02
4580:  MOVWF  x30
4582:  MOVLB  0
4584:  CALL   2208
....................        
....................          if(RIGHT) 
4588:  BSF    F92.2
458A:  BTFSS  F80.2
458C:  BRA    45BE
....................          { 
....................             delay_ms(1000); 
458E:  MOVLW  04
4590:  MOVLB  6
4592:  MOVWF  x2C
4594:  MOVLW  FA
4596:  MOVWF  x2D
4598:  MOVLB  0
459A:  CALL   1ED8
459E:  MOVLB  6
45A0:  DECFSZ x2C,F
45A2:  BRA    4594
....................             if(RIGHT) 
45A4:  BSF    F92.2
45A6:  BTFSS  F80.2
45A8:  BRA    45C0
....................             { 
....................                tiempo_purga=0;Menu=2;glcd_fillScreen(OFF); 
45AA:  MOVLB  4
45AC:  BCF    x4D.6
45AE:  MOVLW  02
45B0:  MOVLB  5
45B2:  MOVWF  x09
45B4:  MOVLB  6
45B6:  CLRF   x2D
45B8:  MOVLB  0
45BA:  CALL   20E2
45BE:  MOVLB  6
....................             } 
....................          } 
....................         
....................          if((Tpurga[0]>=Tpurgap[0])&&(Tpurga[1]>=Tpurgap[1])&&(Tpurga[2]>=Tpurgap[2])&&(Tpurga[3]>=Tpurgap[3])) 
45C0:  MOVLB  5
45C2:  MOVF   x3E,W
45C4:  XORLW  80
45C6:  MOVWF  00
45C8:  MOVF   x3A,W
45CA:  XORLW  80
45CC:  SUBWF  00,W
45CE:  BZ    45D2
45D0:  BC    461E
45D2:  MOVF   x3F,W
45D4:  XORLW  80
45D6:  MOVWF  00
45D8:  MOVF   x3B,W
45DA:  XORLW  80
45DC:  SUBWF  00,W
45DE:  BZ    45E2
45E0:  BC    461E
45E2:  MOVF   x40,W
45E4:  XORLW  80
45E6:  MOVWF  00
45E8:  MOVF   x3C,W
45EA:  XORLW  80
45EC:  SUBWF  00,W
45EE:  BZ    45F2
45F0:  BC    461E
45F2:  MOVF   x41,W
45F4:  XORLW  80
45F6:  MOVWF  00
45F8:  MOVF   x3D,W
45FA:  XORLW  80
45FC:  SUBWF  00,W
45FE:  BZ    4602
4600:  BC    461E
....................          { 
....................             tiempo_purga=0;Menu=2;glcd_fillScreen(OFF);flag_luz=!flag_luz;flag_blower=1; 
4602:  MOVLB  4
4604:  BCF    x4D.6
4606:  MOVLW  02
4608:  MOVLB  5
460A:  MOVWF  x09
460C:  MOVLB  6
460E:  CLRF   x2D
4610:  MOVLB  0
4612:  CALL   20E2
4616:  MOVLB  4
4618:  BTG    x4D.3
461A:  BSF    x4D.1
461C:  MOVLB  5
....................          }       
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==2) //Menu General. 
461E:  MOVF   x09,W
4620:  SUBLW  02
4622:  BTFSS  FD8.2
4624:  GOTO   50DA
....................       {          
....................          w=0; 
4628:  MOVLB  4
462A:  BCF    x4D.5
....................          glcd_text57(0, 1, Inflowt, 1, ON); 
462C:  MOVLB  6
462E:  CLRF   x43
4630:  MOVLW  01
4632:  MOVWF  x44
4634:  MOVLW  04
4636:  MOVWF  x46
4638:  MOVLW  A7
463A:  MOVWF  x45
463C:  MOVLW  01
463E:  MOVWF  x47
4640:  MOVWF  x48
4642:  MOVLB  0
4644:  CALL   1D20
....................          glcd_text57(0, 15, Downflowt, 1, ON); 
4648:  MOVLB  6
464A:  CLRF   x43
464C:  MOVLW  0F
464E:  MOVWF  x44
4650:  MOVLW  04
4652:  MOVWF  x46
4654:  MOVLW  B0
4656:  MOVWF  x45
4658:  MOVLW  01
465A:  MOVWF  x47
465C:  MOVWF  x48
465E:  MOVLB  0
4660:  CALL   1D20
....................          glcd_text57(0, 29, Vida_Filtro, 1, ON); 
4664:  MOVLB  6
4666:  CLRF   x43
4668:  MOVLW  1D
466A:  MOVWF  x44
466C:  MOVLW  04
466E:  MOVWF  x46
4670:  MOVLW  E3
4672:  MOVWF  x45
4674:  MOVLW  01
4676:  MOVWF  x47
4678:  MOVWF  x48
467A:  MOVLB  0
467C:  CALL   1D20
....................          //displayTiempo(Ttrabajo[3],60,28,0,1);displayTiempo(Ttrabajo[2],67,28,0,1);displayTiempo(Ttrabajo[1],74,28,0,1);displayTiempo(Ttrabajo[0],82,28,0,1); 
....................          glcd_text57(0, 43, Vida_UV, 1, ON); 
4680:  MOVLB  6
4682:  CLRF   x43
4684:  MOVLW  2B
4686:  MOVWF  x44
4688:  MOVLW  04
468A:  MOVWF  x46
468C:  MOVLW  DB
468E:  MOVWF  x45
4690:  MOVLW  01
4692:  MOVWF  x47
4694:  MOVWF  x48
4696:  MOVLB  0
4698:  CALL   1D20
....................          //displayTiempo(Tuv[3],60,42,0,1);displayTiempo(Tuv[2],67,42,0,1);displayTiempo(Tuv[1],74,42,0,1);displayTiempo(Tuv[0],82,42,0,1);        
....................          UVTime=Tuv[0]+(Tuv[1]*10)+(Tuv[2]*100)+(Tuv[3]*1000);          
469C:  MOVFF  54B,62D
46A0:  MOVLW  0A
46A2:  MOVLB  6
46A4:  MOVWF  x2E
46A6:  MOVLB  0
46A8:  CALL   2AB4
46AC:  MOVF   01,W
46AE:  MOVLB  5
46B0:  ADDWF  x4A,W
46B2:  MOVLB  6
46B4:  MOVWF  x2C
46B6:  MOVFF  54C,62D
46BA:  MOVLW  64
46BC:  MOVWF  x2E
46BE:  MOVLB  0
46C0:  CALL   2AB4
46C4:  MOVF   01,W
46C6:  MOVLB  6
46C8:  ADDWF  x2C,F
46CA:  CLRF   03
46CC:  MOVLB  5
46CE:  MOVF   x4D,W
46D0:  MOVWF  00
46D2:  BTFSC  FE8.7
46D4:  DECF   03,F
46D6:  MOVLB  6
46D8:  MOVWF  x2D
46DA:  MOVFF  03,62E
46DE:  MOVFF  03,630
46E2:  MOVWF  x2F
46E4:  MOVLW  03
46E6:  MOVWF  x32
46E8:  MOVLW  E8
46EA:  MOVWF  x31
46EC:  MOVLB  0
46EE:  GOTO   2B02
46F2:  MOVFF  02,03
46F6:  MOVF   01,W
46F8:  MOVLB  6
46FA:  ADDWF  x2C,W
46FC:  MOVWF  01
46FE:  MOVLW  00
4700:  ADDWFC 03,F
4702:  MOVFF  01,62C
4706:  MOVFF  03,62D
470A:  MOVLB  0
470C:  GOTO   2B58
4710:  MOVFF  03,615
4714:  MOVFF  02,614
4718:  MOVFF  01,613
471C:  MOVFF  00,612
....................           
....................          if(imprimir==1) 
4720:  MOVLB  4
4722:  BTFSS  x4C.7
4724:  BRA    4766
....................          { 
....................             Lectura_Esclavos(); 
4726:  MOVLB  0
4728:  CALL   29BA
....................             Downflow=Inflow; 
472C:  MOVFF  565,569
4730:  MOVFF  564,568
4734:  MOVFF  563,567
4738:  MOVFF  562,566
....................             //displayfloat(Inflow,70,1,0,1); 
....................             displayfloat(Downflow,70,15,0,1);   
473C:  MOVFF  569,633
4740:  MOVFF  568,632
4744:  MOVFF  567,631
4748:  MOVFF  566,630
474C:  MOVLW  46
474E:  MOVLB  6
4750:  MOVWF  x34
4752:  MOVLW  0F
4754:  MOVWF  x35
4756:  CLRF   x36
4758:  MOVLW  01
475A:  MOVWF  x37
475C:  MOVLB  0
475E:  CALL   2E24
....................             imprimir=0; 
4762:  MOVLB  4
4764:  BCF    x4C.7
....................          } 
....................           
....................          if(flag_blower==1) 
4766:  BTFSS  x4D.1
4768:  BRA    4858
....................          { 
....................             glcd_imagen(5);tiempo_trabajo=1;Motor=5;Toma=5; 
476A:  MOVLW  05
476C:  MOVLB  6
476E:  MOVWF  x2C
4770:  MOVLB  0
4772:  CALL   2F2C
4776:  MOVLB  4
4778:  BSF    x4E.0
477A:  MOVLW  05
477C:  MOVLB  5
477E:  MOVWF  x1A
4780:  MOVWF  x1C
....................             if(guardatrabajo==1) 
4782:  MOVLB  4
4784:  BTFSS  x4E.5
4786:  BRA    4856
....................             { 
....................                guardatrabajo=0;write_eeprom(30,minutos_trabajo); 
4788:  BCF    x4E.5
478A:  MOVLW  1E
478C:  MOVWF  FA9
478E:  MOVFF  536,FA8
4792:  BCF    FA6.6
4794:  BCF    FA6.7
4796:  BSF    FA6.2
4798:  MOVF   FF2,W
479A:  MOVWF  00
479C:  BCF    FF2.7
479E:  MOVLB  F
47A0:  MOVLW  55
47A2:  MOVWF  FA7
47A4:  MOVLW  AA
47A6:  MOVWF  FA7
47A8:  BSF    FA6.1
47AA:  BTFSC  FA6.1
47AC:  BRA    47AA
47AE:  BCF    FA6.2
47B0:  MOVF   00,W
47B2:  IORWF  FF2,F
....................                write_eeprom(16,Ttrabajo[0]);write_eeprom(17,Ttrabajo[1]);write_eeprom(18,Ttrabajo[2]);write_eeprom(19,Ttrabajo[3]); 
47B4:  MOVLW  10
47B6:  MOVWF  FA9
47B8:  MOVFF  556,FA8
47BC:  BCF    FA6.6
47BE:  BCF    FA6.7
47C0:  BSF    FA6.2
47C2:  MOVFF  FF2,00
47C6:  BCF    FF2.7
47C8:  MOVLW  55
47CA:  MOVWF  FA7
47CC:  MOVLW  AA
47CE:  MOVWF  FA7
47D0:  BSF    FA6.1
47D2:  BTFSC  FA6.1
47D4:  BRA    47D2
47D6:  BCF    FA6.2
47D8:  MOVF   00,W
47DA:  IORWF  FF2,F
47DC:  MOVLW  11
47DE:  MOVWF  FA9
47E0:  MOVFF  557,FA8
47E4:  BCF    FA6.6
47E6:  BCF    FA6.7
47E8:  BSF    FA6.2
47EA:  MOVFF  FF2,00
47EE:  BCF    FF2.7
47F0:  MOVLW  55
47F2:  MOVWF  FA7
47F4:  MOVLW  AA
47F6:  MOVWF  FA7
47F8:  BSF    FA6.1
47FA:  BTFSC  FA6.1
47FC:  BRA    47FA
47FE:  BCF    FA6.2
4800:  MOVF   00,W
4802:  IORWF  FF2,F
4804:  MOVLW  12
4806:  MOVWF  FA9
4808:  MOVFF  558,FA8
480C:  BCF    FA6.6
480E:  BCF    FA6.7
4810:  BSF    FA6.2
4812:  MOVFF  FF2,00
4816:  BCF    FF2.7
4818:  MOVLW  55
481A:  MOVWF  FA7
481C:  MOVLW  AA
481E:  MOVWF  FA7
4820:  BSF    FA6.1
4822:  BTFSC  FA6.1
4824:  BRA    4822
4826:  BCF    FA6.2
4828:  MOVF   00,W
482A:  IORWF  FF2,F
482C:  MOVLW  13
482E:  MOVWF  FA9
4830:  MOVFF  559,FA8
4834:  BCF    FA6.6
4836:  BCF    FA6.7
4838:  BSF    FA6.2
483A:  MOVFF  FF2,00
483E:  BCF    FF2.7
4840:  MOVLW  55
4842:  MOVWF  FA7
4844:  MOVLW  AA
4846:  MOVWF  FA7
4848:  BSF    FA6.1
484A:  BTFSC  FA6.1
484C:  BRA    484A
484E:  BCF    FA6.2
4850:  MOVF   00,W
4852:  IORWF  FF2,F
4854:  MOVLB  4
....................             } 
....................          } 
....................          else 
4856:  BRA    4960
....................          { 
....................             Filtro_Downflow=0; 
4858:  MOVLB  5
485A:  CLRF   x6D
485C:  CLRF   x6C
485E:  CLRF   x6B
4860:  CLRF   x6A
....................             glcd_rect(102, 45, 127, 64, YES, OFF);tiempo_trabajo=0;Motor=10;Toma=10; 
4862:  MOVLW  66
4864:  MOVLB  6
4866:  MOVWF  x43
4868:  MOVLW  2D
486A:  MOVWF  x44
486C:  MOVLW  7F
486E:  MOVWF  x45
4870:  MOVLW  40
4872:  MOVWF  x46
4874:  MOVLW  01
4876:  MOVWF  x47
4878:  CLRF   x48
487A:  MOVLB  0
487C:  CALL   1C5E
4880:  MOVLB  4
4882:  BCF    x4E.0
4884:  MOVLW  0A
4886:  MOVLB  5
4888:  MOVWF  x1A
488A:  MOVWF  x1C
....................             if(guardatrabajo==0) 
488C:  MOVLB  4
488E:  BTFSC  x4E.5
4890:  BRA    4960
....................             { 
....................                guardatrabajo=1;write_eeprom(30,minutos_trabajo); 
4892:  BSF    x4E.5
4894:  MOVLW  1E
4896:  MOVWF  FA9
4898:  MOVFF  536,FA8
489C:  BCF    FA6.6
489E:  BCF    FA6.7
48A0:  BSF    FA6.2
48A2:  MOVF   FF2,W
48A4:  MOVWF  00
48A6:  BCF    FF2.7
48A8:  MOVLB  F
48AA:  MOVLW  55
48AC:  MOVWF  FA7
48AE:  MOVLW  AA
48B0:  MOVWF  FA7
48B2:  BSF    FA6.1
48B4:  BTFSC  FA6.1
48B6:  BRA    48B4
48B8:  BCF    FA6.2
48BA:  MOVF   00,W
48BC:  IORWF  FF2,F
....................                write_eeprom(16,Ttrabajo[0]);write_eeprom(17,Ttrabajo[1]);write_eeprom(18,Ttrabajo[2]);write_eeprom(19,Ttrabajo[3]); 
48BE:  MOVLW  10
48C0:  MOVWF  FA9
48C2:  MOVFF  556,FA8
48C6:  BCF    FA6.6
48C8:  BCF    FA6.7
48CA:  BSF    FA6.2
48CC:  MOVFF  FF2,00
48D0:  BCF    FF2.7
48D2:  MOVLW  55
48D4:  MOVWF  FA7
48D6:  MOVLW  AA
48D8:  MOVWF  FA7
48DA:  BSF    FA6.1
48DC:  BTFSC  FA6.1
48DE:  BRA    48DC
48E0:  BCF    FA6.2
48E2:  MOVF   00,W
48E4:  IORWF  FF2,F
48E6:  MOVLW  11
48E8:  MOVWF  FA9
48EA:  MOVFF  557,FA8
48EE:  BCF    FA6.6
48F0:  BCF    FA6.7
48F2:  BSF    FA6.2
48F4:  MOVFF  FF2,00
48F8:  BCF    FF2.7
48FA:  MOVLW  55
48FC:  MOVWF  FA7
48FE:  MOVLW  AA
4900:  MOVWF  FA7
4902:  BSF    FA6.1
4904:  BTFSC  FA6.1
4906:  BRA    4904
4908:  BCF    FA6.2
490A:  MOVF   00,W
490C:  IORWF  FF2,F
490E:  MOVLW  12
4910:  MOVWF  FA9
4912:  MOVFF  558,FA8
4916:  BCF    FA6.6
4918:  BCF    FA6.7
491A:  BSF    FA6.2
491C:  MOVFF  FF2,00
4920:  BCF    FF2.7
4922:  MOVLW  55
4924:  MOVWF  FA7
4926:  MOVLW  AA
4928:  MOVWF  FA7
492A:  BSF    FA6.1
492C:  BTFSC  FA6.1
492E:  BRA    492C
4930:  BCF    FA6.2
4932:  MOVF   00,W
4934:  IORWF  FF2,F
4936:  MOVLW  13
4938:  MOVWF  FA9
493A:  MOVFF  559,FA8
493E:  BCF    FA6.6
4940:  BCF    FA6.7
4942:  BSF    FA6.2
4944:  MOVFF  FF2,00
4948:  BCF    FF2.7
494A:  MOVLW  55
494C:  MOVWF  FA7
494E:  MOVLW  AA
4950:  MOVWF  FA7
4952:  BSF    FA6.1
4954:  BTFSC  FA6.1
4956:  BRA    4954
4958:  BCF    FA6.2
495A:  MOVF   00,W
495C:  IORWF  FF2,F
495E:  MOVLB  4
....................             } 
....................          } 
....................           
.................... // Dibujo de barra de estado de filtro                   
....................          barra=100.0*(Filtro_Downflow/2.0); 
4960:  MOVFF  56D,634
4964:  MOVFF  56C,633
4968:  MOVFF  56B,632
496C:  MOVFF  56A,631
4970:  MOVLB  6
4972:  CLRF   x38
4974:  CLRF   x37
4976:  CLRF   x36
4978:  MOVLW  80
497A:  MOVWF  x35
497C:  MOVLB  0
497E:  CALL   12A0
4982:  MOVLB  6
4984:  CLRF   x51
4986:  CLRF   x50
4988:  MOVLW  48
498A:  MOVWF  x4F
498C:  MOVLW  85
498E:  MOVWF  x4E
4990:  MOVFF  03,655
4994:  MOVFF  02,654
4998:  MOVFF  01,653
499C:  MOVFF  00,652
49A0:  MOVLB  0
49A2:  CALL   16B2
49A6:  MOVFF  03,575
49AA:  MOVFF  02,574
49AE:  MOVFF  01,573
49B2:  MOVFF  00,572
....................          if(barra>100.0) 
49B6:  MOVLB  6
49B8:  CLRF   x34
49BA:  CLRF   x33
49BC:  MOVLW  48
49BE:  MOVWF  x32
49C0:  MOVLW  85
49C2:  MOVWF  x31
49C4:  MOVFF  575,638
49C8:  MOVFF  574,637
49CC:  MOVFF  573,636
49D0:  MOVFF  572,635
49D4:  MOVLB  0
49D6:  CALL   238E
49DA:  BNC   49EA
....................             barra=100.0; 
49DC:  MOVLB  5
49DE:  CLRF   x75
49E0:  CLRF   x74
49E2:  MOVLW  48
49E4:  MOVWF  x73
49E6:  MOVLW  85
49E8:  MOVWF  x72
....................          barra=barra/2; 
49EA:  MOVFF  575,634
49EE:  MOVFF  574,633
49F2:  MOVFF  573,632
49F6:  MOVFF  572,631
49FA:  MOVLB  6
49FC:  CLRF   x38
49FE:  CLRF   x37
4A00:  CLRF   x36
4A02:  MOVLW  80
4A04:  MOVWF  x35
4A06:  MOVLB  0
4A08:  CALL   12A0
4A0C:  MOVFF  03,575
4A10:  MOVFF  02,574
4A14:  MOVFF  01,573
4A18:  MOVFF  00,572
....................          glcd_rect(42, 28, (int8)(barra_old)+42, 35, YES, OFF);  // Clears the old bar 
4A1C:  MOVFF  579,62F
4A20:  MOVFF  578,62E
4A24:  MOVFF  577,62D
4A28:  MOVFF  576,62C
4A2C:  CALL   1676
4A30:  MOVLW  2A
4A32:  ADDWF  01,W
4A34:  MOVLB  6
4A36:  MOVWF  x2C
4A38:  MOVLW  2A
4A3A:  MOVWF  x43
4A3C:  MOVLW  1C
4A3E:  MOVWF  x44
4A40:  MOVFF  62C,645
4A44:  MOVLW  23
4A46:  MOVWF  x46
4A48:  MOVLW  01
4A4A:  MOVWF  x47
4A4C:  CLRF   x48
4A4E:  MOVLB  0
4A50:  CALL   1C5E
....................          glcd_rect(42, 28, (int8)(barra)+42, 35, YES, ON);             // Draws a new bar 
4A54:  MOVFF  575,62F
4A58:  MOVFF  574,62E
4A5C:  MOVFF  573,62D
4A60:  MOVFF  572,62C
4A64:  CALL   1676
4A68:  MOVLW  2A
4A6A:  ADDWF  01,W
4A6C:  MOVLB  6
4A6E:  MOVWF  x2C
4A70:  MOVLW  2A
4A72:  MOVWF  x43
4A74:  MOVLW  1C
4A76:  MOVWF  x44
4A78:  MOVFF  62C,645
4A7C:  MOVLW  23
4A7E:  MOVWF  x46
4A80:  MOVLW  01
4A82:  MOVWF  x47
4A84:  MOVWF  x48
4A86:  MOVLB  0
4A88:  CALL   1C5E
....................          glcd_rect(40, 26, 94, 37, NO, ON);             // Draws a new bar 
4A8C:  MOVLW  28
4A8E:  MOVLB  6
4A90:  MOVWF  x43
4A92:  MOVLW  1A
4A94:  MOVWF  x44
4A96:  MOVLW  5E
4A98:  MOVWF  x45
4A9A:  MOVLW  25
4A9C:  MOVWF  x46
4A9E:  CLRF   x47
4AA0:  MOVLW  01
4AA2:  MOVWF  x48
4AA4:  MOVLB  0
4AA6:  CALL   1C5E
....................          barra_old=barra; 
4AAA:  MOVFF  575,579
4AAE:  MOVFF  574,578
4AB2:  MOVFF  573,577
4AB6:  MOVFF  572,576
.................... // Fin de Dibujo de barra de estado de Filtro 
....................  
.................... // Dibujo de barra de estado de Luz UV 
....................          barra2=100.0*(UVTime/1000.0); 
4ABA:  MOVFF  615,634
4ABE:  MOVFF  614,633
4AC2:  MOVFF  613,632
4AC6:  MOVFF  612,631
4ACA:  MOVLB  6
4ACC:  CLRF   x38
4ACE:  CLRF   x37
4AD0:  MOVLW  7A
4AD2:  MOVWF  x36
4AD4:  MOVLW  88
4AD6:  MOVWF  x35
4AD8:  MOVLB  0
4ADA:  CALL   12A0
4ADE:  MOVLB  6
4AE0:  CLRF   x51
4AE2:  CLRF   x50
4AE4:  MOVLW  48
4AE6:  MOVWF  x4F
4AE8:  MOVLW  85
4AEA:  MOVWF  x4E
4AEC:  MOVFF  03,655
4AF0:  MOVFF  02,654
4AF4:  MOVFF  01,653
4AF8:  MOVFF  00,652
4AFC:  MOVLB  0
4AFE:  CALL   16B2
4B02:  MOVFF  03,57D
4B06:  MOVFF  02,57C
4B0A:  MOVFF  01,57B
4B0E:  MOVFF  00,57A
....................          if(barra2>100.0) 
4B12:  MOVLB  6
4B14:  CLRF   x34
4B16:  CLRF   x33
4B18:  MOVLW  48
4B1A:  MOVWF  x32
4B1C:  MOVLW  85
4B1E:  MOVWF  x31
4B20:  MOVFF  57D,638
4B24:  MOVFF  57C,637
4B28:  MOVFF  57B,636
4B2C:  MOVFF  57A,635
4B30:  MOVLB  0
4B32:  CALL   238E
4B36:  BNC   4B46
....................             barra2=100.0; 
4B38:  MOVLB  5
4B3A:  CLRF   x7D
4B3C:  CLRF   x7C
4B3E:  MOVLW  48
4B40:  MOVWF  x7B
4B42:  MOVLW  85
4B44:  MOVWF  x7A
....................          barra2=barra2/2; 
4B46:  MOVFF  57D,634
4B4A:  MOVFF  57C,633
4B4E:  MOVFF  57B,632
4B52:  MOVFF  57A,631
4B56:  MOVLB  6
4B58:  CLRF   x38
4B5A:  CLRF   x37
4B5C:  CLRF   x36
4B5E:  MOVLW  80
4B60:  MOVWF  x35
4B62:  MOVLB  0
4B64:  CALL   12A0
4B68:  MOVFF  03,57D
4B6C:  MOVFF  02,57C
4B70:  MOVFF  01,57B
4B74:  MOVFF  00,57A
....................          glcd_rect(42, 42, (int8)(barra_old2)+42, 49, YES, OFF);  // Clears the old bar 
4B78:  MOVFF  581,62F
4B7C:  MOVFF  580,62E
4B80:  MOVFF  57F,62D
4B84:  MOVFF  57E,62C
4B88:  CALL   1676
4B8C:  MOVLW  2A
4B8E:  ADDWF  01,W
4B90:  MOVLB  6
4B92:  MOVWF  x2C
4B94:  MOVLW  2A
4B96:  MOVWF  x43
4B98:  MOVWF  x44
4B9A:  MOVFF  62C,645
4B9E:  MOVLW  31
4BA0:  MOVWF  x46
4BA2:  MOVLW  01
4BA4:  MOVWF  x47
4BA6:  CLRF   x48
4BA8:  MOVLB  0
4BAA:  CALL   1C5E
....................          glcd_rect(42, 42, (int8)(barra2)+42, 49, YES, ON);             // Draws a new bar 
4BAE:  MOVFF  57D,62F
4BB2:  MOVFF  57C,62E
4BB6:  MOVFF  57B,62D
4BBA:  MOVFF  57A,62C
4BBE:  CALL   1676
4BC2:  MOVLW  2A
4BC4:  ADDWF  01,W
4BC6:  MOVLB  6
4BC8:  MOVWF  x2C
4BCA:  MOVLW  2A
4BCC:  MOVWF  x43
4BCE:  MOVWF  x44
4BD0:  MOVFF  62C,645
4BD4:  MOVLW  31
4BD6:  MOVWF  x46
4BD8:  MOVLW  01
4BDA:  MOVWF  x47
4BDC:  MOVWF  x48
4BDE:  MOVLB  0
4BE0:  CALL   1C5E
....................          glcd_rect(40, 40, 94, 51, NO, ON);             // Draws a new bar 
4BE4:  MOVLW  28
4BE6:  MOVLB  6
4BE8:  MOVWF  x43
4BEA:  MOVWF  x44
4BEC:  MOVLW  5E
4BEE:  MOVWF  x45
4BF0:  MOVLW  33
4BF2:  MOVWF  x46
4BF4:  CLRF   x47
4BF6:  MOVLW  01
4BF8:  MOVWF  x48
4BFA:  MOVLB  0
4BFC:  CALL   1C5E
....................          barra_old2=barra2; 
4C00:  MOVFF  57D,581
4C04:  MOVFF  57C,580
4C08:  MOVFF  57B,57F
4C0C:  MOVFF  57A,57E
.................... // Fin de Dibujo de barra de estado de Luz UV 
....................  
....................  
....................          if(Downflow<0.30) 
4C10:  MOVFF  569,634
4C14:  MOVFF  568,633
4C18:  MOVFF  567,632
4C1C:  MOVFF  566,631
4C20:  MOVLW  9A
4C22:  MOVLB  6
4C24:  MOVWF  x38
4C26:  MOVLW  99
4C28:  MOVWF  x37
4C2A:  MOVLW  19
4C2C:  MOVWF  x36
4C2E:  MOVLW  7D
4C30:  MOVWF  x35
4C32:  MOVLB  0
4C34:  CALL   238E
4C38:  BNC   4C7A
....................          { 
....................             flag_latencia=1; 
4C3A:  MOVLB  4
4C3C:  BSF    x4E.3
....................             if(Latencia==1) 
4C3E:  BTFSS  x4E.2
4C40:  BRA    4C76
....................             {          
....................                //strcpy(Menus.Letra,"!Perdida Flujo!"); 
....................                //displayMenu(Menus.Letra,0,55,0,1); 
....................                if(Downflow<0.30) 
4C42:  MOVFF  569,634
4C46:  MOVFF  568,633
4C4A:  MOVFF  567,632
4C4E:  MOVFF  566,631
4C52:  MOVLW  9A
4C54:  MOVLB  6
4C56:  MOVWF  x38
4C58:  MOVLW  99
4C5A:  MOVWF  x37
4C5C:  MOVLW  19
4C5E:  MOVWF  x36
4C60:  MOVLW  7D
4C62:  MOVWF  x35
4C64:  MOVLB  0
4C66:  CALL   238E
4C6A:  BNC   4C74
....................                { 
....................                   Alarma=5; 
4C6C:  MOVLW  05
4C6E:  MOVLB  5
4C70:  MOVWF  x1B
4C72:  MOVLB  0
4C74:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................          else 
4C76:  BRA    4CAC
4C78:  MOVLB  0
....................          { 
....................             Latencia=0;t_latencia=0;flag_latencia=0; 
4C7A:  MOVLB  4
4C7C:  BCF    x4E.2
4C7E:  MOVLB  5
4C80:  CLRF   x33
4C82:  CLRF   x32
4C84:  MOVLB  4
4C86:  BCF    x4E.3
....................             glcd_rect(0, 54, 104, 64, YES, OFF);Alarma=10; 
4C88:  MOVLB  6
4C8A:  CLRF   x43
4C8C:  MOVLW  36
4C8E:  MOVWF  x44
4C90:  MOVLW  68
4C92:  MOVWF  x45
4C94:  MOVLW  40
4C96:  MOVWF  x46
4C98:  MOVLW  01
4C9A:  MOVWF  x47
4C9C:  CLRF   x48
4C9E:  MOVLB  0
4CA0:  CALL   1C5E
4CA4:  MOVLW  0A
4CA6:  MOVLB  5
4CA8:  MOVWF  x1B
4CAA:  MOVLB  4
....................          } 
....................        
....................          if(flag_luz==1) 
4CAC:  BTFSS  x4D.3
4CAE:  BRA    4CC6
....................          { 
....................             glcd_imagen(3);LuzBlanca=5; 
4CB0:  MOVLW  03
4CB2:  MOVLB  6
4CB4:  MOVWF  x2C
4CB6:  MOVLB  0
4CB8:  CALL   2F2C
4CBC:  MOVLW  05
4CBE:  MOVLB  5
4CC0:  MOVWF  x18
....................          } 
....................          else 
4CC2:  BRA    4CEA
4CC4:  MOVLB  4
....................          { 
....................             glcd_rect(102, 14, 127, 28, YES, OFF);LuzBlanca=10; 
4CC6:  MOVLW  66
4CC8:  MOVLB  6
4CCA:  MOVWF  x43
4CCC:  MOVLW  0E
4CCE:  MOVWF  x44
4CD0:  MOVLW  7F
4CD2:  MOVWF  x45
4CD4:  MOVLW  1C
4CD6:  MOVWF  x46
4CD8:  MOVLW  01
4CDA:  MOVWF  x47
4CDC:  CLRF   x48
4CDE:  MOVLB  0
4CE0:  CALL   1C5E
4CE4:  MOVLW  0A
4CE6:  MOVLB  5
4CE8:  MOVWF  x18
....................          } 
....................           
....................           
....................          if(UV2==10) 
4CEA:  MOVF   x1D,W
4CEC:  SUBLW  0A
4CEE:  BTFSS  FD8.2
4CF0:  BRA    4E02
....................          { 
....................             flag_Luz=0;LuzBlanca=10;Toma=10;Motor=10;flag_blower=0; 
4CF2:  MOVLB  4
4CF4:  BCF    x4D.3
4CF6:  MOVLW  0A
4CF8:  MOVLB  5
4CFA:  MOVWF  x18
4CFC:  MOVWF  x1C
4CFE:  MOVWF  x1A
4D00:  MOVLB  4
4D02:  BCF    x4D.1
....................             tiempo_uv=1; 
4D04:  BSF    x4D.7
....................             LuzUV=5; 
4D06:  MOVLW  05
4D08:  MOVLB  5
4D0A:  MOVWF  x19
....................             glcd_text57(105, 0, UV, 2, ON); 
4D0C:  MOVLW  69
4D0E:  MOVLB  6
4D10:  MOVWF  x43
4D12:  CLRF   x44
4D14:  MOVLW  04
4D16:  MOVWF  x46
4D18:  MOVLW  92
4D1A:  MOVWF  x45
4D1C:  MOVLW  02
4D1E:  MOVWF  x47
4D20:  MOVLW  01
4D22:  MOVWF  x48
4D24:  MOVLB  0
4D26:  CALL   1D20
....................             if(guardauv==1) 
4D2A:  MOVLB  4
4D2C:  BTFSS  x4E.4
4D2E:  BRA    4DFE
....................             { 
....................                guardauv=0;write_eeprom(31,minutos_uv); 
4D30:  BCF    x4E.4
4D32:  MOVLW  1F
4D34:  MOVWF  FA9
4D36:  MOVFF  534,FA8
4D3A:  BCF    FA6.6
4D3C:  BCF    FA6.7
4D3E:  BSF    FA6.2
4D40:  MOVF   FF2,W
4D42:  MOVWF  00
4D44:  BCF    FF2.7
4D46:  MOVLB  F
4D48:  MOVLW  55
4D4A:  MOVWF  FA7
4D4C:  MOVLW  AA
4D4E:  MOVWF  FA7
4D50:  BSF    FA6.1
4D52:  BTFSC  FA6.1
4D54:  BRA    4D52
4D56:  BCF    FA6.2
4D58:  MOVF   00,W
4D5A:  IORWF  FF2,F
....................                write_eeprom(12,Tuv[0]);write_eeprom(13,Tuv[1]);write_eeprom(14,Tuv[2]);write_eeprom(15,Tuv[3]); 
4D5C:  MOVLW  0C
4D5E:  MOVWF  FA9
4D60:  MOVFF  54A,FA8
4D64:  BCF    FA6.6
4D66:  BCF    FA6.7
4D68:  BSF    FA6.2
4D6A:  MOVFF  FF2,00
4D6E:  BCF    FF2.7
4D70:  MOVLW  55
4D72:  MOVWF  FA7
4D74:  MOVLW  AA
4D76:  MOVWF  FA7
4D78:  BSF    FA6.1
4D7A:  BTFSC  FA6.1
4D7C:  BRA    4D7A
4D7E:  BCF    FA6.2
4D80:  MOVF   00,W
4D82:  IORWF  FF2,F
4D84:  MOVLW  0D
4D86:  MOVWF  FA9
4D88:  MOVFF  54B,FA8
4D8C:  BCF    FA6.6
4D8E:  BCF    FA6.7
4D90:  BSF    FA6.2
4D92:  MOVFF  FF2,00
4D96:  BCF    FF2.7
4D98:  MOVLW  55
4D9A:  MOVWF  FA7
4D9C:  MOVLW  AA
4D9E:  MOVWF  FA7
4DA0:  BSF    FA6.1
4DA2:  BTFSC  FA6.1
4DA4:  BRA    4DA2
4DA6:  BCF    FA6.2
4DA8:  MOVF   00,W
4DAA:  IORWF  FF2,F
4DAC:  MOVLW  0E
4DAE:  MOVWF  FA9
4DB0:  MOVFF  54C,FA8
4DB4:  BCF    FA6.6
4DB6:  BCF    FA6.7
4DB8:  BSF    FA6.2
4DBA:  MOVFF  FF2,00
4DBE:  BCF    FF2.7
4DC0:  MOVLW  55
4DC2:  MOVWF  FA7
4DC4:  MOVLW  AA
4DC6:  MOVWF  FA7
4DC8:  BSF    FA6.1
4DCA:  BTFSC  FA6.1
4DCC:  BRA    4DCA
4DCE:  BCF    FA6.2
4DD0:  MOVF   00,W
4DD2:  IORWF  FF2,F
4DD4:  MOVLW  0F
4DD6:  MOVWF  FA9
4DD8:  MOVFF  54D,FA8
4DDC:  BCF    FA6.6
4DDE:  BCF    FA6.7
4DE0:  BSF    FA6.2
4DE2:  MOVFF  FF2,00
4DE6:  BCF    FF2.7
4DE8:  MOVLW  55
4DEA:  MOVWF  FA7
4DEC:  MOVLW  AA
4DEE:  MOVWF  FA7
4DF0:  BSF    FA6.1
4DF2:  BTFSC  FA6.1
4DF4:  BRA    4DF2
4DF6:  BCF    FA6.2
4DF8:  MOVF   00,W
4DFA:  IORWF  FF2,F
4DFC:  MOVLB  4
....................             }                
....................          } 
....................          else 
4DFE:  BRA    4EFA
4E00:  MOVLB  5
....................          { 
....................             LuzUV=10;tiempo_uv=0; 
4E02:  MOVLW  0A
4E04:  MOVWF  x19
4E06:  MOVLB  4
4E08:  BCF    x4D.7
....................             glcd_rect(102, 0, 127, 14, YES, OFF); 
4E0A:  MOVLW  66
4E0C:  MOVLB  6
4E0E:  MOVWF  x43
4E10:  CLRF   x44
4E12:  MOVLW  7F
4E14:  MOVWF  x45
4E16:  MOVLW  0E
4E18:  MOVWF  x46
4E1A:  MOVLW  01
4E1C:  MOVWF  x47
4E1E:  CLRF   x48
4E20:  MOVLB  0
4E22:  CALL   1C5E
....................             if(guardauv==0) 
4E26:  MOVLB  4
4E28:  BTFSC  x4E.4
4E2A:  BRA    4EFA
....................             { 
....................                guardauv=1;write_eeprom(31,minutos_uv); 
4E2C:  BSF    x4E.4
4E2E:  MOVLW  1F
4E30:  MOVWF  FA9
4E32:  MOVFF  534,FA8
4E36:  BCF    FA6.6
4E38:  BCF    FA6.7
4E3A:  BSF    FA6.2
4E3C:  MOVF   FF2,W
4E3E:  MOVWF  00
4E40:  BCF    FF2.7
4E42:  MOVLB  F
4E44:  MOVLW  55
4E46:  MOVWF  FA7
4E48:  MOVLW  AA
4E4A:  MOVWF  FA7
4E4C:  BSF    FA6.1
4E4E:  BTFSC  FA6.1
4E50:  BRA    4E4E
4E52:  BCF    FA6.2
4E54:  MOVF   00,W
4E56:  IORWF  FF2,F
....................                write_eeprom(12,Tuv[0]);write_eeprom(13,Tuv[1]);write_eeprom(14,Tuv[2]);write_eeprom(15,Tuv[3]); 
4E58:  MOVLW  0C
4E5A:  MOVWF  FA9
4E5C:  MOVFF  54A,FA8
4E60:  BCF    FA6.6
4E62:  BCF    FA6.7
4E64:  BSF    FA6.2
4E66:  MOVFF  FF2,00
4E6A:  BCF    FF2.7
4E6C:  MOVLW  55
4E6E:  MOVWF  FA7
4E70:  MOVLW  AA
4E72:  MOVWF  FA7
4E74:  BSF    FA6.1
4E76:  BTFSC  FA6.1
4E78:  BRA    4E76
4E7A:  BCF    FA6.2
4E7C:  MOVF   00,W
4E7E:  IORWF  FF2,F
4E80:  MOVLW  0D
4E82:  MOVWF  FA9
4E84:  MOVFF  54B,FA8
4E88:  BCF    FA6.6
4E8A:  BCF    FA6.7
4E8C:  BSF    FA6.2
4E8E:  MOVFF  FF2,00
4E92:  BCF    FF2.7
4E94:  MOVLW  55
4E96:  MOVWF  FA7
4E98:  MOVLW  AA
4E9A:  MOVWF  FA7
4E9C:  BSF    FA6.1
4E9E:  BTFSC  FA6.1
4EA0:  BRA    4E9E
4EA2:  BCF    FA6.2
4EA4:  MOVF   00,W
4EA6:  IORWF  FF2,F
4EA8:  MOVLW  0E
4EAA:  MOVWF  FA9
4EAC:  MOVFF  54C,FA8
4EB0:  BCF    FA6.6
4EB2:  BCF    FA6.7
4EB4:  BSF    FA6.2
4EB6:  MOVFF  FF2,00
4EBA:  BCF    FF2.7
4EBC:  MOVLW  55
4EBE:  MOVWF  FA7
4EC0:  MOVLW  AA
4EC2:  MOVWF  FA7
4EC4:  BSF    FA6.1
4EC6:  BTFSC  FA6.1
4EC8:  BRA    4EC6
4ECA:  BCF    FA6.2
4ECC:  MOVF   00,W
4ECE:  IORWF  FF2,F
4ED0:  MOVLW  0F
4ED2:  MOVWF  FA9
4ED4:  MOVFF  54D,FA8
4ED8:  BCF    FA6.6
4EDA:  BCF    FA6.7
4EDC:  BSF    FA6.2
4EDE:  MOVFF  FF2,00
4EE2:  BCF    FF2.7
4EE4:  MOVLW  55
4EE6:  MOVWF  FA7
4EE8:  MOVLW  AA
4EEA:  MOVWF  FA7
4EEC:  BSF    FA6.1
4EEE:  BTFSC  FA6.1
4EF0:  BRA    4EEE
4EF2:  BCF    FA6.2
4EF4:  MOVF   00,W
4EF6:  IORWF  FF2,F
4EF8:  MOVLB  4
....................             } 
....................          } 
....................           
....................          if(Alarma==5) 
4EFA:  MOVLB  5
4EFC:  MOVF   x1B,W
4EFE:  SUBLW  05
4F00:  BNZ   4F3E
....................          { 
....................             glcd_rect(0, 55, 100, 63, YES, OFF); 
4F02:  MOVLB  6
4F04:  CLRF   x43
4F06:  MOVLW  37
4F08:  MOVWF  x44
4F0A:  MOVLW  64
4F0C:  MOVWF  x45
4F0E:  MOVLW  3F
4F10:  MOVWF  x46
4F12:  MOVLW  01
4F14:  MOVWF  x47
4F16:  CLRF   x48
4F18:  MOVLB  0
4F1A:  CALL   1C5E
....................             glcd_text57(0,55, Perdida, 1, ON); 
4F1E:  MOVLB  6
4F20:  CLRF   x43
4F22:  MOVLW  37
4F24:  MOVWF  x44
4F26:  MOVLW  04
4F28:  MOVWF  x46
4F2A:  MOVLW  F9
4F2C:  MOVWF  x45
4F2E:  MOVLW  01
4F30:  MOVWF  x47
4F32:  MOVWF  x48
4F34:  MOVLB  0
4F36:  CALL   1D20
....................          } 
....................          else 
4F3A:  BRA    4F5A
4F3C:  MOVLB  5
....................          {                
....................             glcd_rect(0, 55, 100, 63, YES, OFF);             
4F3E:  MOVLB  6
4F40:  CLRF   x43
4F42:  MOVLW  37
4F44:  MOVWF  x44
4F46:  MOVLW  64
4F48:  MOVWF  x45
4F4A:  MOVLW  3F
4F4C:  MOVWF  x46
4F4E:  MOVLW  01
4F50:  MOVWF  x47
4F52:  CLRF   x48
4F54:  MOVLB  0
4F56:  CALL   1C5E
....................          } 
....................              
....................          if(RIGHT)//Si oprime boton de Blower. 
4F5A:  BSF    F92.2
4F5C:  BTFSS  F80.2
4F5E:  BRA    4F7C
....................          { 
....................             if(Flanco3 == 0) 
4F60:  MOVLB  4
4F62:  BTFSC  x4C.3
4F64:  BRA    4F78
....................             { 
....................                Flanco3 = 1;delay_ms(30);flag_blower=!flag_blower; 
4F66:  BSF    x4C.3
4F68:  MOVLW  1E
4F6A:  MOVLB  6
4F6C:  MOVWF  x2D
4F6E:  MOVLB  0
4F70:  CALL   1ED8
4F74:  MOVLB  4
4F76:  BTG    x4D.1
....................             } 
....................          } 
....................          else 
4F78:  BRA    4F80
4F7A:  MOVLB  0
....................          { 
....................             Flanco3 = 0; 
4F7C:  MOVLB  4
4F7E:  BCF    x4C.3
....................          } 
....................                 
....................          if(LEFT)//Si oprime boton de Luz UV. 
4F80:  BSF    F92.3
4F82:  BTFSS  F80.3
4F84:  BRA    4FAE
....................          { 
....................             if(Flanco4 == 0) 
4F86:  BTFSC  x4C.4
4F88:  BRA    4FAC
....................             { 
....................                Flanco4 = 1;delay_ms(30);flag_uv=!flag_uv; 
4F8A:  BSF    x4C.4
4F8C:  MOVLW  1E
4F8E:  MOVLB  6
4F90:  MOVWF  x2D
4F92:  MOVLB  0
4F94:  CALL   1ED8
4F98:  MOVLB  4
4F9A:  BTG    x4D.0
....................                if(UV2==0) 
4F9C:  MOVLB  5
4F9E:  MOVF   x1D,F
4FA0:  BNZ   4FA8
....................                   UV2=10; 
4FA2:  MOVLW  0A
4FA4:  MOVWF  x1D
....................                else 
4FA6:  BRA    4FAA
....................                   UV2=0; 
4FA8:  CLRF   x1D
4FAA:  MOVLB  4
....................             } 
....................          } 
....................          else 
4FAC:  BRA    4FB0
....................          { 
....................             Flanco4 = 0; 
4FAE:  BCF    x4C.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime boton de Luz Blanca. 
4FB0:  BSF    F92.1
4FB2:  BTFSS  F80.1
4FB4:  BRA    4FCE
....................          { 
....................             if(Flanco5 == 0) 
4FB6:  BTFSC  x4C.5
4FB8:  BRA    4FCC
....................             { 
....................                Flanco5 = 1;delay_ms(30);flag_luz=!flag_luz; 
4FBA:  BSF    x4C.5
4FBC:  MOVLW  1E
4FBE:  MOVLB  6
4FC0:  MOVWF  x2D
4FC2:  MOVLB  0
4FC4:  CALL   1ED8
4FC8:  MOVLB  4
4FCA:  BTG    x4D.3
....................             } 
....................          } 
....................          else 
4FCC:  BRA    4FD0
....................          { 
....................             Flanco5 = 0; 
4FCE:  BCF    x4C.5
....................          } 
....................                 
....................          if(UP)//Si oprime boton de Toma. 
4FD0:  BSF    F92.0
4FD2:  BTFSS  F80.0
4FD4:  BRA    5046
....................          { 
....................             delay_ms(500); 
4FD6:  MOVLW  02
4FD8:  MOVLB  6
4FDA:  MOVWF  x2C
4FDC:  MOVLW  FA
4FDE:  MOVWF  x2D
4FE0:  MOVLB  0
4FE2:  CALL   1ED8
4FE6:  MOVLB  6
4FE8:  DECFSZ x2C,F
4FEA:  BRA    4FDC
....................             if(UP)//Si oprime boton de Toma. 
4FEC:  BSF    F92.0
4FEE:  BTFSS  F80.0
4FF0:  BRA    5028
....................             { 
....................                delay_ms(30);Menu=3;//glcd_fillScreen(OFF); 
4FF2:  MOVLW  1E
4FF4:  MOVWF  x2D
4FF6:  MOVLB  0
4FF8:  CALL   1ED8
4FFC:  MOVLW  03
4FFE:  MOVLB  5
5000:  MOVWF  x09
....................                glcd_init(ON);             //Inicializa la glcd 
5002:  MOVLW  01
5004:  MOVLB  6
5006:  MOVWF  x2C
5008:  MOVLB  0
500A:  CALL   312A
....................                glcd_fillScreen(OFF);      //Limpia la pantalla 
500E:  MOVLB  6
5010:  CLRF   x2D
5012:  MOVLB  0
5014:  CALL   20E2
....................                glcd_update();   
5018:  CALL   19AC
....................                LuzBlanca=10;LuzUV=10; 
501C:  MOVLW  0A
501E:  MOVLB  5
5020:  MOVWF  x18
5022:  MOVWF  x19
....................             } 
....................             else 
5024:  BRA    5042
5026:  MOVLB  6
....................             { 
....................                if(Flanco6 == 0) 
5028:  MOVLB  4
502A:  BTFSC  x4C.6
502C:  BRA    5040
....................                { 
....................                   Flanco6 = 1;delay_ms(30);flag_toma=!flag_toma; 
502E:  BSF    x4C.6
5030:  MOVLW  1E
5032:  MOVLB  6
5034:  MOVWF  x2D
5036:  MOVLB  0
5038:  CALL   1ED8
503C:  MOVLB  4
503E:  BTG    x4D.2
5040:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................          else 
5042:  BRA    504A
5044:  MOVLB  4
....................          { 
....................             Flanco6 = 0; 
5046:  BCF    x4C.6
5048:  MOVLB  5
....................          } 
....................                 
....................          if((Tempouv[0]>=Tempouvp[0])&&(Tempouv[1]>=Tempouvp[1])&&(Tempouv[2]>=Tempouvp[2])&&(Tempouv[3]>=Tempouvp[3]))       
504A:  MOVF   x52,W
504C:  XORLW  80
504E:  MOVWF  00
5050:  MOVF   x4E,W
5052:  XORLW  80
5054:  SUBWF  00,W
5056:  BZ    505A
5058:  BC    50D2
505A:  MOVF   x53,W
505C:  XORLW  80
505E:  MOVWF  00
5060:  MOVF   x4F,W
5062:  XORLW  80
5064:  SUBWF  00,W
5066:  BZ    506A
5068:  BC    50D2
506A:  MOVF   x54,W
506C:  XORLW  80
506E:  MOVWF  00
5070:  MOVF   x50,W
5072:  XORLW  80
5074:  SUBWF  00,W
5076:  BZ    507A
5078:  BC    50D2
507A:  MOVF   x55,W
507C:  XORLW  80
507E:  MOVWF  00
5080:  MOVF   x51,W
5082:  XORLW  80
5084:  SUBWF  00,W
5086:  BZ    508A
5088:  BC    50D2
....................          { 
....................             if((Tempouvp[0]==0)&&(Tempouvp[1]==0)&&(Tempouvp[2]==0)&&(Tempouvp[3]==0)) 
508A:  MOVF   x52,F
508C:  BNZ   509C
508E:  MOVF   x53,F
5090:  BNZ   509C
5092:  MOVF   x54,F
5094:  BNZ   509C
5096:  MOVF   x55,F
5098:  BNZ   509C
....................             {} 
....................             else   
509A:  BRA    50D2
....................             { 
....................                tiempo_uv=0;LuzUV=10;flag_uv=!flag_uv;glcd_rect(102, 0, 127, 14, YES, OFF); 
509C:  MOVLB  4
509E:  BCF    x4D.7
50A0:  MOVLW  0A
50A2:  MOVLB  5
50A4:  MOVWF  x19
50A6:  MOVLB  4
50A8:  BTG    x4D.0
50AA:  MOVLW  66
50AC:  MOVLB  6
50AE:  MOVWF  x43
50B0:  CLRF   x44
50B2:  MOVLW  7F
50B4:  MOVWF  x45
50B6:  MOVLW  0E
50B8:  MOVWF  x46
50BA:  MOVLW  01
50BC:  MOVWF  x47
50BE:  CLRF   x48
50C0:  MOVLB  0
50C2:  CALL   1C5E
....................                Tempouv[0]=0;Tempouv[1]=0;Tempouv[2]=0;Tempouv[3]=0;UV2=0; 
50C6:  MOVLB  5
50C8:  CLRF   x4E
50CA:  CLRF   x4F
50CC:  CLRF   x50
50CE:  CLRF   x51
50D0:  CLRF   x1D
....................             } 
....................          } 
....................       Envio_Esclavos(); 
50D2:  MOVLB  0
50D4:  CALL   1930
50D8:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==3){ //Menu Principal. 
50DA:  MOVF   x09,W
50DC:  SUBLW  03
50DE:  BTFSS  FD8.2
50E0:  BRA    53C0
....................              
....................       strcpy(Menus.Letra,"Menu"); 
50E2:  MOVLW  06
50E4:  MOVWF  FEA
50E6:  MOVLW  16
50E8:  MOVWF  FE9
50EA:  MOVFF  FF2,62C
50EE:  BCF    FF2.7
50F0:  MOVLW  00
50F2:  MOVLB  0
50F4:  CALL   0F58
50F8:  TBLRD*-
50FA:  TBLRD*+
50FC:  MOVF   FF5,W
50FE:  MOVWF  FEE
5100:  IORLW  00
5102:  BNZ   50FA
5104:  MOVLB  6
5106:  BTFSC  x2C.7
5108:  BSF    FF2.7
....................       displayMenu(Menus.Letra,40,0,1,2); 
510A:  MOVLW  06
510C:  MOVWF  x2D
510E:  MOVLW  16
5110:  MOVWF  x2C
5112:  MOVLW  28
5114:  MOVWF  x2E
5116:  CLRF   x2F
5118:  MOVLW  01
511A:  MOVWF  x30
511C:  MOVLW  02
511E:  MOVWF  x31
5120:  MOVLB  0
5122:  CALL   213C
....................        
....................       if(Opcion==1)    
5126:  MOVLB  5
5128:  DECFSZ x0B,W
512A:  BRA    5172
....................          {strcpy(Menus.Letra,"Ajustes"); 
512C:  MOVLW  06
512E:  MOVWF  FEA
5130:  MOVLW  16
5132:  MOVWF  FE9
5134:  MOVFF  FF2,62C
5138:  BCF    FF2.7
513A:  MOVLW  00
513C:  MOVLB  0
513E:  CALL   0F78
5142:  TBLRD*-
5144:  TBLRD*+
5146:  MOVF   FF5,W
5148:  MOVWF  FEE
514A:  IORLW  00
514C:  BNZ   5144
514E:  MOVLB  6
5150:  BTFSC  x2C.7
5152:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,19,1,1);} 
5154:  MOVLW  06
5156:  MOVWF  x2D
5158:  MOVLW  16
515A:  MOVWF  x2C
515C:  CLRF   x2E
515E:  MOVLW  13
5160:  MOVWF  x2F
5162:  MOVLW  01
5164:  MOVWF  x30
5166:  MOVWF  x31
5168:  MOVLB  0
516A:  CALL   213C
....................       else 
516E:  BRA    51B4
5170:  MOVLB  5
....................          {strcpy(Menus.Letra,"Ajustes"); 
5172:  MOVLW  06
5174:  MOVWF  FEA
5176:  MOVLW  16
5178:  MOVWF  FE9
517A:  MOVFF  FF2,62C
517E:  BCF    FF2.7
5180:  MOVLW  00
5182:  MOVLB  0
5184:  CALL   0F78
5188:  TBLRD*-
518A:  TBLRD*+
518C:  MOVF   FF5,W
518E:  MOVWF  FEE
5190:  IORLW  00
5192:  BNZ   518A
5194:  MOVLB  6
5196:  BTFSC  x2C.7
5198:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,19,0,1);} 
519A:  MOVLW  06
519C:  MOVWF  x2D
519E:  MOVLW  16
51A0:  MOVWF  x2C
51A2:  CLRF   x2E
51A4:  MOVLW  13
51A6:  MOVWF  x2F
51A8:  CLRF   x30
51AA:  MOVLW  01
51AC:  MOVWF  x31
51AE:  MOVLB  0
51B0:  CALL   213C
....................           
....................       if(Opcion==2)    
51B4:  MOVLB  5
51B6:  MOVF   x0B,W
51B8:  SUBLW  02
51BA:  BNZ   5202
....................          {strcpy(Menus.Letra,"Clave"); 
51BC:  MOVLW  06
51BE:  MOVWF  FEA
51C0:  MOVLW  16
51C2:  MOVWF  FE9
51C4:  MOVFF  FF2,62C
51C8:  BCF    FF2.7
51CA:  MOVLW  00
51CC:  MOVLB  0
51CE:  CALL   0EEE
51D2:  TBLRD*-
51D4:  TBLRD*+
51D6:  MOVF   FF5,W
51D8:  MOVWF  FEE
51DA:  IORLW  00
51DC:  BNZ   51D4
51DE:  MOVLB  6
51E0:  BTFSC  x2C.7
51E2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,35,1,1);} 
51E4:  MOVLW  06
51E6:  MOVWF  x2D
51E8:  MOVLW  16
51EA:  MOVWF  x2C
51EC:  CLRF   x2E
51EE:  MOVLW  23
51F0:  MOVWF  x2F
51F2:  MOVLW  01
51F4:  MOVWF  x30
51F6:  MOVWF  x31
51F8:  MOVLB  0
51FA:  CALL   213C
....................       else 
51FE:  BRA    5244
5200:  MOVLB  5
....................          {strcpy(Menus.Letra,"Clave"); 
5202:  MOVLW  06
5204:  MOVWF  FEA
5206:  MOVLW  16
5208:  MOVWF  FE9
520A:  MOVFF  FF2,62C
520E:  BCF    FF2.7
5210:  MOVLW  00
5212:  MOVLB  0
5214:  CALL   0EEE
5218:  TBLRD*-
521A:  TBLRD*+
521C:  MOVF   FF5,W
521E:  MOVWF  FEE
5220:  IORLW  00
5222:  BNZ   521A
5224:  MOVLB  6
5226:  BTFSC  x2C.7
5228:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,35,0,1);}    
522A:  MOVLW  06
522C:  MOVWF  x2D
522E:  MOVLW  16
5230:  MOVWF  x2C
5232:  CLRF   x2E
5234:  MOVLW  23
5236:  MOVWF  x2F
5238:  CLRF   x30
523A:  MOVLW  01
523C:  MOVWF  x31
523E:  MOVLB  0
5240:  CALL   213C
....................           
....................        if(Opcion==3)    
5244:  MOVLB  5
5246:  MOVF   x0B,W
5248:  SUBLW  03
524A:  BNZ   5292
....................          {strcpy(Menus.Letra,"Modo"); 
524C:  MOVLW  06
524E:  MOVWF  FEA
5250:  MOVLW  16
5252:  MOVWF  FE9
5254:  MOVFF  FF2,62C
5258:  BCF    FF2.7
525A:  MOVLW  00
525C:  MOVLB  0
525E:  CALL   0F9A
5262:  TBLRD*-
5264:  TBLRD*+
5266:  MOVF   FF5,W
5268:  MOVWF  FEE
526A:  IORLW  00
526C:  BNZ   5264
526E:  MOVLB  6
5270:  BTFSC  x2C.7
5272:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,51,1,1);} 
5274:  MOVLW  06
5276:  MOVWF  x2D
5278:  MOVLW  16
527A:  MOVWF  x2C
527C:  CLRF   x2E
527E:  MOVLW  33
5280:  MOVWF  x2F
5282:  MOVLW  01
5284:  MOVWF  x30
5286:  MOVWF  x31
5288:  MOVLB  0
528A:  CALL   213C
....................       else 
528E:  BRA    52D4
5290:  MOVLB  5
....................          {strcpy(Menus.Letra,"Modo"); 
5292:  MOVLW  06
5294:  MOVWF  FEA
5296:  MOVLW  16
5298:  MOVWF  FE9
529A:  MOVFF  FF2,62C
529E:  BCF    FF2.7
52A0:  MOVLW  00
52A2:  MOVLB  0
52A4:  CALL   0F9A
52A8:  TBLRD*-
52AA:  TBLRD*+
52AC:  MOVF   FF5,W
52AE:  MOVWF  FEE
52B0:  IORLW  00
52B2:  BNZ   52AA
52B4:  MOVLB  6
52B6:  BTFSC  x2C.7
52B8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,51,0,1);}      
52BA:  MOVLW  06
52BC:  MOVWF  x2D
52BE:  MOVLW  16
52C0:  MOVWF  x2C
52C2:  CLRF   x2E
52C4:  MOVLW  33
52C6:  MOVWF  x2F
52C8:  CLRF   x30
52CA:  MOVLW  01
52CC:  MOVWF  x31
52CE:  MOVLB  0
52D0:  CALL   213C
....................        glcd_update();  
52D4:  CALL   19AC
....................        if(w==0) 
52D8:  MOVLB  4
52DA:  BTFSC  x4D.5
52DC:  BRA    52F8
....................        {delay_ms(500);w=1;} 
52DE:  MOVLW  02
52E0:  MOVLB  6
52E2:  MOVWF  x2C
52E4:  MOVLW  FA
52E6:  MOVWF  x2D
52E8:  MOVLB  0
52EA:  CALL   1ED8
52EE:  MOVLB  6
52F0:  DECFSZ x2C,F
52F2:  BRA    52E4
52F4:  MOVLB  4
52F6:  BSF    x4D.5
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
52F8:  BSF    F92.0
52FA:  BTFSS  F80.0
52FC:  BRA    5318
....................       {  if(Flanco == 0)  
52FE:  BTFSC  x4C.0
5300:  BRA    5316
....................             {Flanco = 1;delay_ms(30);Opcion--; 
5302:  BSF    x4C.0
5304:  MOVLW  1E
5306:  MOVLB  6
5308:  MOVWF  x2D
530A:  MOVLB  0
530C:  CALL   1ED8
5310:  MOVLB  5
5312:  DECF   x0B,F
5314:  MOVLB  4
....................             } 
....................       } 
....................          else 
5316:  BRA    531A
....................             {Flanco = 0;} 
5318:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
531A:  BSF    F92.1
531C:  BTFSS  F80.1
531E:  BRA    533A
....................       {  if(Flanco2 == 0)  
5320:  BTFSC  x4C.2
5322:  BRA    5338
....................             {Flanco2 = 1;delay_ms(30);Opcion++; 
5324:  BSF    x4C.2
5326:  MOVLW  1E
5328:  MOVLB  6
532A:  MOVWF  x2D
532C:  MOVLB  0
532E:  CALL   1ED8
5332:  MOVLB  5
5334:  INCF   x0B,F
5336:  MOVLB  4
....................             }      
....................       } 
....................          else 
5338:  BRA    533C
....................             {Flanco2 = 0;}   
533A:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
533C:  BSF    F92.2
533E:  BTFSS  F80.2
5340:  BRA    537E
....................       {  if(Flanco1 == 0)  
5342:  BTFSC  x4C.1
5344:  BRA    537C
....................             {Flanco1 = 1;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);unidad=1; 
5346:  BSF    x4C.1
5348:  MOVLW  02
534A:  MOVLB  6
534C:  MOVWF  x2C
534E:  MOVLW  FA
5350:  MOVWF  x2D
5352:  MOVLB  0
5354:  CALL   1ED8
5358:  MOVLB  6
535A:  DECFSZ x2C,F
535C:  BRA    534E
535E:  MOVLW  03
5360:  MOVLB  5
5362:  ADDWF  x0B,W
5364:  MOVWF  x09
5366:  MOVLW  01
5368:  MOVWF  x0B
536A:  MOVLB  6
536C:  CLRF   x2D
536E:  MOVLB  0
5370:  CALL   20E2
5374:  MOVLW  01
5376:  MOVLB  5
5378:  MOVWF  x0A
537A:  MOVLB  4
....................             } 
....................       } 
....................          else 
537C:  BRA    5380
....................             {Flanco1 = 0;}   
537E:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5380:  BSF    F92.3
5382:  BTFSS  F80.3
5384:  BRA    53AC
....................       {delay_ms(700);Menu=2;glcd_fillscreen(OFF);} 
5386:  MOVLW  04
5388:  MOVLB  6
538A:  MOVWF  x2C
538C:  MOVLW  AF
538E:  MOVWF  x2D
5390:  MOVLB  0
5392:  CALL   1ED8
5396:  MOVLB  6
5398:  DECFSZ x2C,F
539A:  BRA    538C
539C:  MOVLW  02
539E:  MOVLB  5
53A0:  MOVWF  x09
53A2:  MOVLB  6
53A4:  CLRF   x2D
53A6:  MOVLB  0
53A8:  CALL   20E2
....................              
....................       if(Opcion>3) 
53AC:  MOVLB  5
53AE:  MOVF   x0B,W
53B0:  SUBLW  03
53B2:  BC    53B8
....................       {Opcion=1;} 
53B4:  MOVLW  01
53B6:  MOVWF  x0B
....................       if(Opcion<1) 
53B8:  MOVF   x0B,F
53BA:  BNZ   53C0
....................       {Opcion=3;} 
53BC:  MOVLW  03
53BE:  MOVWF  x0B
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Ajustes. 
53C0:  MOVF   x09,W
53C2:  SUBLW  04
53C4:  BTFSS  FD8.2
53C6:  BRA    56C6
....................        
....................       if(Opcion==1)    
53C8:  DECFSZ x0B,W
53CA:  BRA    5412
....................          {strcpy(Menus.Letra,"Tiempo Purga"); 
53CC:  MOVLW  06
53CE:  MOVWF  FEA
53D0:  MOVLW  16
53D2:  MOVWF  FE9
53D4:  MOVFF  FF2,62C
53D8:  BCF    FF2.7
53DA:  MOVLW  00
53DC:  MOVLB  0
53DE:  CALL   0FBA
53E2:  TBLRD*-
53E4:  TBLRD*+
53E6:  MOVF   FF5,W
53E8:  MOVWF  FEE
53EA:  IORLW  00
53EC:  BNZ   53E4
53EE:  MOVLB  6
53F0:  BTFSC  x2C.7
53F2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,4,1,1);} 
53F4:  MOVLW  06
53F6:  MOVWF  x2D
53F8:  MOVLW  16
53FA:  MOVWF  x2C
53FC:  CLRF   x2E
53FE:  MOVLW  04
5400:  MOVWF  x2F
5402:  MOVLW  01
5404:  MOVWF  x30
5406:  MOVWF  x31
5408:  MOVLB  0
540A:  CALL   213C
....................       else 
540E:  BRA    5454
5410:  MOVLB  5
....................          {strcpy(Menus.Letra,"Tiempo Purga"); 
5412:  MOVLW  06
5414:  MOVWF  FEA
5416:  MOVLW  16
5418:  MOVWF  FE9
541A:  MOVFF  FF2,62C
541E:  BCF    FF2.7
5420:  MOVLW  00
5422:  MOVLB  0
5424:  CALL   0FBA
5428:  TBLRD*-
542A:  TBLRD*+
542C:  MOVF   FF5,W
542E:  MOVWF  FEE
5430:  IORLW  00
5432:  BNZ   542A
5434:  MOVLB  6
5436:  BTFSC  x2C.7
5438:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,4,0,1);} 
543A:  MOVLW  06
543C:  MOVWF  x2D
543E:  MOVLW  16
5440:  MOVWF  x2C
5442:  CLRF   x2E
5444:  MOVLW  04
5446:  MOVWF  x2F
5448:  CLRF   x30
544A:  MOVLW  01
544C:  MOVWF  x31
544E:  MOVLB  0
5450:  CALL   213C
....................                    
....................       if(Opcion==2)    
5454:  MOVLB  5
5456:  MOVF   x0B,W
5458:  SUBLW  02
545A:  BNZ   54A2
....................          {strcpy(Menus.Letra,"Tempo UV"); 
545C:  MOVLW  06
545E:  MOVWF  FEA
5460:  MOVLW  16
5462:  MOVWF  FE9
5464:  MOVFF  FF2,62C
5468:  BCF    FF2.7
546A:  MOVLW  00
546C:  MOVLB  0
546E:  CALL   0FE2
5472:  TBLRD*-
5474:  TBLRD*+
5476:  MOVF   FF5,W
5478:  MOVWF  FEE
547A:  IORLW  00
547C:  BNZ   5474
547E:  MOVLB  6
5480:  BTFSC  x2C.7
5482:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,28,1,1);} 
5484:  MOVLW  06
5486:  MOVWF  x2D
5488:  MOVLW  16
548A:  MOVWF  x2C
548C:  CLRF   x2E
548E:  MOVLW  1C
5490:  MOVWF  x2F
5492:  MOVLW  01
5494:  MOVWF  x30
5496:  MOVWF  x31
5498:  MOVLB  0
549A:  CALL   213C
....................       else 
549E:  BRA    54E4
54A0:  MOVLB  5
....................          {strcpy(Menus.Letra,"Tempo UV"); 
54A2:  MOVLW  06
54A4:  MOVWF  FEA
54A6:  MOVLW  16
54A8:  MOVWF  FE9
54AA:  MOVFF  FF2,62C
54AE:  BCF    FF2.7
54B0:  MOVLW  00
54B2:  MOVLB  0
54B4:  CALL   0FE2
54B8:  TBLRD*-
54BA:  TBLRD*+
54BC:  MOVF   FF5,W
54BE:  MOVWF  FEE
54C0:  IORLW  00
54C2:  BNZ   54BA
54C4:  MOVLB  6
54C6:  BTFSC  x2C.7
54C8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,28,0,1);}        
54CA:  MOVLW  06
54CC:  MOVWF  x2D
54CE:  MOVLW  16
54D0:  MOVWF  x2C
54D2:  CLRF   x2E
54D4:  MOVLW  1C
54D6:  MOVWF  x2F
54D8:  CLRF   x30
54DA:  MOVLW  01
54DC:  MOVWF  x31
54DE:  MOVLB  0
54E0:  CALL   213C
....................           
....................       if(Opcion==3)    
54E4:  MOVLB  5
54E6:  MOVF   x0B,W
54E8:  SUBLW  03
54EA:  BNZ   5532
....................          {strcpy(Menus.Letra,"Sensor de Flujo"); 
54EC:  MOVLW  06
54EE:  MOVWF  FEA
54F0:  MOVLW  16
54F2:  MOVWF  FE9
54F4:  MOVFF  FF2,62C
54F8:  BCF    FF2.7
54FA:  MOVLW  00
54FC:  MOVLB  0
54FE:  CALL   1006
5502:  TBLRD*-
5504:  TBLRD*+
5506:  MOVF   FF5,W
5508:  MOVWF  FEE
550A:  IORLW  00
550C:  BNZ   5504
550E:  MOVLB  6
5510:  BTFSC  x2C.7
5512:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,40,1,1);} 
5514:  MOVLW  06
5516:  MOVWF  x2D
5518:  MOVLW  16
551A:  MOVWF  x2C
551C:  CLRF   x2E
551E:  MOVLW  28
5520:  MOVWF  x2F
5522:  MOVLW  01
5524:  MOVWF  x30
5526:  MOVWF  x31
5528:  MOVLB  0
552A:  CALL   213C
....................       else 
552E:  BRA    5574
5530:  MOVLB  5
....................          {strcpy(Menus.Letra,"Sensor de Flujo"); 
5532:  MOVLW  06
5534:  MOVWF  FEA
5536:  MOVLW  16
5538:  MOVWF  FE9
553A:  MOVFF  FF2,62C
553E:  BCF    FF2.7
5540:  MOVLW  00
5542:  MOVLB  0
5544:  CALL   1006
5548:  TBLRD*-
554A:  TBLRD*+
554C:  MOVF   FF5,W
554E:  MOVWF  FEE
5550:  IORLW  00
5552:  BNZ   554A
5554:  MOVLB  6
5556:  BTFSC  x2C.7
5558:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,40,0,1);}  
555A:  MOVLW  06
555C:  MOVWF  x2D
555E:  MOVLW  16
5560:  MOVWF  x2C
5562:  CLRF   x2E
5564:  MOVLW  28
5566:  MOVWF  x2F
5568:  CLRF   x30
556A:  MOVLW  01
556C:  MOVWF  x31
556E:  MOVLB  0
5570:  CALL   213C
....................           
....................       if(Opcion==4)    
5574:  MOVLB  5
5576:  MOVF   x0B,W
5578:  SUBLW  04
557A:  BNZ   55C2
....................          {strcpy(Menus.Letra,"Sensor de Presion"); 
557C:  MOVLW  06
557E:  MOVWF  FEA
5580:  MOVLW  16
5582:  MOVWF  FE9
5584:  MOVFF  FF2,62C
5588:  BCF    FF2.7
558A:  MOVLW  00
558C:  MOVLB  0
558E:  CALL   1030
5592:  TBLRD*-
5594:  TBLRD*+
5596:  MOVF   FF5,W
5598:  MOVWF  FEE
559A:  IORLW  00
559C:  BNZ   5594
559E:  MOVLB  6
55A0:  BTFSC  x2C.7
55A2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,52,1,1);} 
55A4:  MOVLW  06
55A6:  MOVWF  x2D
55A8:  MOVLW  16
55AA:  MOVWF  x2C
55AC:  CLRF   x2E
55AE:  MOVLW  34
55B0:  MOVWF  x2F
55B2:  MOVLW  01
55B4:  MOVWF  x30
55B6:  MOVWF  x31
55B8:  MOVLB  0
55BA:  CALL   213C
....................       else 
55BE:  BRA    5604
55C0:  MOVLB  5
....................          {strcpy(Menus.Letra,"Sensor de Presion"); 
55C2:  MOVLW  06
55C4:  MOVWF  FEA
55C6:  MOVLW  16
55C8:  MOVWF  FE9
55CA:  MOVFF  FF2,62C
55CE:  BCF    FF2.7
55D0:  MOVLW  00
55D2:  MOVLB  0
55D4:  CALL   1030
55D8:  TBLRD*-
55DA:  TBLRD*+
55DC:  MOVF   FF5,W
55DE:  MOVWF  FEE
55E0:  IORLW  00
55E2:  BNZ   55DA
55E4:  MOVLB  6
55E6:  BTFSC  x2C.7
55E8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,52,0,1);}           
55EA:  MOVLW  06
55EC:  MOVWF  x2D
55EE:  MOVLW  16
55F0:  MOVWF  x2C
55F2:  CLRF   x2E
55F4:  MOVLW  34
55F6:  MOVWF  x2F
55F8:  CLRF   x30
55FA:  MOVLW  01
55FC:  MOVWF  x31
55FE:  MOVLB  0
5600:  CALL   213C
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
5604:  BSF    F92.0
5606:  BTFSS  F80.0
5608:  BRA    5626
....................       {  if(Flanco == 0)  
560A:  MOVLB  4
560C:  BTFSC  x4C.0
560E:  BRA    5624
....................             {Flanco = 1;delay_ms(30);Opcion--; 
5610:  BSF    x4C.0
5612:  MOVLW  1E
5614:  MOVLB  6
5616:  MOVWF  x2D
5618:  MOVLB  0
561A:  CALL   1ED8
561E:  MOVLB  5
5620:  DECF   x0B,F
5622:  MOVLB  4
....................             } 
....................       } 
....................          else 
5624:  BRA    562A
....................             {Flanco = 0;} 
5626:  MOVLB  4
5628:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
562A:  BSF    F92.1
562C:  BTFSS  F80.1
562E:  BRA    564A
....................       {  if(Flanco2 == 0)  
5630:  BTFSC  x4C.2
5632:  BRA    5648
....................             {Flanco2 = 1;delay_ms(30);Opcion++; 
5634:  BSF    x4C.2
5636:  MOVLW  1E
5638:  MOVLB  6
563A:  MOVWF  x2D
563C:  MOVLB  0
563E:  CALL   1ED8
5642:  MOVLB  5
5644:  INCF   x0B,F
5646:  MOVLB  4
....................             }      
....................       } 
....................          else 
5648:  BRA    564C
....................             {Flanco2 = 0;}   
564A:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
564C:  BSF    F92.2
564E:  BTFSS  F80.2
5650:  BRA    5684
....................       {  if(Flanco1 == 0)  
5652:  BTFSC  x4C.1
5654:  BRA    5682
....................             {Flanco1 = 1;delay_ms(500);Menu=Opcion+10;glcd_fillScreen(OFF); 
5656:  BSF    x4C.1
5658:  MOVLW  02
565A:  MOVLB  6
565C:  MOVWF  x2C
565E:  MOVLW  FA
5660:  MOVWF  x2D
5662:  MOVLB  0
5664:  CALL   1ED8
5668:  MOVLB  6
566A:  DECFSZ x2C,F
566C:  BRA    565E
566E:  MOVLW  0A
5670:  MOVLB  5
5672:  ADDWF  x0B,W
5674:  MOVWF  x09
5676:  MOVLB  6
5678:  CLRF   x2D
567A:  MOVLB  0
567C:  CALL   20E2
5680:  MOVLB  4
....................             } 
....................       } 
....................          else 
5682:  BRA    5686
....................             {Flanco1 = 0;}   
5684:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5686:  BSF    F92.3
5688:  BTFSS  F80.3
568A:  BRA    56B2
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);} 
568C:  MOVLW  04
568E:  MOVLB  6
5690:  MOVWF  x2C
5692:  MOVLW  AF
5694:  MOVWF  x2D
5696:  MOVLB  0
5698:  CALL   1ED8
569C:  MOVLB  6
569E:  DECFSZ x2C,F
56A0:  BRA    5692
56A2:  MOVLW  03
56A4:  MOVLB  5
56A6:  MOVWF  x09
56A8:  MOVLB  6
56AA:  CLRF   x2D
56AC:  MOVLB  0
56AE:  CALL   20E2
....................        
....................       if(Opcion>4) 
56B2:  MOVLB  5
56B4:  MOVF   x0B,W
56B6:  SUBLW  04
56B8:  BC    56BE
....................       {Opcion=1;} 
56BA:  MOVLW  01
56BC:  MOVWF  x0B
....................       if(Opcion<1) 
56BE:  MOVF   x0B,F
56C0:  BNZ   56C6
....................       {Opcion=4;} 
56C2:  MOVLW  04
56C4:  MOVWF  x0B
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==6){ //Menu de Modo. 
56C6:  MOVF   x09,W
56C8:  SUBLW  06
56CA:  BTFSS  FD8.2
56CC:  BRA    5824
....................           
....................       if(Opcion==1)    
56CE:  DECFSZ x0B,W
56D0:  BRA    5718
....................          {strcpy(Menus.Letra,"Mantenimiento"); 
56D2:  MOVLW  06
56D4:  MOVWF  FEA
56D6:  MOVLW  16
56D8:  MOVWF  FE9
56DA:  MOVFF  FF2,62C
56DE:  BCF    FF2.7
56E0:  MOVLW  00
56E2:  MOVLB  0
56E4:  CALL   105C
56E8:  TBLRD*-
56EA:  TBLRD*+
56EC:  MOVF   FF5,W
56EE:  MOVWF  FEE
56F0:  IORLW  00
56F2:  BNZ   56EA
56F4:  MOVLB  6
56F6:  BTFSC  x2C.7
56F8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,10,1,1);} 
56FA:  MOVLW  06
56FC:  MOVWF  x2D
56FE:  MOVLW  16
5700:  MOVWF  x2C
5702:  CLRF   x2E
5704:  MOVLW  0A
5706:  MOVWF  x2F
5708:  MOVLW  01
570A:  MOVWF  x30
570C:  MOVWF  x31
570E:  MOVLB  0
5710:  CALL   213C
....................       else 
5714:  BRA    575A
5716:  MOVLB  5
....................          {strcpy(Menus.Letra,"Mantenimiento"); 
5718:  MOVLW  06
571A:  MOVWF  FEA
571C:  MOVLW  16
571E:  MOVWF  FE9
5720:  MOVFF  FF2,62C
5724:  BCF    FF2.7
5726:  MOVLW  00
5728:  MOVLB  0
572A:  CALL   105C
572E:  TBLRD*-
5730:  TBLRD*+
5732:  MOVF   FF5,W
5734:  MOVWF  FEE
5736:  IORLW  00
5738:  BNZ   5730
573A:  MOVLB  6
573C:  BTFSC  x2C.7
573E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,10,0,1);}    
5740:  MOVLW  06
5742:  MOVWF  x2D
5744:  MOVLW  16
5746:  MOVWF  x2C
5748:  CLRF   x2E
574A:  MOVLW  0A
574C:  MOVWF  x2F
574E:  CLRF   x30
5750:  MOVLW  01
5752:  MOVWF  x31
5754:  MOVLB  0
5756:  CALL   213C
....................           
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
575A:  BSF    F92.0
575C:  BTFSS  F80.0
575E:  BRA    577C
....................       {  if(Flanco == 0)  
5760:  MOVLB  4
5762:  BTFSC  x4C.0
5764:  BRA    577A
....................             {Flanco = 1;delay_ms(30);Opcion--; 
5766:  BSF    x4C.0
5768:  MOVLW  1E
576A:  MOVLB  6
576C:  MOVWF  x2D
576E:  MOVLB  0
5770:  CALL   1ED8
5774:  MOVLB  5
5776:  DECF   x0B,F
5778:  MOVLB  4
....................             } 
....................       } 
....................          else 
577A:  BRA    5780
....................             {Flanco = 0;} 
577C:  MOVLB  4
577E:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5780:  BSF    F92.1
5782:  BTFSS  F80.1
5784:  BRA    57A0
....................       {  if(Flanco2 == 0)  
5786:  BTFSC  x4C.2
5788:  BRA    579E
....................             {Flanco2 = 1;delay_ms(30);Opcion++; 
578A:  BSF    x4C.2
578C:  MOVLW  1E
578E:  MOVLB  6
5790:  MOVWF  x2D
5792:  MOVLB  0
5794:  CALL   1ED8
5798:  MOVLB  5
579A:  INCF   x0B,F
579C:  MOVLB  4
....................             }      
....................       } 
....................          else 
579E:  BRA    57A2
....................             {Flanco2 = 0;}   
57A0:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
57A2:  BSF    F92.2
57A4:  BTFSS  F80.2
57A6:  BRA    57E2
....................       {  if(Flanco1 == 0)  
57A8:  BTFSC  x4C.1
57AA:  BRA    57E0
....................             {Flanco1 = 1;delay_ms(500);Menu=Opcion+30;glcd_fillScreen(OFF);Opcion=1;unidad=1; 
57AC:  BSF    x4C.1
57AE:  MOVLW  02
57B0:  MOVLB  6
57B2:  MOVWF  x2C
57B4:  MOVLW  FA
57B6:  MOVWF  x2D
57B8:  MOVLB  0
57BA:  CALL   1ED8
57BE:  MOVLB  6
57C0:  DECFSZ x2C,F
57C2:  BRA    57B4
57C4:  MOVLW  1E
57C6:  MOVLB  5
57C8:  ADDWF  x0B,W
57CA:  MOVWF  x09
57CC:  MOVLB  6
57CE:  CLRF   x2D
57D0:  MOVLB  0
57D2:  CALL   20E2
57D6:  MOVLW  01
57D8:  MOVLB  5
57DA:  MOVWF  x0B
57DC:  MOVWF  x0A
57DE:  MOVLB  4
....................             } 
....................       } 
....................          else 
57E0:  BRA    57E4
....................             {Flanco1 = 0;}   
57E2:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
57E4:  BSF    F92.3
57E6:  BTFSS  F80.3
57E8:  BRA    5810
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);} 
57EA:  MOVLW  04
57EC:  MOVLB  6
57EE:  MOVWF  x2C
57F0:  MOVLW  AF
57F2:  MOVWF  x2D
57F4:  MOVLB  0
57F6:  CALL   1ED8
57FA:  MOVLB  6
57FC:  DECFSZ x2C,F
57FE:  BRA    57F0
5800:  MOVLW  03
5802:  MOVLB  5
5804:  MOVWF  x09
5806:  MOVLB  6
5808:  CLRF   x2D
580A:  MOVLB  0
580C:  CALL   20E2
....................       if(Opcion>1) 
5810:  MOVLB  5
5812:  MOVF   x0B,W
5814:  SUBLW  01
5816:  BC    581C
....................       {Opcion=1;} 
5818:  MOVLW  01
581A:  MOVWF  x0B
....................       if(Opcion<1) 
581C:  MOVF   x0B,F
581E:  BNZ   5824
....................       {Opcion=1;} 
5820:  MOVLW  01
5822:  MOVWF  x0B
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==11){ //Menu de Purga. 
5824:  MOVF   x09,W
5826:  SUBLW  0B
5828:  BTFSS  FD8.2
582A:  BRA    5BB4
....................        
....................       strcpy(Menus.Letra,"T. Purga"); 
582C:  MOVLW  06
582E:  MOVWF  FEA
5830:  MOVLW  16
5832:  MOVWF  FE9
5834:  MOVFF  FF2,62C
5838:  BCF    FF2.7
583A:  MOVLW  00
583C:  MOVLB  0
583E:  CALL   1084
5842:  TBLRD*-
5844:  TBLRD*+
5846:  MOVF   FF5,W
5848:  MOVWF  FEE
584A:  IORLW  00
584C:  BNZ   5844
584E:  MOVLB  6
5850:  BTFSC  x2C.7
5852:  BSF    FF2.7
....................       displayMenu(Menus.Letra,10,0,1,2); 
5854:  MOVLW  06
5856:  MOVWF  x2D
5858:  MOVLW  16
585A:  MOVWF  x2C
585C:  MOVLW  0A
585E:  MOVWF  x2E
5860:  CLRF   x2F
5862:  MOVLW  01
5864:  MOVWF  x30
5866:  MOVLW  02
5868:  MOVWF  x31
586A:  MOVLB  0
586C:  CALL   213C
....................        
....................       if(unidad==4) 
5870:  MOVLB  5
5872:  MOVF   x0A,W
5874:  SUBLW  04
5876:  BNZ   5896
....................       {displayTiempo(Tpurgap[3],20,40,1,2);} 
5878:  MOVFF  541,62C
587C:  MOVLW  14
587E:  MOVLB  6
5880:  MOVWF  x2D
5882:  MOVLW  28
5884:  MOVWF  x2E
5886:  MOVLW  01
5888:  MOVWF  x2F
588A:  MOVLW  02
588C:  MOVWF  x30
588E:  MOVLB  0
5890:  CALL   2208
....................       else 
5894:  BRA    58B0
....................       {displayTiempo(Tpurgap[3],20,40,0,2);} 
5896:  MOVFF  541,62C
589A:  MOVLW  14
589C:  MOVLB  6
589E:  MOVWF  x2D
58A0:  MOVLW  28
58A2:  MOVWF  x2E
58A4:  CLRF   x2F
58A6:  MOVLW  02
58A8:  MOVWF  x30
58AA:  MOVLB  0
58AC:  CALL   2208
....................        
....................       if(unidad==3) 
58B0:  MOVLB  5
58B2:  MOVF   x0A,W
58B4:  SUBLW  03
58B6:  BNZ   58D4
....................       {displayTiempo(Tpurgap[2],40,40,1,2);} 
58B8:  MOVFF  540,62C
58BC:  MOVLW  28
58BE:  MOVLB  6
58C0:  MOVWF  x2D
58C2:  MOVWF  x2E
58C4:  MOVLW  01
58C6:  MOVWF  x2F
58C8:  MOVLW  02
58CA:  MOVWF  x30
58CC:  MOVLB  0
58CE:  CALL   2208
....................       else 
58D2:  BRA    58EC
....................       {displayTiempo(Tpurgap[2],40,40,0,2);} 
58D4:  MOVFF  540,62C
58D8:  MOVLW  28
58DA:  MOVLB  6
58DC:  MOVWF  x2D
58DE:  MOVWF  x2E
58E0:  CLRF   x2F
58E2:  MOVLW  02
58E4:  MOVWF  x30
58E6:  MOVLB  0
58E8:  CALL   2208
....................        
....................       if(unidad==2) 
58EC:  MOVLB  5
58EE:  MOVF   x0A,W
58F0:  SUBLW  02
58F2:  BNZ   5912
....................       {displayTiempo(Tpurgap[1],70,40,1,2);} 
58F4:  MOVFF  53F,62C
58F8:  MOVLW  46
58FA:  MOVLB  6
58FC:  MOVWF  x2D
58FE:  MOVLW  28
5900:  MOVWF  x2E
5902:  MOVLW  01
5904:  MOVWF  x2F
5906:  MOVLW  02
5908:  MOVWF  x30
590A:  MOVLB  0
590C:  CALL   2208
....................       else 
5910:  BRA    592C
....................       {displayTiempo(Tpurgap[1],70,40,0,2);} 
5912:  MOVFF  53F,62C
5916:  MOVLW  46
5918:  MOVLB  6
591A:  MOVWF  x2D
591C:  MOVLW  28
591E:  MOVWF  x2E
5920:  CLRF   x2F
5922:  MOVLW  02
5924:  MOVWF  x30
5926:  MOVLB  0
5928:  CALL   2208
....................        
....................       if(unidad==1) 
592C:  MOVLB  5
592E:  DECFSZ x0A,W
5930:  BRA    5950
....................       {displayTiempo(Tpurgap[0],90,40,1,2);} 
5932:  MOVFF  53E,62C
5936:  MOVLW  5A
5938:  MOVLB  6
593A:  MOVWF  x2D
593C:  MOVLW  28
593E:  MOVWF  x2E
5940:  MOVLW  01
5942:  MOVWF  x2F
5944:  MOVLW  02
5946:  MOVWF  x30
5948:  MOVLB  0
594A:  CALL   2208
....................       else 
594E:  BRA    596A
....................       {displayTiempo(Tpurgap[0],90,40,0,2);} 
5950:  MOVFF  53E,62C
5954:  MOVLW  5A
5956:  MOVLB  6
5958:  MOVWF  x2D
595A:  MOVLW  28
595C:  MOVWF  x2E
595E:  CLRF   x2F
5960:  MOVLW  02
5962:  MOVWF  x30
5964:  MOVLB  0
5966:  CALL   2208
....................        
....................       glcd_text57(60, 42, Dos_puntos, 2, ON); 
596A:  MOVLW  3C
596C:  MOVLB  6
596E:  MOVWF  x43
5970:  MOVLW  2A
5972:  MOVWF  x44
5974:  MOVLW  04
5976:  MOVWF  x46
5978:  MOVLW  77
597A:  MOVWF  x45
597C:  MOVLW  02
597E:  MOVWF  x47
5980:  MOVLW  01
5982:  MOVWF  x48
5984:  MOVLB  0
5986:  CALL   1D20
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
598A:  BSF    F92.0
598C:  BTFSS  F80.0
598E:  BRA    59BC
....................       {  if(Flanco == 0)  
5990:  MOVLB  4
5992:  BTFSC  x4C.0
5994:  BRA    59BA
....................             {Flanco = 1;delay_ms(30);Tpurgap[unidad-1]++; 
5996:  BSF    x4C.0
5998:  MOVLW  1E
599A:  MOVLB  6
599C:  MOVWF  x2D
599E:  MOVLB  0
59A0:  CALL   1ED8
59A4:  MOVLW  01
59A6:  MOVLB  5
59A8:  SUBWF  x0A,W
59AA:  CLRF   03
59AC:  ADDLW  3E
59AE:  MOVWF  FE9
59B0:  MOVLW  05
59B2:  ADDWFC 03,W
59B4:  MOVWF  FEA
59B6:  INCF   FEF,F
59B8:  MOVLB  4
....................             } 
....................       } 
....................          else 
59BA:  BRA    59C0
....................             {Flanco = 0;} 
59BC:  MOVLB  4
59BE:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
59C0:  BSF    F92.1
59C2:  BTFSS  F80.1
59C4:  BRA    59F0
....................       {  if(Flanco2 == 0)  
59C6:  BTFSC  x4C.2
59C8:  BRA    59EE
....................             {Flanco2 = 1;delay_ms(30);Tpurgap[unidad-1]--; 
59CA:  BSF    x4C.2
59CC:  MOVLW  1E
59CE:  MOVLB  6
59D0:  MOVWF  x2D
59D2:  MOVLB  0
59D4:  CALL   1ED8
59D8:  MOVLW  01
59DA:  MOVLB  5
59DC:  SUBWF  x0A,W
59DE:  CLRF   03
59E0:  ADDLW  3E
59E2:  MOVWF  FE9
59E4:  MOVLW  05
59E6:  ADDWFC 03,W
59E8:  MOVWF  FEA
59EA:  DECF   FEF,F
59EC:  MOVLB  4
....................             }      
....................       } 
....................          else 
59EE:  BRA    59F2
....................             {Flanco2 = 0;}   
59F0:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
59F2:  BSF    F92.2
59F4:  BTFSS  F80.2
59F6:  BRA    5A12
....................       {  if(Flanco1 == 0)  
59F8:  BTFSC  x4C.1
59FA:  BRA    5A10
....................             {Flanco1 = 1;delay_ms(30);unidad--; 
59FC:  BSF    x4C.1
59FE:  MOVLW  1E
5A00:  MOVLB  6
5A02:  MOVWF  x2D
5A04:  MOVLB  0
5A06:  CALL   1ED8
5A0A:  MOVLB  5
5A0C:  DECF   x0A,F
5A0E:  MOVLB  4
....................             } 
....................       } 
....................          else 
5A10:  BRA    5A14
....................             {Flanco1 = 0;}   
5A12:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5A14:  BSF    F92.3
5A16:  BTFSS  F80.3
5A18:  BRA    5AEA
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
5A1A:  MOVLW  04
5A1C:  MOVLB  6
5A1E:  MOVWF  x2C
5A20:  MOVLW  AF
5A22:  MOVWF  x2D
5A24:  MOVLB  0
5A26:  CALL   1ED8
5A2A:  MOVLB  6
5A2C:  DECFSZ x2C,F
5A2E:  BRA    5A20
5A30:  MOVLW  03
5A32:  MOVLB  5
5A34:  MOVWF  x09
5A36:  MOVLB  6
5A38:  CLRF   x2D
5A3A:  MOVLB  0
5A3C:  CALL   20E2
5A40:  MOVLW  01
5A42:  MOVLB  5
5A44:  MOVWF  x0B
....................          write_eeprom(4,Tpurgap[0]);write_eeprom(5,Tpurgap[1]);write_eeprom(6,Tpurgap[2]);write_eeprom(7,Tpurgap[3]);} 
5A46:  MOVLW  04
5A48:  MOVWF  FA9
5A4A:  MOVFF  53E,FA8
5A4E:  BCF    FA6.6
5A50:  BCF    FA6.7
5A52:  BSF    FA6.2
5A54:  MOVF   FF2,W
5A56:  MOVWF  00
5A58:  BCF    FF2.7
5A5A:  MOVLB  F
5A5C:  MOVLW  55
5A5E:  MOVWF  FA7
5A60:  MOVLW  AA
5A62:  MOVWF  FA7
5A64:  BSF    FA6.1
5A66:  BTFSC  FA6.1
5A68:  BRA    5A66
5A6A:  BCF    FA6.2
5A6C:  MOVF   00,W
5A6E:  IORWF  FF2,F
5A70:  MOVLW  05
5A72:  MOVWF  FA9
5A74:  MOVFF  53F,FA8
5A78:  BCF    FA6.6
5A7A:  BCF    FA6.7
5A7C:  BSF    FA6.2
5A7E:  MOVF   FF2,W
5A80:  MOVWF  00
5A82:  BCF    FF2.7
5A84:  MOVLW  55
5A86:  MOVWF  FA7
5A88:  MOVLW  AA
5A8A:  MOVWF  FA7
5A8C:  BSF    FA6.1
5A8E:  BTFSC  FA6.1
5A90:  BRA    5A8E
5A92:  BCF    FA6.2
5A94:  MOVF   00,W
5A96:  IORWF  FF2,F
5A98:  MOVLW  06
5A9A:  MOVWF  FA9
5A9C:  MOVFF  540,FA8
5AA0:  BCF    FA6.6
5AA2:  BCF    FA6.7
5AA4:  BSF    FA6.2
5AA6:  MOVF   FF2,W
5AA8:  MOVWF  00
5AAA:  BCF    FF2.7
5AAC:  MOVLW  55
5AAE:  MOVWF  FA7
5AB0:  MOVLW  AA
5AB2:  MOVWF  FA7
5AB4:  BSF    FA6.1
5AB6:  BTFSC  FA6.1
5AB8:  BRA    5AB6
5ABA:  BCF    FA6.2
5ABC:  MOVF   00,W
5ABE:  IORWF  FF2,F
5AC0:  MOVLW  07
5AC2:  MOVWF  FA9
5AC4:  MOVFF  541,FA8
5AC8:  BCF    FA6.6
5ACA:  BCF    FA6.7
5ACC:  BSF    FA6.2
5ACE:  MOVF   FF2,W
5AD0:  MOVWF  00
5AD2:  BCF    FF2.7
5AD4:  MOVLW  55
5AD6:  MOVWF  FA7
5AD8:  MOVLW  AA
5ADA:  MOVWF  FA7
5ADC:  BSF    FA6.1
5ADE:  BTFSC  FA6.1
5AE0:  BRA    5ADE
5AE2:  BCF    FA6.2
5AE4:  MOVF   00,W
5AE6:  IORWF  FF2,F
5AE8:  MOVLB  4
....................        
....................       for(i=0;i<4;i++) 
5AEA:  CLRF   x38
5AEC:  MOVF   x38,W
5AEE:  SUBLW  03
5AF0:  BNC   5B44
....................       { 
....................          if(Tpurgap[i]>9) 
5AF2:  CLRF   03
5AF4:  MOVF   x38,W
5AF6:  ADDLW  3E
5AF8:  MOVWF  FE9
5AFA:  MOVLW  05
5AFC:  ADDWFC 03,W
5AFE:  MOVWF  FEA
5B00:  BTFSC  FEF.7
5B02:  BRA    5B1A
5B04:  MOVF   FEF,W
5B06:  SUBLW  09
5B08:  BC    5B1A
....................          {Tpurgap[i]=0;} 
5B0A:  CLRF   03
5B0C:  MOVF   x38,W
5B0E:  ADDLW  3E
5B10:  MOVWF  FE9
5B12:  MOVLW  05
5B14:  ADDWFC 03,W
5B16:  MOVWF  FEA
5B18:  CLRF   FEF
....................           
....................          if(Tpurgap[i]<0) 
5B1A:  CLRF   03
5B1C:  MOVF   x38,W
5B1E:  ADDLW  3E
5B20:  MOVWF  FE9
5B22:  MOVLW  05
5B24:  ADDWFC 03,W
5B26:  MOVWF  FEA
5B28:  BTFSC  FEF.7
5B2A:  BRA    5B2E
5B2C:  BRA    5B40
....................          {Tpurgap[i]=9;} 
5B2E:  CLRF   03
5B30:  MOVF   x38,W
5B32:  ADDLW  3E
5B34:  MOVWF  FE9
5B36:  MOVLW  05
5B38:  ADDWFC 03,W
5B3A:  MOVWF  FEA
5B3C:  MOVLW  09
5B3E:  MOVWF  FEF
....................       }       
5B40:  INCF   x38,F
5B42:  BRA    5AEC
....................       for(i=1;i<4;i++) 
5B44:  MOVLW  01
5B46:  MOVWF  x38
5B48:  MOVF   x38,W
5B4A:  SUBLW  03
5B4C:  BNC   5BA2
....................       { 
....................          if(Tpurgap[i]>5) 
5B4E:  CLRF   03
5B50:  MOVF   x38,W
5B52:  ADDLW  3E
5B54:  MOVWF  FE9
5B56:  MOVLW  05
5B58:  ADDWFC 03,W
5B5A:  MOVWF  FEA
5B5C:  BTFSC  FEF.7
5B5E:  BRA    5B76
5B60:  MOVF   FEF,W
5B62:  SUBLW  05
5B64:  BC    5B76
....................          {Tpurgap[i]=0;} 
5B66:  CLRF   03
5B68:  MOVF   x38,W
5B6A:  ADDLW  3E
5B6C:  MOVWF  FE9
5B6E:  MOVLW  05
5B70:  ADDWFC 03,W
5B72:  MOVWF  FEA
5B74:  CLRF   FEF
....................           
....................          if(Tpurgap[i]<0) 
5B76:  CLRF   03
5B78:  MOVF   x38,W
5B7A:  ADDLW  3E
5B7C:  MOVWF  FE9
5B7E:  MOVLW  05
5B80:  ADDWFC 03,W
5B82:  MOVWF  FEA
5B84:  BTFSC  FEF.7
5B86:  BRA    5B8A
5B88:  BRA    5B9C
....................          {Tpurgap[i]=5;} 
5B8A:  CLRF   03
5B8C:  MOVF   x38,W
5B8E:  ADDLW  3E
5B90:  MOVWF  FE9
5B92:  MOVLW  05
5B94:  ADDWFC 03,W
5B96:  MOVWF  FEA
5B98:  MOVLW  05
5B9A:  MOVWF  FEF
....................         i++;  
5B9C:  INCF   x38,F
....................       } 
5B9E:  INCF   x38,F
5BA0:  BRA    5B48
....................       if(unidad<1) 
5BA2:  MOVLB  5
5BA4:  MOVF   x0A,F
5BA6:  BNZ   5BAC
....................       {unidad=4;} 
5BA8:  MOVLW  04
5BAA:  MOVWF  x0A
....................       if(Opcion<1) 
5BAC:  MOVF   x0B,F
5BAE:  BNZ   5BB4
....................       {Opcion=4;} 
5BB0:  MOVLW  04
5BB2:  MOVWF  x0B
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==12){ //Menu de Tempo UV. 
5BB4:  MOVF   x09,W
5BB6:  SUBLW  0C
5BB8:  BTFSS  FD8.2
5BBA:  BRA    5F50
....................        
....................       strcpy(Menus.Letra,"T. UV"); 
5BBC:  MOVLW  06
5BBE:  MOVWF  FEA
5BC0:  MOVLW  16
5BC2:  MOVWF  FE9
5BC4:  MOVFF  FF2,62C
5BC8:  BCF    FF2.7
5BCA:  MOVLW  00
5BCC:  MOVLB  0
5BCE:  CALL   10A8
5BD2:  TBLRD*-
5BD4:  TBLRD*+
5BD6:  MOVF   FF5,W
5BD8:  MOVWF  FEE
5BDA:  IORLW  00
5BDC:  BNZ   5BD4
5BDE:  MOVLB  6
5BE0:  BTFSC  x2C.7
5BE2:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2); 
5BE4:  MOVLW  06
5BE6:  MOVWF  x2D
5BE8:  MOVLW  16
5BEA:  MOVWF  x2C
5BEC:  MOVLW  1E
5BEE:  MOVWF  x2E
5BF0:  CLRF   x2F
5BF2:  MOVLW  01
5BF4:  MOVWF  x30
5BF6:  MOVLW  02
5BF8:  MOVWF  x31
5BFA:  MOVLB  0
5BFC:  CALL   213C
....................        
....................       if(unidad==4) 
5C00:  MOVLB  5
5C02:  MOVF   x0A,W
5C04:  SUBLW  04
5C06:  BNZ   5C26
....................       {displayTiempo(Tempouvp[3],20,40,1,2);} 
5C08:  MOVFF  555,62C
5C0C:  MOVLW  14
5C0E:  MOVLB  6
5C10:  MOVWF  x2D
5C12:  MOVLW  28
5C14:  MOVWF  x2E
5C16:  MOVLW  01
5C18:  MOVWF  x2F
5C1A:  MOVLW  02
5C1C:  MOVWF  x30
5C1E:  MOVLB  0
5C20:  CALL   2208
....................       else 
5C24:  BRA    5C40
....................       {displayTiempo(Tempouvp[3],20,40,0,2);} 
5C26:  MOVFF  555,62C
5C2A:  MOVLW  14
5C2C:  MOVLB  6
5C2E:  MOVWF  x2D
5C30:  MOVLW  28
5C32:  MOVWF  x2E
5C34:  CLRF   x2F
5C36:  MOVLW  02
5C38:  MOVWF  x30
5C3A:  MOVLB  0
5C3C:  CALL   2208
....................        
....................       if(unidad==3) 
5C40:  MOVLB  5
5C42:  MOVF   x0A,W
5C44:  SUBLW  03
5C46:  BNZ   5C64
....................       {displayTiempo(Tempouvp[2],40,40,1,2);} 
5C48:  MOVFF  554,62C
5C4C:  MOVLW  28
5C4E:  MOVLB  6
5C50:  MOVWF  x2D
5C52:  MOVWF  x2E
5C54:  MOVLW  01
5C56:  MOVWF  x2F
5C58:  MOVLW  02
5C5A:  MOVWF  x30
5C5C:  MOVLB  0
5C5E:  CALL   2208
....................       else 
5C62:  BRA    5C7C
....................       {displayTiempo(Tempouvp[2],40,40,0,2);} 
5C64:  MOVFF  554,62C
5C68:  MOVLW  28
5C6A:  MOVLB  6
5C6C:  MOVWF  x2D
5C6E:  MOVWF  x2E
5C70:  CLRF   x2F
5C72:  MOVLW  02
5C74:  MOVWF  x30
5C76:  MOVLB  0
5C78:  CALL   2208
....................        
....................       if(unidad==2) 
5C7C:  MOVLB  5
5C7E:  MOVF   x0A,W
5C80:  SUBLW  02
5C82:  BNZ   5CA2
....................       {displayTiempo(Tempouvp[1],70,40,1,2);} 
5C84:  MOVFF  553,62C
5C88:  MOVLW  46
5C8A:  MOVLB  6
5C8C:  MOVWF  x2D
5C8E:  MOVLW  28
5C90:  MOVWF  x2E
5C92:  MOVLW  01
5C94:  MOVWF  x2F
5C96:  MOVLW  02
5C98:  MOVWF  x30
5C9A:  MOVLB  0
5C9C:  CALL   2208
....................       else 
5CA0:  BRA    5CBC
....................       {displayTiempo(Tempouvp[1],70,40,0,2);} 
5CA2:  MOVFF  553,62C
5CA6:  MOVLW  46
5CA8:  MOVLB  6
5CAA:  MOVWF  x2D
5CAC:  MOVLW  28
5CAE:  MOVWF  x2E
5CB0:  CLRF   x2F
5CB2:  MOVLW  02
5CB4:  MOVWF  x30
5CB6:  MOVLB  0
5CB8:  CALL   2208
....................        
....................       if(unidad==1) 
5CBC:  MOVLB  5
5CBE:  DECFSZ x0A,W
5CC0:  BRA    5CE0
....................       {displayTiempo(Tempouvp[0],90,40,1,2);} 
5CC2:  MOVFF  552,62C
5CC6:  MOVLW  5A
5CC8:  MOVLB  6
5CCA:  MOVWF  x2D
5CCC:  MOVLW  28
5CCE:  MOVWF  x2E
5CD0:  MOVLW  01
5CD2:  MOVWF  x2F
5CD4:  MOVLW  02
5CD6:  MOVWF  x30
5CD8:  MOVLB  0
5CDA:  CALL   2208
....................       else 
5CDE:  BRA    5CFA
....................       {displayTiempo(Tempouvp[0],90,40,0,2);} 
5CE0:  MOVFF  552,62C
5CE4:  MOVLW  5A
5CE6:  MOVLB  6
5CE8:  MOVWF  x2D
5CEA:  MOVLW  28
5CEC:  MOVWF  x2E
5CEE:  CLRF   x2F
5CF0:  MOVLW  02
5CF2:  MOVWF  x30
5CF4:  MOVLB  0
5CF6:  CALL   2208
....................        
....................       glcd_text57(60, 42, Dos_puntos, 2, ON); 
5CFA:  MOVLW  3C
5CFC:  MOVLB  6
5CFE:  MOVWF  x43
5D00:  MOVLW  2A
5D02:  MOVWF  x44
5D04:  MOVLW  04
5D06:  MOVWF  x46
5D08:  MOVLW  77
5D0A:  MOVWF  x45
5D0C:  MOVLW  02
5D0E:  MOVWF  x47
5D10:  MOVLW  01
5D12:  MOVWF  x48
5D14:  MOVLB  0
5D16:  CALL   1D20
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
5D1A:  BSF    F92.0
5D1C:  BTFSS  F80.0
5D1E:  BRA    5D4C
....................       {  if(Flanco == 0)  
5D20:  MOVLB  4
5D22:  BTFSC  x4C.0
5D24:  BRA    5D4A
....................             {Flanco = 1;delay_ms(30);Tempouvp[unidad-1]++; 
5D26:  BSF    x4C.0
5D28:  MOVLW  1E
5D2A:  MOVLB  6
5D2C:  MOVWF  x2D
5D2E:  MOVLB  0
5D30:  CALL   1ED8
5D34:  MOVLW  01
5D36:  MOVLB  5
5D38:  SUBWF  x0A,W
5D3A:  CLRF   03
5D3C:  ADDLW  52
5D3E:  MOVWF  FE9
5D40:  MOVLW  05
5D42:  ADDWFC 03,W
5D44:  MOVWF  FEA
5D46:  INCF   FEF,F
5D48:  MOVLB  4
....................             } 
....................       } 
....................          else 
5D4A:  BRA    5D50
....................             {Flanco = 0;} 
5D4C:  MOVLB  4
5D4E:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5D50:  BSF    F92.1
5D52:  BTFSS  F80.1
5D54:  BRA    5D80
....................       {  if(Flanco2 == 0)  
5D56:  BTFSC  x4C.2
5D58:  BRA    5D7E
....................             {Flanco2 = 1;delay_ms(30);Tempouvp[unidad-1]--; 
5D5A:  BSF    x4C.2
5D5C:  MOVLW  1E
5D5E:  MOVLB  6
5D60:  MOVWF  x2D
5D62:  MOVLB  0
5D64:  CALL   1ED8
5D68:  MOVLW  01
5D6A:  MOVLB  5
5D6C:  SUBWF  x0A,W
5D6E:  CLRF   03
5D70:  ADDLW  52
5D72:  MOVWF  FE9
5D74:  MOVLW  05
5D76:  ADDWFC 03,W
5D78:  MOVWF  FEA
5D7A:  DECF   FEF,F
5D7C:  MOVLB  4
....................             }      
....................       } 
....................          else 
5D7E:  BRA    5D82
....................             {Flanco2 = 0;}   
5D80:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
5D82:  BSF    F92.2
5D84:  BTFSS  F80.2
5D86:  BRA    5DA2
....................       {  if(Flanco1 == 0)  
5D88:  BTFSC  x4C.1
5D8A:  BRA    5DA0
....................             {Flanco1 = 1;delay_ms(30);unidad--; 
5D8C:  BSF    x4C.1
5D8E:  MOVLW  1E
5D90:  MOVLB  6
5D92:  MOVWF  x2D
5D94:  MOVLB  0
5D96:  CALL   1ED8
5D9A:  MOVLB  5
5D9C:  DECF   x0A,F
5D9E:  MOVLB  4
....................             } 
....................       } 
....................          else 
5DA0:  BRA    5DA4
....................             {Flanco1 = 0;}   
5DA2:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5DA4:  BSF    F92.3
5DA6:  BTFSS  F80.3
5DA8:  BRA    5E84
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
5DAA:  MOVLW  04
5DAC:  MOVLB  6
5DAE:  MOVWF  x2C
5DB0:  MOVLW  AF
5DB2:  MOVWF  x2D
5DB4:  MOVLB  0
5DB6:  CALL   1ED8
5DBA:  MOVLB  6
5DBC:  DECFSZ x2C,F
5DBE:  BRA    5DB0
5DC0:  MOVLW  03
5DC2:  MOVLB  5
5DC4:  MOVWF  x09
5DC6:  MOVLB  6
5DC8:  CLRF   x2D
5DCA:  MOVLB  0
5DCC:  CALL   20E2
5DD0:  MOVLW  01
5DD2:  MOVLB  5
5DD4:  MOVWF  x0B
....................       write_eeprom(21,Tempouvp[0]);write_eeprom(22,Tempouvp[1]);write_eeprom(23,Tempouvp[2]);write_eeprom(24,Tempouvp[3]); 
5DD6:  MOVLW  15
5DD8:  MOVWF  FA9
5DDA:  MOVFF  552,FA8
5DDE:  BCF    FA6.6
5DE0:  BCF    FA6.7
5DE2:  BSF    FA6.2
5DE4:  MOVF   FF2,W
5DE6:  MOVWF  00
5DE8:  BCF    FF2.7
5DEA:  MOVLB  F
5DEC:  MOVLW  55
5DEE:  MOVWF  FA7
5DF0:  MOVLW  AA
5DF2:  MOVWF  FA7
5DF4:  BSF    FA6.1
5DF6:  BTFSC  FA6.1
5DF8:  BRA    5DF6
5DFA:  BCF    FA6.2
5DFC:  MOVF   00,W
5DFE:  IORWF  FF2,F
5E00:  MOVLW  16
5E02:  MOVWF  FA9
5E04:  MOVFF  553,FA8
5E08:  BCF    FA6.6
5E0A:  BCF    FA6.7
5E0C:  BSF    FA6.2
5E0E:  MOVF   FF2,W
5E10:  MOVWF  00
5E12:  BCF    FF2.7
5E14:  MOVLW  55
5E16:  MOVWF  FA7
5E18:  MOVLW  AA
5E1A:  MOVWF  FA7
5E1C:  BSF    FA6.1
5E1E:  BTFSC  FA6.1
5E20:  BRA    5E1E
5E22:  BCF    FA6.2
5E24:  MOVF   00,W
5E26:  IORWF  FF2,F
5E28:  MOVLW  17
5E2A:  MOVWF  FA9
5E2C:  MOVFF  554,FA8
5E30:  BCF    FA6.6
5E32:  BCF    FA6.7
5E34:  BSF    FA6.2
5E36:  MOVF   FF2,W
5E38:  MOVWF  00
5E3A:  BCF    FF2.7
5E3C:  MOVLW  55
5E3E:  MOVWF  FA7
5E40:  MOVLW  AA
5E42:  MOVWF  FA7
5E44:  BSF    FA6.1
5E46:  BTFSC  FA6.1
5E48:  BRA    5E46
5E4A:  BCF    FA6.2
5E4C:  MOVF   00,W
5E4E:  IORWF  FF2,F
5E50:  MOVLW  18
5E52:  MOVWF  FA9
5E54:  MOVFF  555,FA8
5E58:  BCF    FA6.6
5E5A:  BCF    FA6.7
5E5C:  BSF    FA6.2
5E5E:  MOVF   FF2,W
5E60:  MOVWF  00
5E62:  BCF    FF2.7
5E64:  MOVLW  55
5E66:  MOVWF  FA7
5E68:  MOVLW  AA
5E6A:  MOVWF  FA7
5E6C:  BSF    FA6.1
5E6E:  BTFSC  FA6.1
5E70:  BRA    5E6E
5E72:  BCF    FA6.2
5E74:  MOVF   00,W
5E76:  IORWF  FF2,F
....................       Tempouv[0]=0;Tempouv[1]=0;Tempouv[2]=0;Tempouv[3]=0;} 
5E78:  MOVLB  5
5E7A:  CLRF   x4E
5E7C:  CLRF   x4F
5E7E:  CLRF   x50
5E80:  CLRF   x51
5E82:  MOVLB  4
....................              
....................       for(i=0;i<3;i++) 
5E84:  CLRF   x38
5E86:  MOVF   x38,W
5E88:  SUBLW  02
5E8A:  BNC   5EE0
....................       { 
....................          if(Tempouvp[i]>9) 
5E8C:  CLRF   03
5E8E:  MOVF   x38,W
5E90:  ADDLW  52
5E92:  MOVWF  FE9
5E94:  MOVLW  05
5E96:  ADDWFC 03,W
5E98:  MOVWF  FEA
5E9A:  BTFSC  FEF.7
5E9C:  BRA    5EB4
5E9E:  MOVF   FEF,W
5EA0:  SUBLW  09
5EA2:  BC    5EB4
....................          {Tempouvp[i]=0;} 
5EA4:  CLRF   03
5EA6:  MOVF   x38,W
5EA8:  ADDLW  52
5EAA:  MOVWF  FE9
5EAC:  MOVLW  05
5EAE:  ADDWFC 03,W
5EB0:  MOVWF  FEA
5EB2:  CLRF   FEF
....................           
....................          if(Tempouvp[i]<0) 
5EB4:  CLRF   03
5EB6:  MOVF   x38,W
5EB8:  ADDLW  52
5EBA:  MOVWF  FE9
5EBC:  MOVLW  05
5EBE:  ADDWFC 03,W
5EC0:  MOVWF  FEA
5EC2:  BTFSC  FEF.7
5EC4:  BRA    5EC8
5EC6:  BRA    5EDA
....................          {Tempouvp[i]=9;} 
5EC8:  CLRF   03
5ECA:  MOVF   x38,W
5ECC:  ADDLW  52
5ECE:  MOVWF  FE9
5ED0:  MOVLW  05
5ED2:  ADDWFC 03,W
5ED4:  MOVWF  FEA
5ED6:  MOVLW  09
5ED8:  MOVWF  FEF
....................          i++; 
5EDA:  INCF   x38,F
....................       }       
5EDC:  INCF   x38,F
5EDE:  BRA    5E86
....................       for(i=1;i<4;i++) 
5EE0:  MOVLW  01
5EE2:  MOVWF  x38
5EE4:  MOVF   x38,W
5EE6:  SUBLW  03
5EE8:  BNC   5F3E
....................       { 
....................          if(Tempouvp[i]>5) 
5EEA:  CLRF   03
5EEC:  MOVF   x38,W
5EEE:  ADDLW  52
5EF0:  MOVWF  FE9
5EF2:  MOVLW  05
5EF4:  ADDWFC 03,W
5EF6:  MOVWF  FEA
5EF8:  BTFSC  FEF.7
5EFA:  BRA    5F12
5EFC:  MOVF   FEF,W
5EFE:  SUBLW  05
5F00:  BC    5F12
....................          {Tempouvp[i]=0;} 
5F02:  CLRF   03
5F04:  MOVF   x38,W
5F06:  ADDLW  52
5F08:  MOVWF  FE9
5F0A:  MOVLW  05
5F0C:  ADDWFC 03,W
5F0E:  MOVWF  FEA
5F10:  CLRF   FEF
....................           
....................          if(Tempouvp[i]<0) 
5F12:  CLRF   03
5F14:  MOVF   x38,W
5F16:  ADDLW  52
5F18:  MOVWF  FE9
5F1A:  MOVLW  05
5F1C:  ADDWFC 03,W
5F1E:  MOVWF  FEA
5F20:  BTFSC  FEF.7
5F22:  BRA    5F26
5F24:  BRA    5F38
....................          {Tempouvp[i]=5;} 
5F26:  CLRF   03
5F28:  MOVF   x38,W
5F2A:  ADDLW  52
5F2C:  MOVWF  FE9
5F2E:  MOVLW  05
5F30:  ADDWFC 03,W
5F32:  MOVWF  FEA
5F34:  MOVLW  05
5F36:  MOVWF  FEF
....................         i++;  
5F38:  INCF   x38,F
....................       }       
5F3A:  INCF   x38,F
5F3C:  BRA    5EE4
....................       if(unidad<1) 
5F3E:  MOVLB  5
5F40:  MOVF   x0A,F
5F42:  BNZ   5F48
....................       {unidad=4;} 
5F44:  MOVLW  04
5F46:  MOVWF  x0A
....................       if(Opcion<1) 
5F48:  MOVF   x0B,F
5F4A:  BNZ   5F50
....................       {Opcion=4;} 
5F4C:  MOVLW  04
5F4E:  MOVWF  x0B
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==13){ //Menu de Sensor de Flujo. 
5F50:  MOVF   x09,W
5F52:  SUBLW  0D
5F54:  BTFSS  FD8.2
5F56:  BRA    6564
....................        
....................       if(Ajuste1>10.0) 
5F58:  MOVLB  6
5F5A:  CLRF   x34
5F5C:  CLRF   x33
5F5E:  MOVLW  20
5F60:  MOVWF  x32
5F62:  MOVLW  82
5F64:  MOVWF  x31
5F66:  MOVFF  599,638
5F6A:  MOVFF  598,637
5F6E:  MOVFF  597,636
5F72:  MOVFF  596,635
5F76:  MOVLB  0
5F78:  CALL   238E
5F7C:  BNC   5F8A
....................          Ajuste1=0.0; 
5F7E:  MOVLB  5
5F80:  CLRF   x99
5F82:  CLRF   x98
5F84:  CLRF   x97
5F86:  CLRF   x96
5F88:  MOVLB  0
....................        
....................       strcpy(Menus.Letra,"Sensor de Flujo"); 
5F8A:  MOVLW  06
5F8C:  MOVWF  FEA
5F8E:  MOVLW  16
5F90:  MOVWF  FE9
5F92:  MOVFF  FF2,62C
5F96:  BCF    FF2.7
5F98:  MOVLW  00
5F9A:  CALL   1006
5F9E:  TBLRD*-
5FA0:  TBLRD*+
5FA2:  MOVF   FF5,W
5FA4:  MOVWF  FEE
5FA6:  IORLW  00
5FA8:  BNZ   5FA0
5FAA:  MOVLB  6
5FAC:  BTFSC  x2C.7
5FAE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,10,0,1,1); 
5FB0:  MOVLW  06
5FB2:  MOVWF  x2D
5FB4:  MOVLW  16
5FB6:  MOVWF  x2C
5FB8:  MOVLW  0A
5FBA:  MOVWF  x2E
5FBC:  CLRF   x2F
5FBE:  MOVLW  01
5FC0:  MOVWF  x30
5FC2:  MOVWF  x31
5FC4:  MOVLB  0
5FC6:  CALL   213C
....................        
....................       glcd_text57(0, 12, ZF, 1, ON); 
5FCA:  MOVLB  6
5FCC:  CLRF   x43
5FCE:  MOVLW  0C
5FD0:  MOVWF  x44
5FD2:  MOVLW  04
5FD4:  MOVWF  x46
5FD6:  MOVLW  BD
5FD8:  MOVWF  x45
5FDA:  MOVLW  01
5FDC:  MOVWF  x47
5FDE:  MOVWF  x48
5FE0:  MOVLB  0
5FE2:  CALL   1D20
....................        
....................       glcd_text57(0, 20, ZA, 1, ON); 
5FE6:  MOVLB  6
5FE8:  CLRF   x43
5FEA:  MOVLW  14
5FEC:  MOVWF  x44
5FEE:  MOVLW  04
5FF0:  MOVWF  x46
5FF2:  MOVLW  CB
5FF4:  MOVWF  x45
5FF6:  MOVLW  01
5FF8:  MOVWF  x47
5FFA:  MOVWF  x48
5FFC:  MOVLB  0
5FFE:  CALL   1D20
....................        
....................       glcd_text57(0, 30, AJ, 1, ON);            
6002:  MOVLB  6
6004:  CLRF   x43
6006:  MOVLW  1E
6008:  MOVWF  x44
600A:  MOVLW  04
600C:  MOVWF  x46
600E:  MOVLW  D3
6010:  MOVWF  x45
6012:  MOVLW  01
6014:  MOVWF  x47
6016:  MOVWF  x48
6018:  MOVLB  0
601A:  CALL   1D20
....................        
....................       displayfloat(zero_actual,44,20,0,1); 
601E:  MOVFF  605,633
6022:  MOVFF  604,632
6026:  MOVFF  603,631
602A:  MOVFF  602,630
602E:  MOVLW  2C
6030:  MOVLB  6
6032:  MOVWF  x34
6034:  MOVLW  14
6036:  MOVWF  x35
6038:  CLRF   x36
603A:  MOVLW  01
603C:  MOVWF  x37
603E:  MOVLB  0
6040:  CALL   2E24
....................       displayfloat(Ajuste1,44,30,0,1); 
6044:  MOVFF  599,633
6048:  MOVFF  598,632
604C:  MOVFF  597,631
6050:  MOVFF  596,630
6054:  MOVLW  2C
6056:  MOVLB  6
6058:  MOVWF  x34
605A:  MOVLW  1E
605C:  MOVWF  x35
605E:  CLRF   x36
6060:  MOVLW  01
6062:  MOVWF  x37
6064:  MOVLB  0
6066:  CALL   2E24
....................       displayfloat(Inflow_adc,0,40,0,1); 
606A:  MOVFF  529,632
606E:  MOVFF  528,631
6072:  CALL   126A
6076:  MOVFF  00,62C
607A:  MOVFF  01,62D
607E:  MOVFF  02,62E
6082:  MOVFF  03,62F
6086:  MOVFF  03,633
608A:  MOVFF  02,632
608E:  MOVFF  01,631
6092:  MOVFF  00,630
6096:  MOVLB  6
6098:  CLRF   x34
609A:  MOVLW  28
609C:  MOVWF  x35
609E:  CLRF   x36
60A0:  MOVLW  01
60A2:  MOVWF  x37
60A4:  MOVLB  0
60A6:  CALL   2E24
....................       displayfloat(Diferencia,0,50,0,1); 
60AA:  MOVFF  571,633
60AE:  MOVFF  570,632
60B2:  MOVFF  56F,631
60B6:  MOVFF  56E,630
60BA:  MOVLB  6
60BC:  CLRF   x34
60BE:  MOVLW  32
60C0:  MOVWF  x35
60C2:  CLRF   x36
60C4:  MOVLW  01
60C6:  MOVWF  x37
60C8:  MOVLB  0
60CA:  CALL   2E24
....................        
....................       if(UP)//Si oprime hacia arriba 
60CE:  BSF    F92.0
60D0:  BTFSS  F80.0
60D2:  BRA    611A
....................       {   
....................          delay_ms(30);Ajuste1+=0.01; 
60D4:  MOVLW  1E
60D6:  MOVLB  6
60D8:  MOVWF  x2D
60DA:  MOVLB  0
60DC:  CALL   1ED8
60E0:  BCF    FD8.1
60E2:  MOVFF  599,638
60E6:  MOVFF  598,637
60EA:  MOVFF  597,636
60EE:  MOVFF  596,635
60F2:  MOVLW  0A
60F4:  MOVLB  6
60F6:  MOVWF  x3C
60F8:  MOVLW  D7
60FA:  MOVWF  x3B
60FC:  MOVLW  23
60FE:  MOVWF  x3A
6100:  MOVLW  78
6102:  MOVWF  x39
6104:  MOVLB  0
6106:  CALL   13FE
610A:  MOVFF  03,599
610E:  MOVFF  02,598
6112:  MOVFF  01,597
6116:  MOVFF  00,596
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
611A:  BSF    F92.1
611C:  BTFSS  F80.1
611E:  BRA    6166
....................       {    
....................          delay_ms(30);Ajuste1-=0.01;                
6120:  MOVLW  1E
6122:  MOVLB  6
6124:  MOVWF  x2D
6126:  MOVLB  0
6128:  CALL   1ED8
612C:  BSF    FD8.1
612E:  MOVFF  599,638
6132:  MOVFF  598,637
6136:  MOVFF  597,636
613A:  MOVFF  596,635
613E:  MOVLW  0A
6140:  MOVLB  6
6142:  MOVWF  x3C
6144:  MOVLW  D7
6146:  MOVWF  x3B
6148:  MOVLW  23
614A:  MOVWF  x3A
614C:  MOVLW  78
614E:  MOVWF  x39
6150:  MOVLB  0
6152:  CALL   13FE
6156:  MOVFF  03,599
615A:  MOVFF  02,598
615E:  MOVFF  01,597
6162:  MOVFF  00,596
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
6166:  BSF    F92.2
6168:  BTFSS  F80.2
616A:  BRA    6418
....................       {   
....................          zero_actual=Inflow_adc; 
616C:  MOVFF  529,632
6170:  MOVFF  528,631
6174:  CALL   126A
6178:  MOVFF  03,605
617C:  MOVFF  02,604
6180:  MOVFF  01,603
6184:  MOVFF  00,602
....................          Diferencia=zero_fabrica-Inflow_adc; 
6188:  MOVFF  529,632
618C:  MOVFF  528,631
6190:  CALL   126A
6194:  BSF    FD8.1
6196:  MOVFF  601,638
619A:  MOVFF  600,637
619E:  MOVFF  5FF,636
61A2:  MOVFF  5FE,635
61A6:  MOVFF  03,63C
61AA:  MOVFF  02,63B
61AE:  MOVFF  01,63A
61B2:  MOVFF  00,639
61B6:  CALL   13FE
61BA:  MOVFF  03,571
61BE:  MOVFF  02,570
61C2:  MOVFF  01,56F
61C6:  MOVFF  00,56E
....................              
....................          if(Diferencia>=0) 
61CA:  MOVLB  6
61CC:  CLRF   x34
61CE:  CLRF   x33
61D0:  CLRF   x32
61D2:  CLRF   x31
61D4:  MOVFF  571,638
61D8:  MOVFF  570,637
61DC:  MOVFF  56F,636
61E0:  MOVFF  56E,635
61E4:  MOVLB  0
61E6:  CALL   238E
61EA:  BC    61EE
61EC:  BNZ   621E
....................          { 
....................             negativo=10;write_eeprom(50,negativo); 
61EE:  MOVLW  0A
61F0:  MOVLB  5
61F2:  MOVWF  x0D
61F4:  MOVLW  32
61F6:  MOVWF  FA9
61F8:  MOVFF  50D,FA8
61FC:  BCF    FA6.6
61FE:  BCF    FA6.7
6200:  BSF    FA6.2
6202:  MOVF   FF2,W
6204:  MOVWF  00
6206:  BCF    FF2.7
6208:  MOVLB  F
620A:  MOVLW  55
620C:  MOVWF  FA7
620E:  MOVLW  AA
6210:  MOVWF  FA7
6212:  BSF    FA6.1
6214:  BTFSC  FA6.1
6216:  BRA    6214
6218:  BCF    FA6.2
621A:  MOVF   00,W
621C:  IORWF  FF2,F
....................          } 
....................          if(Diferencia<0) 
621E:  MOVFF  571,634
6222:  MOVFF  570,633
6226:  MOVFF  56F,632
622A:  MOVFF  56E,631
622E:  MOVLB  6
6230:  CLRF   x38
6232:  CLRF   x37
6234:  CLRF   x36
6236:  CLRF   x35
6238:  MOVLB  0
623A:  CALL   238E
623E:  BNC   6272
....................          { 
....................             negativo=20;write_eeprom(50,negativo); 
6240:  MOVLW  14
6242:  MOVLB  5
6244:  MOVWF  x0D
6246:  MOVLW  32
6248:  MOVWF  FA9
624A:  MOVFF  50D,FA8
624E:  BCF    FA6.6
6250:  BCF    FA6.7
6252:  BSF    FA6.2
6254:  MOVF   FF2,W
6256:  MOVWF  00
6258:  BCF    FF2.7
625A:  MOVLB  F
625C:  MOVLW  55
625E:  MOVWF  FA7
6260:  MOVLW  AA
6262:  MOVWF  FA7
6264:  BSF    FA6.1
6266:  BTFSC  FA6.1
6268:  BRA    6266
626A:  BCF    FA6.2
626C:  MOVF   00,W
626E:  IORWF  FF2,F
6270:  MOVLB  0
....................          } 
....................          Diferencia=abs(Diferencia); 
6272:  MOVFF  56E,00
6276:  MOVFF  56F,01
627A:  MOVFF  570,02
627E:  MOVFF  571,03
6282:  BCF    01.7
6284:  MOVFF  571,571
6288:  MOVFF  570,570
628C:  MOVFF  01,56F
6290:  MOVFF  56E,56E
....................          Temporal1=(int16)Diferencia; 
6294:  MOVFF  571,62F
6298:  MOVFF  570,62E
629C:  MOVFF  56F,62D
62A0:  MOVFF  56E,62C
62A4:  CALL   1676
62A8:  MOVFF  02,531
62AC:  MOVFF  01,530
....................          write_eeprom(60,make8(Temporal1,0)); 
62B0:  MOVFF  530,62C
62B4:  MOVLW  3C
62B6:  MOVWF  FA9
62B8:  MOVFF  62C,FA8
62BC:  BCF    FA6.6
62BE:  BCF    FA6.7
62C0:  BSF    FA6.2
62C2:  MOVF   FF2,W
62C4:  MOVWF  00
62C6:  BCF    FF2.7
62C8:  MOVLB  F
62CA:  MOVLW  55
62CC:  MOVWF  FA7
62CE:  MOVLW  AA
62D0:  MOVWF  FA7
62D2:  BSF    FA6.1
62D4:  BTFSC  FA6.1
62D6:  BRA    62D4
62D8:  BCF    FA6.2
62DA:  MOVF   00,W
62DC:  IORWF  FF2,F
....................          write_eeprom(61,make8(Temporal1,1));//Guardar valor de Setpoint en eeprom 
62DE:  MOVFF  531,62C
62E2:  MOVLW  3D
62E4:  MOVWF  FA9
62E6:  MOVFF  531,FA8
62EA:  BCF    FA6.6
62EC:  BCF    FA6.7
62EE:  BSF    FA6.2
62F0:  MOVFF  FF2,00
62F4:  BCF    FF2.7
62F6:  MOVLW  55
62F8:  MOVWF  FA7
62FA:  MOVLW  AA
62FC:  MOVWF  FA7
62FE:  BSF    FA6.1
6300:  BTFSC  FA6.1
6302:  BRA    6300
6304:  BCF    FA6.2
6306:  MOVF   00,W
6308:  IORWF  FF2,F
....................           
....................          Temporal=zero_actual; 
630A:  MOVFF  605,5A5
630E:  MOVFF  604,5A4
6312:  MOVFF  603,5A3
6316:  MOVFF  602,5A2
....................          Entero=(int)zero_actual; 
631A:  MOVFF  605,62F
631E:  MOVFF  604,62E
6322:  MOVFF  603,62D
6326:  MOVFF  602,62C
632A:  MOVLB  0
632C:  CALL   1676
6330:  MOVFF  01,516
....................          Temporal=Temporal-Entero; 
6334:  MOVLB  6
6336:  CLRF   x32
6338:  MOVFF  516,631
633C:  MOVLB  0
633E:  CALL   126A
6342:  BSF    FD8.1
6344:  MOVFF  5A5,638
6348:  MOVFF  5A4,637
634C:  MOVFF  5A3,636
6350:  MOVFF  5A2,635
6354:  MOVFF  03,63C
6358:  MOVFF  02,63B
635C:  MOVFF  01,63A
6360:  MOVFF  00,639
6364:  CALL   13FE
6368:  MOVFF  03,5A5
636C:  MOVFF  02,5A4
6370:  MOVFF  01,5A3
6374:  MOVFF  00,5A2
....................          Temporal2=Temporal*100.0; 
6378:  MOVFF  5A5,651
637C:  MOVFF  5A4,650
6380:  MOVFF  5A3,64F
6384:  MOVFF  5A2,64E
6388:  MOVLB  6
638A:  CLRF   x55
638C:  CLRF   x54
638E:  MOVLW  48
6390:  MOVWF  x53
6392:  MOVLW  85
6394:  MOVWF  x52
6396:  MOVLB  0
6398:  CALL   16B2
639C:  MOVFF  03,5A9
63A0:  MOVFF  02,5A8
63A4:  MOVFF  01,5A7
63A8:  MOVFF  00,5A6
....................          Decimal1=(int8)Temporal2; 
63AC:  MOVFF  5A9,62F
63B0:  MOVFF  5A8,62E
63B4:  MOVFF  5A7,62D
63B8:  MOVFF  5A6,62C
63BC:  CALL   1676
63C0:  MOVFF  01,517
....................          write_eeprom(29,Entero);write_eeprom(30,Decimal1); 
63C4:  MOVLW  1D
63C6:  MOVWF  FA9
63C8:  MOVFF  516,FA8
63CC:  BCF    FA6.6
63CE:  BCF    FA6.7
63D0:  BSF    FA6.2
63D2:  MOVF   FF2,W
63D4:  MOVWF  00
63D6:  BCF    FF2.7
63D8:  MOVLB  F
63DA:  MOVLW  55
63DC:  MOVWF  FA7
63DE:  MOVLW  AA
63E0:  MOVWF  FA7
63E2:  BSF    FA6.1
63E4:  BTFSC  FA6.1
63E6:  BRA    63E4
63E8:  BCF    FA6.2
63EA:  MOVF   00,W
63EC:  IORWF  FF2,F
63EE:  MOVLW  1E
63F0:  MOVWF  FA9
63F2:  MOVFF  517,FA8
63F6:  BCF    FA6.6
63F8:  BCF    FA6.7
63FA:  BSF    FA6.2
63FC:  MOVF   FF2,W
63FE:  MOVWF  00
6400:  BCF    FF2.7
6402:  MOVLW  55
6404:  MOVWF  FA7
6406:  MOVLW  AA
6408:  MOVWF  FA7
640A:  BSF    FA6.1
640C:  BTFSC  FA6.1
640E:  BRA    640C
6410:  BCF    FA6.2
6412:  MOVF   00,W
6414:  IORWF  FF2,F
....................       } 
....................          else 
6416:  BRA    641E
....................             {Flanco1 = 0;}   
6418:  MOVLB  4
641A:  BCF    x4C.1
641C:  MOVLB  F
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
641E:  BSF    F92.3
6420:  BTFSS  F80.3
6422:  BRA    655C
....................       { 
....................          delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
6424:  MOVLW  04
6426:  MOVLB  6
6428:  MOVWF  x2C
642A:  MOVLW  AF
642C:  MOVWF  x2D
642E:  MOVLB  0
6430:  CALL   1ED8
6434:  MOVLB  6
6436:  DECFSZ x2C,F
6438:  BRA    642A
643A:  MOVLW  03
643C:  MOVLB  5
643E:  MOVWF  x09
6440:  MOVLB  6
6442:  CLRF   x2D
6444:  MOVLB  0
6446:  CALL   20E2
644A:  MOVLW  01
644C:  MOVLB  5
644E:  MOVWF  x0B
....................          Temporal=Ajuste1; 
6450:  MOVFF  599,5A5
6454:  MOVFF  598,5A4
6458:  MOVFF  597,5A3
645C:  MOVFF  596,5A2
....................          Entero=(int)Ajuste1; 
6460:  MOVFF  599,62F
6464:  MOVFF  598,62E
6468:  MOVFF  597,62D
646C:  MOVFF  596,62C
6470:  MOVLB  0
6472:  CALL   1676
6476:  MOVFF  01,516
....................          Temporal=Temporal-Entero; 
647A:  MOVLB  6
647C:  CLRF   x32
647E:  MOVFF  516,631
6482:  MOVLB  0
6484:  CALL   126A
6488:  BSF    FD8.1
648A:  MOVFF  5A5,638
648E:  MOVFF  5A4,637
6492:  MOVFF  5A3,636
6496:  MOVFF  5A2,635
649A:  MOVFF  03,63C
649E:  MOVFF  02,63B
64A2:  MOVFF  01,63A
64A6:  MOVFF  00,639
64AA:  CALL   13FE
64AE:  MOVFF  03,5A5
64B2:  MOVFF  02,5A4
64B6:  MOVFF  01,5A3
64BA:  MOVFF  00,5A2
....................          Temporal2=Temporal*100.0; 
64BE:  MOVFF  5A5,651
64C2:  MOVFF  5A4,650
64C6:  MOVFF  5A3,64F
64CA:  MOVFF  5A2,64E
64CE:  MOVLB  6
64D0:  CLRF   x55
64D2:  CLRF   x54
64D4:  MOVLW  48
64D6:  MOVWF  x53
64D8:  MOVLW  85
64DA:  MOVWF  x52
64DC:  MOVLB  0
64DE:  CALL   16B2
64E2:  MOVFF  03,5A9
64E6:  MOVFF  02,5A8
64EA:  MOVFF  01,5A7
64EE:  MOVFF  00,5A6
....................          Decimal1=(int8)Temporal2; 
64F2:  MOVFF  5A9,62F
64F6:  MOVFF  5A8,62E
64FA:  MOVFF  5A7,62D
64FE:  MOVFF  5A6,62C
6502:  CALL   1676
6506:  MOVFF  01,517
....................          write_eeprom(25,Entero);write_eeprom(26,Decimal1); 
650A:  MOVLW  19
650C:  MOVWF  FA9
650E:  MOVFF  516,FA8
6512:  BCF    FA6.6
6514:  BCF    FA6.7
6516:  BSF    FA6.2
6518:  MOVF   FF2,W
651A:  MOVWF  00
651C:  BCF    FF2.7
651E:  MOVLB  F
6520:  MOVLW  55
6522:  MOVWF  FA7
6524:  MOVLW  AA
6526:  MOVWF  FA7
6528:  BSF    FA6.1
652A:  BTFSC  FA6.1
652C:  BRA    652A
652E:  BCF    FA6.2
6530:  MOVF   00,W
6532:  IORWF  FF2,F
6534:  MOVLW  1A
6536:  MOVWF  FA9
6538:  MOVFF  517,FA8
653C:  BCF    FA6.6
653E:  BCF    FA6.7
6540:  BSF    FA6.2
6542:  MOVF   FF2,W
6544:  MOVWF  00
6546:  BCF    FF2.7
6548:  MOVLW  55
654A:  MOVWF  FA7
654C:  MOVLW  AA
654E:  MOVWF  FA7
6550:  BSF    FA6.1
6552:  BTFSC  FA6.1
6554:  BRA    6552
6556:  BCF    FA6.2
6558:  MOVF   00,W
655A:  IORWF  FF2,F
....................       } 
....................        
....................       Lectura_Esclavos(); 
655C:  MOVLB  0
655E:  CALL   29BA
6562:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==14){ //Menu de Sensor de Presión. 
6564:  MOVF   x09,W
6566:  SUBLW  0E
6568:  BTFSS  FD8.2
656A:  BRA    6960
....................        
....................       if(Ajuste2>10.0) 
656C:  MOVLB  6
656E:  CLRF   x34
6570:  CLRF   x33
6572:  MOVLW  20
6574:  MOVWF  x32
6576:  MOVLW  82
6578:  MOVWF  x31
657A:  MOVFF  59D,638
657E:  MOVFF  59C,637
6582:  MOVFF  59B,636
6586:  MOVFF  59A,635
658A:  MOVLB  0
658C:  CALL   238E
6590:  BNC   659E
....................          Ajuste2=0.0; 
6592:  MOVLB  5
6594:  CLRF   x9D
6596:  CLRF   x9C
6598:  CLRF   x9B
659A:  CLRF   x9A
659C:  MOVLB  0
....................        
....................       strcpy(Menus.Letra,"Sensor de Presion"); 
659E:  MOVLW  06
65A0:  MOVWF  FEA
65A2:  MOVLW  16
65A4:  MOVWF  FE9
65A6:  MOVFF  FF2,62C
65AA:  BCF    FF2.7
65AC:  MOVLW  00
65AE:  CALL   1030
65B2:  TBLRD*-
65B4:  TBLRD*+
65B6:  MOVF   FF5,W
65B8:  MOVWF  FEE
65BA:  IORLW  00
65BC:  BNZ   65B4
65BE:  MOVLB  6
65C0:  BTFSC  x2C.7
65C2:  BSF    FF2.7
....................       displayMenu(Menus.Letra,10,0,1,1); 
65C4:  MOVLW  06
65C6:  MOVWF  x2D
65C8:  MOVLW  16
65CA:  MOVWF  x2C
65CC:  MOVLW  0A
65CE:  MOVWF  x2E
65D0:  CLRF   x2F
65D2:  MOVLW  01
65D4:  MOVWF  x30
65D6:  MOVWF  x31
65D8:  MOVLB  0
65DA:  CALL   213C
....................        
....................       glcd_text57(0, 12, ZFP, 1, ON); 
65DE:  MOVLB  6
65E0:  CLRF   x43
65E2:  MOVLW  0C
65E4:  MOVWF  x44
65E6:  MOVLW  04
65E8:  MOVWF  x46
65EA:  MOVLW  EB
65EC:  MOVWF  x45
65EE:  MOVLW  01
65F0:  MOVWF  x47
65F2:  MOVWF  x48
65F4:  MOVLB  0
65F6:  CALL   1D20
....................        
....................       glcd_text57(0, 20, ZA, 1, ON); 
65FA:  MOVLB  6
65FC:  CLRF   x43
65FE:  MOVLW  14
6600:  MOVWF  x44
6602:  MOVLW  04
6604:  MOVWF  x46
6606:  MOVLW  CB
6608:  MOVWF  x45
660A:  MOVLW  01
660C:  MOVWF  x47
660E:  MOVWF  x48
6610:  MOVLB  0
6612:  CALL   1D20
....................        
....................       glcd_text57(0, 30, AJ, 1, ON);            
6616:  MOVLB  6
6618:  CLRF   x43
661A:  MOVLW  1E
661C:  MOVWF  x44
661E:  MOVLW  04
6620:  MOVWF  x46
6622:  MOVLW  D3
6624:  MOVWF  x45
6626:  MOVLW  01
6628:  MOVWF  x47
662A:  MOVWF  x48
662C:  MOVLB  0
662E:  CALL   1D20
....................        
....................       displayfloat(G,44,20,0,1); 
6632:  MOVFF  611,633
6636:  MOVFF  610,632
663A:  MOVFF  60F,631
663E:  MOVFF  60E,630
6642:  MOVLW  2C
6644:  MOVLB  6
6646:  MOVWF  x34
6648:  MOVLW  14
664A:  MOVWF  x35
664C:  CLRF   x36
664E:  MOVLW  01
6650:  MOVWF  x37
6652:  MOVLB  0
6654:  CALL   2E24
....................       displayfloat(Ajuste2,44,30,0,1); 
6658:  MOVFF  59D,633
665C:  MOVFF  59C,632
6660:  MOVFF  59B,631
6664:  MOVFF  59A,630
6668:  MOVLW  2C
666A:  MOVLB  6
666C:  MOVWF  x34
666E:  MOVLW  1E
6670:  MOVWF  x35
6672:  CLRF   x36
6674:  MOVLW  01
6676:  MOVWF  x37
6678:  MOVLB  0
667A:  CALL   2E24
....................       displayfloat(Filtro_DownFlow_adc,0,40,0,1); 
667E:  MOVFF  52F,632
6682:  MOVFF  52E,631
6686:  CALL   126A
668A:  MOVFF  00,62C
668E:  MOVFF  01,62D
6692:  MOVFF  02,62E
6696:  MOVFF  03,62F
669A:  MOVFF  03,633
669E:  MOVFF  02,632
66A2:  MOVFF  01,631
66A6:  MOVFF  00,630
66AA:  MOVLB  6
66AC:  CLRF   x34
66AE:  MOVLW  28
66B0:  MOVWF  x35
66B2:  CLRF   x36
66B4:  MOVLW  01
66B6:  MOVWF  x37
66B8:  MOVLB  0
66BA:  CALL   2E24
....................       displayfloat(Filtro_DownFlow,0,50,0,1); 
66BE:  MOVFF  56D,633
66C2:  MOVFF  56C,632
66C6:  MOVFF  56B,631
66CA:  MOVFF  56A,630
66CE:  MOVLB  6
66D0:  CLRF   x34
66D2:  MOVLW  32
66D4:  MOVWF  x35
66D6:  CLRF   x36
66D8:  MOVLW  01
66DA:  MOVWF  x37
66DC:  MOVLB  0
66DE:  CALL   2E24
....................        
....................       if(UP)//Si oprime hacia arriba 
66E2:  BSF    F92.0
66E4:  BTFSS  F80.0
66E6:  BRA    672E
....................       {   
....................          delay_ms(30);Ajuste2+=0.01; 
66E8:  MOVLW  1E
66EA:  MOVLB  6
66EC:  MOVWF  x2D
66EE:  MOVLB  0
66F0:  CALL   1ED8
66F4:  BCF    FD8.1
66F6:  MOVFF  59D,638
66FA:  MOVFF  59C,637
66FE:  MOVFF  59B,636
6702:  MOVFF  59A,635
6706:  MOVLW  0A
6708:  MOVLB  6
670A:  MOVWF  x3C
670C:  MOVLW  D7
670E:  MOVWF  x3B
6710:  MOVLW  23
6712:  MOVWF  x3A
6714:  MOVLW  78
6716:  MOVWF  x39
6718:  MOVLB  0
671A:  CALL   13FE
671E:  MOVFF  03,59D
6722:  MOVFF  02,59C
6726:  MOVFF  01,59B
672A:  MOVFF  00,59A
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
672E:  BSF    F92.1
6730:  BTFSS  F80.1
6732:  BRA    677A
....................       {   
....................          delay_ms(30);Ajuste2-=0.01; 
6734:  MOVLW  1E
6736:  MOVLB  6
6738:  MOVWF  x2D
673A:  MOVLB  0
673C:  CALL   1ED8
6740:  BSF    FD8.1
6742:  MOVFF  59D,638
6746:  MOVFF  59C,637
674A:  MOVFF  59B,636
674E:  MOVFF  59A,635
6752:  MOVLW  0A
6754:  MOVLB  6
6756:  MOVWF  x3C
6758:  MOVLW  D7
675A:  MOVWF  x3B
675C:  MOVLW  23
675E:  MOVWF  x3A
6760:  MOVLW  78
6762:  MOVWF  x39
6764:  MOVLB  0
6766:  CALL   13FE
676A:  MOVFF  03,59D
676E:  MOVFF  02,59C
6772:  MOVFF  01,59B
6776:  MOVFF  00,59A
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
677A:  BSF    F92.2
677C:  BTFSS  F80.2
677E:  BRA    6814
....................       {   
....................          G=Filtro_Downflow_adc; 
6780:  MOVFF  52F,632
6784:  MOVFF  52E,631
6788:  CALL   126A
678C:  MOVFF  03,611
6790:  MOVFF  02,610
6794:  MOVFF  01,60F
6798:  MOVFF  00,60E
....................          G16=(int16)G; 
679C:  MOVFF  611,62F
67A0:  MOVFF  610,62E
67A4:  MOVFF  60F,62D
67A8:  MOVFF  60E,62C
67AC:  CALL   1676
67B0:  MOVFF  02,539
67B4:  MOVFF  01,538
....................          G_l=G16; G_h=(G16>>8); 
67B8:  MOVFF  538,50F
67BC:  MOVFF  539,510
....................              
....................          write_eeprom(62,G_l);write_eeprom(63,G_h);//Guardar valor de Setpoint en eeprom 
67C0:  MOVLW  3E
67C2:  MOVWF  FA9
67C4:  MOVFF  50F,FA8
67C8:  BCF    FA6.6
67CA:  BCF    FA6.7
67CC:  BSF    FA6.2
67CE:  MOVF   FF2,W
67D0:  MOVWF  00
67D2:  BCF    FF2.7
67D4:  MOVLB  F
67D6:  MOVLW  55
67D8:  MOVWF  FA7
67DA:  MOVLW  AA
67DC:  MOVWF  FA7
67DE:  BSF    FA6.1
67E0:  BTFSC  FA6.1
67E2:  BRA    67E0
67E4:  BCF    FA6.2
67E6:  MOVF   00,W
67E8:  IORWF  FF2,F
67EA:  MOVLW  3F
67EC:  MOVWF  FA9
67EE:  MOVFF  510,FA8
67F2:  BCF    FA6.6
67F4:  BCF    FA6.7
67F6:  BSF    FA6.2
67F8:  MOVF   FF2,W
67FA:  MOVWF  00
67FC:  BCF    FF2.7
67FE:  MOVLW  55
6800:  MOVWF  FA7
6802:  MOVLW  AA
6804:  MOVWF  FA7
6806:  BSF    FA6.1
6808:  BTFSC  FA6.1
680A:  BRA    6808
680C:  BCF    FA6.2
680E:  MOVF   00,W
6810:  IORWF  FF2,F
....................       } 
....................          else 
6812:  BRA    681A
....................             {Flanco1 = 0;}   
6814:  MOVLB  4
6816:  BCF    x4C.1
6818:  MOVLB  F
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
681A:  BSF    F92.3
681C:  BTFSS  F80.3
681E:  BRA    6958
....................       {          
....................          delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
6820:  MOVLW  04
6822:  MOVLB  6
6824:  MOVWF  x2C
6826:  MOVLW  AF
6828:  MOVWF  x2D
682A:  MOVLB  0
682C:  CALL   1ED8
6830:  MOVLB  6
6832:  DECFSZ x2C,F
6834:  BRA    6826
6836:  MOVLW  03
6838:  MOVLB  5
683A:  MOVWF  x09
683C:  MOVLB  6
683E:  CLRF   x2D
6840:  MOVLB  0
6842:  CALL   20E2
6846:  MOVLW  01
6848:  MOVLB  5
684A:  MOVWF  x0B
....................          Temporal=Ajuste2; 
684C:  MOVFF  59D,5A5
6850:  MOVFF  59C,5A4
6854:  MOVFF  59B,5A3
6858:  MOVFF  59A,5A2
....................          Entero=(int)Ajuste2; 
685C:  MOVFF  59D,62F
6860:  MOVFF  59C,62E
6864:  MOVFF  59B,62D
6868:  MOVFF  59A,62C
686C:  MOVLB  0
686E:  CALL   1676
6872:  MOVFF  01,516
....................          Temporal=Temporal-Entero; 
6876:  MOVLB  6
6878:  CLRF   x32
687A:  MOVFF  516,631
687E:  MOVLB  0
6880:  CALL   126A
6884:  BSF    FD8.1
6886:  MOVFF  5A5,638
688A:  MOVFF  5A4,637
688E:  MOVFF  5A3,636
6892:  MOVFF  5A2,635
6896:  MOVFF  03,63C
689A:  MOVFF  02,63B
689E:  MOVFF  01,63A
68A2:  MOVFF  00,639
68A6:  CALL   13FE
68AA:  MOVFF  03,5A5
68AE:  MOVFF  02,5A4
68B2:  MOVFF  01,5A3
68B6:  MOVFF  00,5A2
....................          Temporal2=Temporal*100.0; 
68BA:  MOVFF  5A5,651
68BE:  MOVFF  5A4,650
68C2:  MOVFF  5A3,64F
68C6:  MOVFF  5A2,64E
68CA:  MOVLB  6
68CC:  CLRF   x55
68CE:  CLRF   x54
68D0:  MOVLW  48
68D2:  MOVWF  x53
68D4:  MOVLW  85
68D6:  MOVWF  x52
68D8:  MOVLB  0
68DA:  CALL   16B2
68DE:  MOVFF  03,5A9
68E2:  MOVFF  02,5A8
68E6:  MOVFF  01,5A7
68EA:  MOVFF  00,5A6
....................          Decimal1=(int8)Temporal2; 
68EE:  MOVFF  5A9,62F
68F2:  MOVFF  5A8,62E
68F6:  MOVFF  5A7,62D
68FA:  MOVFF  5A6,62C
68FE:  CALL   1676
6902:  MOVFF  01,517
....................          write_eeprom(27,Entero);write_eeprom(28,Decimal1); 
6906:  MOVLW  1B
6908:  MOVWF  FA9
690A:  MOVFF  516,FA8
690E:  BCF    FA6.6
6910:  BCF    FA6.7
6912:  BSF    FA6.2
6914:  MOVF   FF2,W
6916:  MOVWF  00
6918:  BCF    FF2.7
691A:  MOVLB  F
691C:  MOVLW  55
691E:  MOVWF  FA7
6920:  MOVLW  AA
6922:  MOVWF  FA7
6924:  BSF    FA6.1
6926:  BTFSC  FA6.1
6928:  BRA    6926
692A:  BCF    FA6.2
692C:  MOVF   00,W
692E:  IORWF  FF2,F
6930:  MOVLW  1C
6932:  MOVWF  FA9
6934:  MOVFF  517,FA8
6938:  BCF    FA6.6
693A:  BCF    FA6.7
693C:  BSF    FA6.2
693E:  MOVF   FF2,W
6940:  MOVWF  00
6942:  BCF    FF2.7
6944:  MOVLW  55
6946:  MOVWF  FA7
6948:  MOVLW  AA
694A:  MOVWF  FA7
694C:  BSF    FA6.1
694E:  BTFSC  FA6.1
6950:  BRA    694E
6952:  BCF    FA6.2
6954:  MOVF   00,W
6956:  IORWF  FF2,F
....................       } 
....................        
....................       Lectura_Esclavos(); 
6958:  MOVLB  0
695A:  CALL   29BA
695E:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==5){ //Menu de Clave. 
6960:  MOVF   x09,W
6962:  SUBLW  05
6964:  BTFSS  FD8.2
6966:  BRA    6D6A
....................        
....................        
....................       displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
6968:  MOVFF  55A,62E
696C:  MOVLW  14
696E:  MOVLB  6
6970:  MOVWF  x2F
6972:  MOVLW  1E
6974:  MOVWF  x30
6976:  MOVLW  01
6978:  MOVWF  x31
697A:  MOVLB  0
697C:  CALL   202C
6980:  MOVFF  55B,62E
6984:  MOVLW  28
6986:  MOVLB  6
6988:  MOVWF  x2F
698A:  MOVLW  1E
698C:  MOVWF  x30
698E:  CLRF   x31
6990:  MOVLB  0
6992:  CALL   202C
....................       displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
6996:  MOVFF  55C,62E
699A:  MOVLW  3C
699C:  MOVLB  6
699E:  MOVWF  x2F
69A0:  MOVLW  1E
69A2:  MOVWF  x30
69A4:  CLRF   x31
69A6:  MOVLB  0
69A8:  CALL   202C
69AC:  MOVFF  55A,62E
69B0:  MOVLW  50
69B2:  MOVLB  6
69B4:  MOVWF  x2F
69B6:  MOVLW  1E
69B8:  MOVWF  x30
69BA:  CLRF   x31
69BC:  MOVLB  0
69BE:  CALL   202C
....................       strcpy(Menus.Letra,"Clave"); 
69C2:  MOVLW  06
69C4:  MOVWF  FEA
69C6:  MOVLW  16
69C8:  MOVWF  FE9
69CA:  MOVFF  FF2,62C
69CE:  BCF    FF2.7
69D0:  MOVLW  00
69D2:  CALL   0EEE
69D6:  TBLRD*-
69D8:  TBLRD*+
69DA:  MOVF   FF5,W
69DC:  MOVWF  FEE
69DE:  IORLW  00
69E0:  BNZ   69D8
69E2:  MOVLB  6
69E4:  BTFSC  x2C.7
69E6:  BSF    FF2.7
....................       displayMenu(Menus.Letra,20,0,1,3); 
69E8:  MOVLW  06
69EA:  MOVWF  x2D
69EC:  MOVLW  16
69EE:  MOVWF  x2C
69F0:  MOVLW  14
69F2:  MOVWF  x2E
69F4:  CLRF   x2F
69F6:  MOVLW  01
69F8:  MOVWF  x30
69FA:  MOVLW  03
69FC:  MOVWF  x31
69FE:  MOVLB  0
6A00:  CALL   213C
....................          
....................       if(UP)//Si oprime hacia arriba 
6A04:  BSF    F92.0
6A06:  BTFSS  F80.0
6A08:  BRA    6AE4
....................       {  if(Flanco == 0)  
6A0A:  MOVLB  4
6A0C:  BTFSC  x4C.0
6A0E:  BRA    6AE2
....................             {Flanco = 1;delay_ms(30); 
6A10:  BSF    x4C.0
6A12:  MOVLW  1E
6A14:  MOVLB  6
6A16:  MOVWF  x2D
6A18:  MOVLB  0
6A1A:  CALL   1ED8
....................             for(i=1;i<=4;i++) 
6A1E:  MOVLW  01
6A20:  MOVLB  4
6A22:  MOVWF  x38
6A24:  MOVF   x38,W
6A26:  SUBLW  04
6A28:  BNC   6AE2
....................                { 
....................                   if(unidad==i) 
6A2A:  MOVF   x38,W
6A2C:  MOVLB  5
6A2E:  SUBWF  x0A,W
6A30:  BNZ   6AA8
....................                   {Contrasena[i-1]++; 
6A32:  MOVLW  01
6A34:  MOVLB  4
6A36:  SUBWF  x38,W
6A38:  CLRF   03
6A3A:  ADDLW  5A
6A3C:  MOVWF  FE9
6A3E:  MOVLW  05
6A40:  ADDWFC 03,W
6A42:  MOVWF  FEA
6A44:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9) 
6A46:  MOVLW  01
6A48:  SUBWF  x38,W
6A4A:  CLRF   03
6A4C:  ADDLW  5A
6A4E:  MOVWF  FE9
6A50:  MOVLW  05
6A52:  ADDWFC 03,W
6A54:  MOVWF  FEA
6A56:  BTFSC  FEF.7
6A58:  BRA    6A72
6A5A:  MOVF   FEF,W
6A5C:  SUBLW  09
6A5E:  BC    6A72
....................                         {Contrasena[i-1]=0;} 
6A60:  MOVLW  01
6A62:  SUBWF  x38,W
6A64:  CLRF   03
6A66:  ADDLW  5A
6A68:  MOVWF  FE9
6A6A:  MOVLW  05
6A6C:  ADDWFC 03,W
6A6E:  MOVWF  FEA
6A70:  CLRF   FEF
....................                   displayContrasena(Contrasena[i-1],i*20,30,1);} 
6A72:  MOVLW  01
6A74:  SUBWF  x38,W
6A76:  CLRF   03
6A78:  ADDLW  5A
6A7A:  MOVWF  FE9
6A7C:  MOVLW  05
6A7E:  ADDWFC 03,W
6A80:  MOVWF  FEA
6A82:  MOVFF  FEF,62C
6A86:  MOVF   x38,W
6A88:  MULLW  14
6A8A:  MOVFF  FF3,62D
6A8E:  MOVLB  6
6A90:  MOVFF  62C,62E
6A94:  MOVFF  62D,62F
6A98:  MOVLW  1E
6A9A:  MOVWF  x30
6A9C:  MOVLW  01
6A9E:  MOVWF  x31
6AA0:  MOVLB  0
6AA2:  CALL   202C
....................                   else 
6AA6:  BRA    6ADC
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
6AA8:  MOVLW  01
6AAA:  MOVLB  4
6AAC:  SUBWF  x38,W
6AAE:  CLRF   03
6AB0:  ADDLW  5A
6AB2:  MOVWF  FE9
6AB4:  MOVLW  05
6AB6:  ADDWFC 03,W
6AB8:  MOVWF  FEA
6ABA:  MOVFF  FEF,62C
6ABE:  MOVF   x38,W
6AC0:  MULLW  14
6AC2:  MOVFF  FF3,62D
6AC6:  MOVLB  6
6AC8:  MOVFF  62C,62E
6ACC:  MOVFF  62D,62F
6AD0:  MOVLW  1E
6AD2:  MOVWF  x30
6AD4:  CLRF   x31
6AD6:  MOVLB  0
6AD8:  CALL   202C
....................                } 
6ADC:  MOVLB  4
6ADE:  INCF   x38,F
6AE0:  BRA    6A24
....................             } 
....................       } 
....................          else 
6AE2:  BRA    6AE8
....................             {Flanco = 0;} 
6AE4:  MOVLB  4
6AE6:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6AE8:  BSF    F92.1
6AEA:  BTFSS  F80.1
6AEC:  BRA    6BC4
....................       {  if(Flanco2 == 0)  
6AEE:  BTFSC  x4C.2
6AF0:  BRA    6BC2
....................             {Flanco2 = 1;delay_ms(30); 
6AF2:  BSF    x4C.2
6AF4:  MOVLW  1E
6AF6:  MOVLB  6
6AF8:  MOVWF  x2D
6AFA:  MOVLB  0
6AFC:  CALL   1ED8
....................                for(i=1;i<=4;i++) 
6B00:  MOVLW  01
6B02:  MOVLB  4
6B04:  MOVWF  x38
6B06:  MOVF   x38,W
6B08:  SUBLW  04
6B0A:  BNC   6BC2
....................                { 
....................                   if(unidad==i) 
6B0C:  MOVF   x38,W
6B0E:  MOVLB  5
6B10:  SUBWF  x0A,W
6B12:  BNZ   6B88
....................                   {Contrasena[i-1]--;  
6B14:  MOVLW  01
6B16:  MOVLB  4
6B18:  SUBWF  x38,W
6B1A:  CLRF   03
6B1C:  ADDLW  5A
6B1E:  MOVWF  FE9
6B20:  MOVLW  05
6B22:  ADDWFC 03,W
6B24:  MOVWF  FEA
6B26:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
6B28:  MOVLW  01
6B2A:  SUBWF  x38,W
6B2C:  CLRF   03
6B2E:  ADDLW  5A
6B30:  MOVWF  FE9
6B32:  MOVLW  05
6B34:  ADDWFC 03,W
6B36:  MOVWF  FEA
6B38:  BTFSC  FEF.7
6B3A:  BRA    6B3E
6B3C:  BRA    6B52
....................                         {Contrasena[i-1]=9;} 
6B3E:  MOVLW  01
6B40:  SUBWF  x38,W
6B42:  CLRF   03
6B44:  ADDLW  5A
6B46:  MOVWF  FE9
6B48:  MOVLW  05
6B4A:  ADDWFC 03,W
6B4C:  MOVWF  FEA
6B4E:  MOVLW  09
6B50:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
6B52:  MOVLW  01
6B54:  SUBWF  x38,W
6B56:  CLRF   03
6B58:  ADDLW  5A
6B5A:  MOVWF  FE9
6B5C:  MOVLW  05
6B5E:  ADDWFC 03,W
6B60:  MOVWF  FEA
6B62:  MOVFF  FEF,62C
6B66:  MOVF   x38,W
6B68:  MULLW  14
6B6A:  MOVFF  FF3,62D
6B6E:  MOVLB  6
6B70:  MOVFF  62C,62E
6B74:  MOVFF  62D,62F
6B78:  MOVLW  1E
6B7A:  MOVWF  x30
6B7C:  MOVLW  01
6B7E:  MOVWF  x31
6B80:  MOVLB  0
6B82:  CALL   202C
....................                   else 
6B86:  BRA    6BBC
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
6B88:  MOVLW  01
6B8A:  MOVLB  4
6B8C:  SUBWF  x38,W
6B8E:  CLRF   03
6B90:  ADDLW  5A
6B92:  MOVWF  FE9
6B94:  MOVLW  05
6B96:  ADDWFC 03,W
6B98:  MOVWF  FEA
6B9A:  MOVFF  FEF,62C
6B9E:  MOVF   x38,W
6BA0:  MULLW  14
6BA2:  MOVFF  FF3,62D
6BA6:  MOVLB  6
6BA8:  MOVFF  62C,62E
6BAC:  MOVFF  62D,62F
6BB0:  MOVLW  1E
6BB2:  MOVWF  x30
6BB4:  CLRF   x31
6BB6:  MOVLB  0
6BB8:  CALL   202C
....................                }       
6BBC:  MOVLB  4
6BBE:  INCF   x38,F
6BC0:  BRA    6B06
....................             }      
....................       } 
....................          else 
6BC2:  BRA    6BC6
....................             {Flanco2 = 0;}   
6BC4:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
6BC6:  BSF    F92.2
6BC8:  BTFSS  F80.2
6BCA:  BRA    6C6A
....................       {  if(Flanco1 == 0)  
6BCC:  BTFSC  x4C.1
6BCE:  BRA    6C68
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
6BD0:  BSF    x4C.1
6BD2:  MOVLW  1E
6BD4:  MOVLB  6
6BD6:  MOVWF  x2D
6BD8:  MOVLB  0
6BDA:  CALL   1ED8
6BDE:  MOVLB  5
6BE0:  INCF   x0A,F
....................                for(i=1;i<=4;i++) 
6BE2:  MOVLW  01
6BE4:  MOVLB  4
6BE6:  MOVWF  x38
6BE8:  MOVF   x38,W
6BEA:  SUBLW  04
6BEC:  BNC   6C68
....................                { 
....................                   if(unidad==i) 
6BEE:  MOVF   x38,W
6BF0:  MOVLB  5
6BF2:  SUBWF  x0A,W
6BF4:  BNZ   6C2E
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
6BF6:  MOVLW  01
6BF8:  MOVLB  4
6BFA:  SUBWF  x38,W
6BFC:  CLRF   03
6BFE:  ADDLW  5A
6C00:  MOVWF  FE9
6C02:  MOVLW  05
6C04:  ADDWFC 03,W
6C06:  MOVWF  FEA
6C08:  MOVFF  FEF,62C
6C0C:  MOVF   x38,W
6C0E:  MULLW  14
6C10:  MOVFF  FF3,62D
6C14:  MOVLB  6
6C16:  MOVFF  62C,62E
6C1A:  MOVFF  62D,62F
6C1E:  MOVLW  1E
6C20:  MOVWF  x30
6C22:  MOVLW  01
6C24:  MOVWF  x31
6C26:  MOVLB  0
6C28:  CALL   202C
....................                   else 
6C2C:  BRA    6C62
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
6C2E:  MOVLW  01
6C30:  MOVLB  4
6C32:  SUBWF  x38,W
6C34:  CLRF   03
6C36:  ADDLW  5A
6C38:  MOVWF  FE9
6C3A:  MOVLW  05
6C3C:  ADDWFC 03,W
6C3E:  MOVWF  FEA
6C40:  MOVFF  FEF,62C
6C44:  MOVF   x38,W
6C46:  MULLW  14
6C48:  MOVFF  FF3,62D
6C4C:  MOVLB  6
6C4E:  MOVFF  62C,62E
6C52:  MOVFF  62D,62F
6C56:  MOVLW  1E
6C58:  MOVWF  x30
6C5A:  CLRF   x31
6C5C:  MOVLB  0
6C5E:  CALL   202C
....................                } 
6C62:  MOVLB  4
6C64:  INCF   x38,F
6C66:  BRA    6BE8
....................             } 
....................       } 
....................          else 
6C68:  BRA    6C6C
....................             {Flanco1 = 0;}   
6C6A:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
6C6C:  BSF    F92.3
6C6E:  BTFSS  F80.3
6C70:  BRA    6CAE
....................       { 
....................          delay_ms(700); 
6C72:  MOVLW  04
6C74:  MOVLB  6
6C76:  MOVWF  x2C
6C78:  MOVLW  AF
6C7A:  MOVWF  x2D
6C7C:  MOVLB  0
6C7E:  CALL   1ED8
6C82:  MOVLB  6
6C84:  DECFSZ x2C,F
6C86:  BRA    6C78
....................          if(unidad==1) 
6C88:  MOVLB  5
6C8A:  DECFSZ x0A,W
6C8C:  BRA    6CA0
....................          { 
....................             Menu=3;glcd_fillscreen(OFF); 
6C8E:  MOVLW  03
6C90:  MOVWF  x09
6C92:  MOVLB  6
6C94:  CLRF   x2D
6C96:  MOVLB  0
6C98:  CALL   20E2
....................          } 
....................          else 
6C9C:  BRA    6CAE
6C9E:  MOVLB  5
....................          { 
....................             Menu=3;glcd_fillscreen(OFF); 
6CA0:  MOVLW  03
6CA2:  MOVWF  x09
6CA4:  MOVLB  6
6CA6:  CLRF   x2D
6CA8:  MOVLB  0
6CAA:  CALL   20E2
....................          } 
....................       } 
....................              
....................       if(unidad>4) 
6CAE:  MOVLB  5
6CB0:  MOVF   x0A,W
6CB2:  SUBLW  04
6CB4:  BC    6D6A
....................       {Opcion=1;glcd_fillscreen(OFF);unidad=1;n=0; 
6CB6:  MOVLW  01
6CB8:  MOVWF  x0B
6CBA:  MOVLB  6
6CBC:  CLRF   x2D
6CBE:  MOVLB  0
6CC0:  CALL   20E2
6CC4:  MOVLW  01
6CC6:  MOVLB  5
6CC8:  MOVWF  x0A
6CCA:  MOVLB  4
6CCC:  BCF    x4E.7
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
6CCE:  MOVLB  5
6CD0:  MOVF   x5E,W
6CD2:  SUBWF  x5A,W
6CD4:  BNZ   6D28
6CD6:  MOVF   x5F,W
6CD8:  SUBWF  x5B,W
6CDA:  BNZ   6D28
6CDC:  MOVF   x60,W
6CDE:  SUBWF  x5C,W
6CE0:  BNZ   6D28
6CE2:  MOVF   x61,W
6CE4:  SUBWF  x5D,W
6CE6:  BNZ   6D28
....................          {glcd_imagen(1);glcd_update();Menu=211;delay_ms(1000);glcd_fillScreen(OFF);Password[0]=0;Password[1]=0;Password[2]=0;Password[3]=0;} 
6CE8:  MOVLW  01
6CEA:  MOVLB  6
6CEC:  MOVWF  x2C
6CEE:  MOVLB  0
6CF0:  CALL   2F2C
6CF4:  CALL   19AC
6CF8:  MOVLW  D3
6CFA:  MOVLB  5
6CFC:  MOVWF  x09
6CFE:  MOVLW  04
6D00:  MOVLB  6
6D02:  MOVWF  x2C
6D04:  MOVLW  FA
6D06:  MOVWF  x2D
6D08:  MOVLB  0
6D0A:  CALL   1ED8
6D0E:  MOVLB  6
6D10:  DECFSZ x2C,F
6D12:  BRA    6D04
6D14:  CLRF   x2D
6D16:  MOVLB  0
6D18:  CALL   20E2
6D1C:  MOVLB  5
6D1E:  CLRF   x5E
6D20:  CLRF   x5F
6D22:  CLRF   x60
6D24:  CLRF   x61
....................          else 
6D26:  BRA    6D6A
....................          {glcd_imagen(2);glcd_update();Menu=3;delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF);}   
6D28:  MOVLW  02
6D2A:  MOVLB  6
6D2C:  MOVWF  x2C
6D2E:  MOVLB  0
6D30:  CALL   2F2C
6D34:  CALL   19AC
6D38:  MOVLW  03
6D3A:  MOVLB  5
6D3C:  MOVWF  x09
6D3E:  MOVLW  04
6D40:  MOVLB  6
6D42:  MOVWF  x2C
6D44:  MOVLW  FA
6D46:  MOVWF  x2D
6D48:  MOVLB  0
6D4A:  CALL   1ED8
6D4E:  MOVLB  6
6D50:  DECFSZ x2C,F
6D52:  BRA    6D44
6D54:  MOVLB  5
6D56:  CLRF   x5A
6D58:  CLRF   x5B
6D5A:  CLRF   x5C
6D5C:  CLRF   x5D
6D5E:  MOVLB  6
6D60:  CLRF   x2D
6D62:  MOVLB  0
6D64:  CALL   20E2
6D68:  MOVLB  5
....................       } 
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==211){ //Menu de Cambio Clave. 
6D6A:  MOVF   x09,W
6D6C:  SUBLW  D3
6D6E:  BTFSS  FD8.2
6D70:  BRA    717A
....................        
....................       if(n==0) 
6D72:  MOVLB  4
6D74:  BTFSC  x4E.7
6D76:  BRA    6DD6
....................       {displayContrasena(Password[0],20,30,1);displayContrasena(Password[1],40,30,0); 
6D78:  MOVFF  55E,62E
6D7C:  MOVLW  14
6D7E:  MOVLB  6
6D80:  MOVWF  x2F
6D82:  MOVLW  1E
6D84:  MOVWF  x30
6D86:  MOVLW  01
6D88:  MOVWF  x31
6D8A:  MOVLB  0
6D8C:  CALL   202C
6D90:  MOVFF  55F,62E
6D94:  MOVLW  28
6D96:  MOVLB  6
6D98:  MOVWF  x2F
6D9A:  MOVLW  1E
6D9C:  MOVWF  x30
6D9E:  CLRF   x31
6DA0:  MOVLB  0
6DA2:  CALL   202C
....................       displayContrasena(Password[2],60,30,0);displayContrasena(Password[3],80,30,0);n++;} 
6DA6:  MOVFF  560,62E
6DAA:  MOVLW  3C
6DAC:  MOVLB  6
6DAE:  MOVWF  x2F
6DB0:  MOVLW  1E
6DB2:  MOVWF  x30
6DB4:  CLRF   x31
6DB6:  MOVLB  0
6DB8:  CALL   202C
6DBC:  MOVFF  561,62E
6DC0:  MOVLW  50
6DC2:  MOVLB  6
6DC4:  MOVWF  x2F
6DC6:  MOVLW  1E
6DC8:  MOVWF  x30
6DCA:  CLRF   x31
6DCC:  MOVLB  0
6DCE:  CALL   202C
6DD2:  MOVLB  4
6DD4:  BTG    x4E.7
....................       strcpy(Menus.Letra,"Clave Nueva"); 
6DD6:  MOVLW  06
6DD8:  MOVWF  FEA
6DDA:  MOVLW  16
6DDC:  MOVWF  FE9
6DDE:  MOVFF  FF2,62C
6DE2:  BCF    FF2.7
6DE4:  MOVLW  00
6DE6:  MOVLB  0
6DE8:  CALL   10C8
6DEC:  TBLRD*-
6DEE:  TBLRD*+
6DF0:  MOVF   FF5,W
6DF2:  MOVWF  FEE
6DF4:  IORLW  00
6DF6:  BNZ   6DEE
6DF8:  MOVLB  6
6DFA:  BTFSC  x2C.7
6DFC:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2); 
6DFE:  MOVLW  06
6E00:  MOVWF  x2D
6E02:  MOVLW  16
6E04:  MOVWF  x2C
6E06:  CLRF   x2E
6E08:  CLRF   x2F
6E0A:  MOVLW  01
6E0C:  MOVWF  x30
6E0E:  MOVLW  02
6E10:  MOVWF  x31
6E12:  MOVLB  0
6E14:  CALL   213C
....................          
....................       if(UP)//Si oprime hacia arriba 
6E18:  BSF    F92.0
6E1A:  BTFSS  F80.0
6E1C:  BRA    6EF8
....................       {  if(Flanco == 0)  
6E1E:  MOVLB  4
6E20:  BTFSC  x4C.0
6E22:  BRA    6EF6
....................             {Flanco = 1;delay_ms(30); 
6E24:  BSF    x4C.0
6E26:  MOVLW  1E
6E28:  MOVLB  6
6E2A:  MOVWF  x2D
6E2C:  MOVLB  0
6E2E:  CALL   1ED8
....................             for(i=1;i<=4;i++) 
6E32:  MOVLW  01
6E34:  MOVLB  4
6E36:  MOVWF  x38
6E38:  MOVF   x38,W
6E3A:  SUBLW  04
6E3C:  BNC   6EF6
....................                { 
....................                   if(unidad==i) 
6E3E:  MOVF   x38,W
6E40:  MOVLB  5
6E42:  SUBWF  x0A,W
6E44:  BNZ   6EBC
....................                   {Password[i-1]++; 
6E46:  MOVLW  01
6E48:  MOVLB  4
6E4A:  SUBWF  x38,W
6E4C:  CLRF   03
6E4E:  ADDLW  5E
6E50:  MOVWF  FE9
6E52:  MOVLW  05
6E54:  ADDWFC 03,W
6E56:  MOVWF  FEA
6E58:  INCF   FEF,F
....................                   if(Password[i-1]>9) 
6E5A:  MOVLW  01
6E5C:  SUBWF  x38,W
6E5E:  CLRF   03
6E60:  ADDLW  5E
6E62:  MOVWF  FE9
6E64:  MOVLW  05
6E66:  ADDWFC 03,W
6E68:  MOVWF  FEA
6E6A:  BTFSC  FEF.7
6E6C:  BRA    6E86
6E6E:  MOVF   FEF,W
6E70:  SUBLW  09
6E72:  BC    6E86
....................                         {Password[i-1]=0;} 
6E74:  MOVLW  01
6E76:  SUBWF  x38,W
6E78:  CLRF   03
6E7A:  ADDLW  5E
6E7C:  MOVWF  FE9
6E7E:  MOVLW  05
6E80:  ADDWFC 03,W
6E82:  MOVWF  FEA
6E84:  CLRF   FEF
....................                   displayContrasena(Password[i-1],i*20,30,1);} 
6E86:  MOVLW  01
6E88:  SUBWF  x38,W
6E8A:  CLRF   03
6E8C:  ADDLW  5E
6E8E:  MOVWF  FE9
6E90:  MOVLW  05
6E92:  ADDWFC 03,W
6E94:  MOVWF  FEA
6E96:  MOVFF  FEF,62C
6E9A:  MOVF   x38,W
6E9C:  MULLW  14
6E9E:  MOVFF  FF3,62D
6EA2:  MOVLB  6
6EA4:  MOVFF  62C,62E
6EA8:  MOVFF  62D,62F
6EAC:  MOVLW  1E
6EAE:  MOVWF  x30
6EB0:  MOVLW  01
6EB2:  MOVWF  x31
6EB4:  MOVLB  0
6EB6:  CALL   202C
....................                   else 
6EBA:  BRA    6EF0
....................                   {displayContrasena(Password[i-1],i*20,30,0);} 
6EBC:  MOVLW  01
6EBE:  MOVLB  4
6EC0:  SUBWF  x38,W
6EC2:  CLRF   03
6EC4:  ADDLW  5E
6EC6:  MOVWF  FE9
6EC8:  MOVLW  05
6ECA:  ADDWFC 03,W
6ECC:  MOVWF  FEA
6ECE:  MOVFF  FEF,62C
6ED2:  MOVF   x38,W
6ED4:  MULLW  14
6ED6:  MOVFF  FF3,62D
6EDA:  MOVLB  6
6EDC:  MOVFF  62C,62E
6EE0:  MOVFF  62D,62F
6EE4:  MOVLW  1E
6EE6:  MOVWF  x30
6EE8:  CLRF   x31
6EEA:  MOVLB  0
6EEC:  CALL   202C
....................                } 
6EF0:  MOVLB  4
6EF2:  INCF   x38,F
6EF4:  BRA    6E38
....................             } 
....................       } 
....................          else 
6EF6:  BRA    6EFC
....................             {Flanco = 0;} 
6EF8:  MOVLB  4
6EFA:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6EFC:  BSF    F92.1
6EFE:  BTFSS  F80.1
6F00:  BRA    6FD8
....................       {  if(Flanco2 == 0)  
6F02:  BTFSC  x4C.2
6F04:  BRA    6FD6
....................             {Flanco2 = 1;delay_ms(30); 
6F06:  BSF    x4C.2
6F08:  MOVLW  1E
6F0A:  MOVLB  6
6F0C:  MOVWF  x2D
6F0E:  MOVLB  0
6F10:  CALL   1ED8
....................                for(i=1;i<=4;i++) 
6F14:  MOVLW  01
6F16:  MOVLB  4
6F18:  MOVWF  x38
6F1A:  MOVF   x38,W
6F1C:  SUBLW  04
6F1E:  BNC   6FD6
....................                { 
....................                   if(unidad==i) 
6F20:  MOVF   x38,W
6F22:  MOVLB  5
6F24:  SUBWF  x0A,W
6F26:  BNZ   6F9C
....................                   {Password[i-1]--;  
6F28:  MOVLW  01
6F2A:  MOVLB  4
6F2C:  SUBWF  x38,W
6F2E:  CLRF   03
6F30:  ADDLW  5E
6F32:  MOVWF  FE9
6F34:  MOVLW  05
6F36:  ADDWFC 03,W
6F38:  MOVWF  FEA
6F3A:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
6F3C:  MOVLW  01
6F3E:  SUBWF  x38,W
6F40:  CLRF   03
6F42:  ADDLW  5E
6F44:  MOVWF  FE9
6F46:  MOVLW  05
6F48:  ADDWFC 03,W
6F4A:  MOVWF  FEA
6F4C:  BTFSC  FEF.7
6F4E:  BRA    6F52
6F50:  BRA    6F66
....................                         {Password[i-1]=9;} 
6F52:  MOVLW  01
6F54:  SUBWF  x38,W
6F56:  CLRF   03
6F58:  ADDLW  5E
6F5A:  MOVWF  FE9
6F5C:  MOVLW  05
6F5E:  ADDWFC 03,W
6F60:  MOVWF  FEA
6F62:  MOVLW  09
6F64:  MOVWF  FEF
....................                    displayContrasena(Password[i-1],i*20,30,1);} 
6F66:  MOVLW  01
6F68:  SUBWF  x38,W
6F6A:  CLRF   03
6F6C:  ADDLW  5E
6F6E:  MOVWF  FE9
6F70:  MOVLW  05
6F72:  ADDWFC 03,W
6F74:  MOVWF  FEA
6F76:  MOVFF  FEF,62C
6F7A:  MOVF   x38,W
6F7C:  MULLW  14
6F7E:  MOVFF  FF3,62D
6F82:  MOVLB  6
6F84:  MOVFF  62C,62E
6F88:  MOVFF  62D,62F
6F8C:  MOVLW  1E
6F8E:  MOVWF  x30
6F90:  MOVLW  01
6F92:  MOVWF  x31
6F94:  MOVLB  0
6F96:  CALL   202C
....................                   else 
6F9A:  BRA    6FD0
....................                   {displayContrasena(Password[i-1],i*20,30,0);} 
6F9C:  MOVLW  01
6F9E:  MOVLB  4
6FA0:  SUBWF  x38,W
6FA2:  CLRF   03
6FA4:  ADDLW  5E
6FA6:  MOVWF  FE9
6FA8:  MOVLW  05
6FAA:  ADDWFC 03,W
6FAC:  MOVWF  FEA
6FAE:  MOVFF  FEF,62C
6FB2:  MOVF   x38,W
6FB4:  MULLW  14
6FB6:  MOVFF  FF3,62D
6FBA:  MOVLB  6
6FBC:  MOVFF  62C,62E
6FC0:  MOVFF  62D,62F
6FC4:  MOVLW  1E
6FC6:  MOVWF  x30
6FC8:  CLRF   x31
6FCA:  MOVLB  0
6FCC:  CALL   202C
....................                }       
6FD0:  MOVLB  4
6FD2:  INCF   x38,F
6FD4:  BRA    6F1A
....................             }      
....................       } 
....................          else 
6FD6:  BRA    6FDA
....................             {Flanco2 = 0;}   
6FD8:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
6FDA:  BSF    F92.2
6FDC:  BTFSS  F80.2
6FDE:  BRA    707E
....................       {  if(Flanco1 == 0)  
6FE0:  BTFSC  x4C.1
6FE2:  BRA    707C
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
6FE4:  BSF    x4C.1
6FE6:  MOVLW  1E
6FE8:  MOVLB  6
6FEA:  MOVWF  x2D
6FEC:  MOVLB  0
6FEE:  CALL   1ED8
6FF2:  MOVLB  5
6FF4:  INCF   x0A,F
....................                for(i=1;i<=4;i++) 
6FF6:  MOVLW  01
6FF8:  MOVLB  4
6FFA:  MOVWF  x38
6FFC:  MOVF   x38,W
6FFE:  SUBLW  04
7000:  BNC   707C
....................                { 
....................                   if(unidad==i) 
7002:  MOVF   x38,W
7004:  MOVLB  5
7006:  SUBWF  x0A,W
7008:  BNZ   7042
....................                   {displayContrasena(Password[i-1],i*20,30,1);} 
700A:  MOVLW  01
700C:  MOVLB  4
700E:  SUBWF  x38,W
7010:  CLRF   03
7012:  ADDLW  5E
7014:  MOVWF  FE9
7016:  MOVLW  05
7018:  ADDWFC 03,W
701A:  MOVWF  FEA
701C:  MOVFF  FEF,62C
7020:  MOVF   x38,W
7022:  MULLW  14
7024:  MOVFF  FF3,62D
7028:  MOVLB  6
702A:  MOVFF  62C,62E
702E:  MOVFF  62D,62F
7032:  MOVLW  1E
7034:  MOVWF  x30
7036:  MOVLW  01
7038:  MOVWF  x31
703A:  MOVLB  0
703C:  CALL   202C
....................                   else 
7040:  BRA    7076
....................                   {displayContrasena(Password[i-1],i*20,30,0);} 
7042:  MOVLW  01
7044:  MOVLB  4
7046:  SUBWF  x38,W
7048:  CLRF   03
704A:  ADDLW  5E
704C:  MOVWF  FE9
704E:  MOVLW  05
7050:  ADDWFC 03,W
7052:  MOVWF  FEA
7054:  MOVFF  FEF,62C
7058:  MOVF   x38,W
705A:  MULLW  14
705C:  MOVFF  FF3,62D
7060:  MOVLB  6
7062:  MOVFF  62C,62E
7066:  MOVFF  62D,62F
706A:  MOVLW  1E
706C:  MOVWF  x30
706E:  CLRF   x31
7070:  MOVLB  0
7072:  CALL   202C
....................                } 
7076:  MOVLB  4
7078:  INCF   x38,F
707A:  BRA    6FFC
....................             } 
....................       } 
....................          else 
707C:  BRA    7080
....................             {Flanco1 = 0;}   
707E:  BCF    x4C.1
....................       if(unidad>4) 
7080:  MOVLB  5
7082:  MOVF   x0A,W
7084:  SUBLW  04
7086:  BC    717A
....................       {Opcion=1;glcd_fillscreen(OFF);unidad=1;n=0; 
7088:  MOVLW  01
708A:  MOVWF  x0B
708C:  MOVLB  6
708E:  CLRF   x2D
7090:  MOVLB  0
7092:  CALL   20E2
7096:  MOVLW  01
7098:  MOVLB  5
709A:  MOVWF  x0A
709C:  MOVLB  4
709E:  BCF    x4E.7
....................       write_eeprom(0,Password[0]);write_eeprom(1,Password[1]);write_eeprom(2,Password[2]);write_eeprom(3,Password[3]); 
70A0:  CLRF   FA9
70A2:  MOVFF  55E,FA8
70A6:  BCF    FA6.6
70A8:  BCF    FA6.7
70AA:  BSF    FA6.2
70AC:  MOVF   FF2,W
70AE:  MOVWF  00
70B0:  BCF    FF2.7
70B2:  MOVLB  F
70B4:  MOVLW  55
70B6:  MOVWF  FA7
70B8:  MOVLW  AA
70BA:  MOVWF  FA7
70BC:  BSF    FA6.1
70BE:  BTFSC  FA6.1
70C0:  BRA    70BE
70C2:  BCF    FA6.2
70C4:  MOVF   00,W
70C6:  IORWF  FF2,F
70C8:  MOVLW  01
70CA:  MOVWF  FA9
70CC:  MOVFF  55F,FA8
70D0:  BCF    FA6.6
70D2:  BCF    FA6.7
70D4:  BSF    FA6.2
70D6:  MOVF   FF2,W
70D8:  MOVWF  00
70DA:  BCF    FF2.7
70DC:  MOVLW  55
70DE:  MOVWF  FA7
70E0:  MOVLW  AA
70E2:  MOVWF  FA7
70E4:  BSF    FA6.1
70E6:  BTFSC  FA6.1
70E8:  BRA    70E6
70EA:  BCF    FA6.2
70EC:  MOVF   00,W
70EE:  IORWF  FF2,F
70F0:  MOVLW  02
70F2:  MOVWF  FA9
70F4:  MOVFF  560,FA8
70F8:  BCF    FA6.6
70FA:  BCF    FA6.7
70FC:  BSF    FA6.2
70FE:  MOVF   FF2,W
7100:  MOVWF  00
7102:  BCF    FF2.7
7104:  MOVLW  55
7106:  MOVWF  FA7
7108:  MOVLW  AA
710A:  MOVWF  FA7
710C:  BSF    FA6.1
710E:  BTFSC  FA6.1
7110:  BRA    710E
7112:  BCF    FA6.2
7114:  MOVF   00,W
7116:  IORWF  FF2,F
7118:  MOVLW  03
711A:  MOVWF  FA9
711C:  MOVFF  561,FA8
7120:  BCF    FA6.6
7122:  BCF    FA6.7
7124:  BSF    FA6.2
7126:  MOVF   FF2,W
7128:  MOVWF  00
712A:  BCF    FF2.7
712C:  MOVLW  55
712E:  MOVWF  FA7
7130:  MOVLW  AA
7132:  MOVWF  FA7
7134:  BSF    FA6.1
7136:  BTFSC  FA6.1
7138:  BRA    7136
713A:  BCF    FA6.2
713C:  MOVF   00,W
713E:  IORWF  FF2,F
....................        glcd_imagen(1);glcd_update();Menu=211;delay_ms(1000);glcd_fillScreen(OFF);Menu=3; 
7140:  MOVLW  01
7142:  MOVLB  6
7144:  MOVWF  x2C
7146:  MOVLB  0
7148:  CALL   2F2C
714C:  CALL   19AC
7150:  MOVLW  D3
7152:  MOVLB  5
7154:  MOVWF  x09
7156:  MOVLW  04
7158:  MOVLB  6
715A:  MOVWF  x2C
715C:  MOVLW  FA
715E:  MOVWF  x2D
7160:  MOVLB  0
7162:  CALL   1ED8
7166:  MOVLB  6
7168:  DECFSZ x2C,F
716A:  BRA    715C
716C:  CLRF   x2D
716E:  MOVLB  0
7170:  CALL   20E2
7174:  MOVLW  03
7176:  MOVLB  5
7178:  MOVWF  x09
....................       } 
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==31){ //Menu de Mantenimiento. 
717A:  MOVF   x09,W
717C:  SUBLW  1F
717E:  BTFSS  FD8.2
7180:  BRA    7452
....................        
....................          glcd_text57(0, 29, Vida_Filtro, 1, ON); 
7182:  MOVLB  6
7184:  CLRF   x43
7186:  MOVLW  1D
7188:  MOVWF  x44
718A:  MOVLW  04
718C:  MOVWF  x46
718E:  MOVLW  E3
7190:  MOVWF  x45
7192:  MOVLW  01
7194:  MOVWF  x47
7196:  MOVWF  x48
7198:  MOVLB  0
719A:  CALL   1D20
....................          displayTiempo(Ttrabajo[3],60,28,0,1);displayTiempo(Ttrabajo[2],67,28,0,1);displayTiempo(Ttrabajo[1],74,28,0,1);displayTiempo(Ttrabajo[0],82,28,0,1); 
719E:  MOVFF  559,62C
71A2:  MOVLW  3C
71A4:  MOVLB  6
71A6:  MOVWF  x2D
71A8:  MOVLW  1C
71AA:  MOVWF  x2E
71AC:  CLRF   x2F
71AE:  MOVLW  01
71B0:  MOVWF  x30
71B2:  MOVLB  0
71B4:  CALL   2208
71B8:  MOVFF  558,62C
71BC:  MOVLW  43
71BE:  MOVLB  6
71C0:  MOVWF  x2D
71C2:  MOVLW  1C
71C4:  MOVWF  x2E
71C6:  CLRF   x2F
71C8:  MOVLW  01
71CA:  MOVWF  x30
71CC:  MOVLB  0
71CE:  CALL   2208
71D2:  MOVFF  557,62C
71D6:  MOVLW  4A
71D8:  MOVLB  6
71DA:  MOVWF  x2D
71DC:  MOVLW  1C
71DE:  MOVWF  x2E
71E0:  CLRF   x2F
71E2:  MOVLW  01
71E4:  MOVWF  x30
71E6:  MOVLB  0
71E8:  CALL   2208
71EC:  MOVFF  556,62C
71F0:  MOVLW  52
71F2:  MOVLB  6
71F4:  MOVWF  x2D
71F6:  MOVLW  1C
71F8:  MOVWF  x2E
71FA:  CLRF   x2F
71FC:  MOVLW  01
71FE:  MOVWF  x30
7200:  MOVLB  0
7202:  CALL   2208
....................          glcd_text57(0, 43, Vida_UV, 1, ON); 
7206:  MOVLB  6
7208:  CLRF   x43
720A:  MOVLW  2B
720C:  MOVWF  x44
720E:  MOVLW  04
7210:  MOVWF  x46
7212:  MOVLW  DB
7214:  MOVWF  x45
7216:  MOVLW  01
7218:  MOVWF  x47
721A:  MOVWF  x48
721C:  MOVLB  0
721E:  CALL   1D20
....................          displayTiempo(Tuv[3],60,42,0,1);displayTiempo(Tuv[2],67,42,0,1);displayTiempo(Tuv[1],74,42,0,1);displayTiempo(Tuv[0],82,42,0,1);                  
7222:  MOVFF  54D,62C
7226:  MOVLW  3C
7228:  MOVLB  6
722A:  MOVWF  x2D
722C:  MOVLW  2A
722E:  MOVWF  x2E
7230:  CLRF   x2F
7232:  MOVLW  01
7234:  MOVWF  x30
7236:  MOVLB  0
7238:  CALL   2208
723C:  MOVFF  54C,62C
7240:  MOVLW  43
7242:  MOVLB  6
7244:  MOVWF  x2D
7246:  MOVLW  2A
7248:  MOVWF  x2E
724A:  CLRF   x2F
724C:  MOVLW  01
724E:  MOVWF  x30
7250:  MOVLB  0
7252:  CALL   2208
7256:  MOVFF  54B,62C
725A:  MOVLW  4A
725C:  MOVLB  6
725E:  MOVWF  x2D
7260:  MOVLW  2A
7262:  MOVWF  x2E
7264:  CLRF   x2F
7266:  MOVLW  01
7268:  MOVWF  x30
726A:  MOVLB  0
726C:  CALL   2208
7270:  MOVFF  54A,62C
7274:  MOVLW  52
7276:  MOVLB  6
7278:  MOVWF  x2D
727A:  MOVLW  2A
727C:  MOVWF  x2E
727E:  CLRF   x2F
7280:  MOVLW  01
7282:  MOVWF  x30
7284:  MOVLB  0
7286:  CALL   2208
....................          LuzBlanca=5; 
728A:  MOVLW  05
728C:  MOVLB  5
728E:  MOVWF  x18
....................           
....................             if(UP) // Reinicia Tiempo de Luz UV 
7290:  BSF    F92.0
7292:  BTFSS  F80.0
7294:  BRA    7364
....................             { 
....................                delay_ms(2000); 
7296:  MOVLW  08
7298:  MOVLB  6
729A:  MOVWF  x2C
729C:  MOVLW  FA
729E:  MOVWF  x2D
72A0:  MOVLB  0
72A2:  CALL   1ED8
72A6:  MOVLB  6
72A8:  DECFSZ x2C,F
72AA:  BRA    729C
....................                   write_eeprom(12,0);write_eeprom(13,0);write_eeprom(14,0);write_eeprom(15,0); 
72AC:  MOVLW  0C
72AE:  MOVWF  FA9
72B0:  CLRF   FA8
72B2:  BCF    FA6.6
72B4:  BCF    FA6.7
72B6:  BSF    FA6.2
72B8:  MOVF   FF2,W
72BA:  MOVWF  00
72BC:  BCF    FF2.7
72BE:  MOVLB  F
72C0:  MOVLW  55
72C2:  MOVWF  FA7
72C4:  MOVLW  AA
72C6:  MOVWF  FA7
72C8:  BSF    FA6.1
72CA:  BTFSC  FA6.1
72CC:  BRA    72CA
72CE:  BCF    FA6.2
72D0:  MOVF   00,W
72D2:  IORWF  FF2,F
72D4:  MOVLW  0D
72D6:  MOVWF  FA9
72D8:  CLRF   FA8
72DA:  BCF    FA6.6
72DC:  BCF    FA6.7
72DE:  BSF    FA6.2
72E0:  MOVF   FF2,W
72E2:  MOVWF  00
72E4:  BCF    FF2.7
72E6:  MOVLW  55
72E8:  MOVWF  FA7
72EA:  MOVLW  AA
72EC:  MOVWF  FA7
72EE:  BSF    FA6.1
72F0:  BTFSC  FA6.1
72F2:  BRA    72F0
72F4:  BCF    FA6.2
72F6:  MOVF   00,W
72F8:  IORWF  FF2,F
72FA:  MOVLW  0E
72FC:  MOVWF  FA9
72FE:  CLRF   FA8
7300:  BCF    FA6.6
7302:  BCF    FA6.7
7304:  BSF    FA6.2
7306:  MOVF   FF2,W
7308:  MOVWF  00
730A:  BCF    FF2.7
730C:  MOVLW  55
730E:  MOVWF  FA7
7310:  MOVLW  AA
7312:  MOVWF  FA7
7314:  BSF    FA6.1
7316:  BTFSC  FA6.1
7318:  BRA    7316
731A:  BCF    FA6.2
731C:  MOVF   00,W
731E:  IORWF  FF2,F
7320:  MOVLW  0F
7322:  MOVWF  FA9
7324:  CLRF   FA8
7326:  BCF    FA6.6
7328:  BCF    FA6.7
732A:  BSF    FA6.2
732C:  MOVF   FF2,W
732E:  MOVWF  00
7330:  BCF    FF2.7
7332:  MOVLW  55
7334:  MOVWF  FA7
7336:  MOVLW  AA
7338:  MOVWF  FA7
733A:  BSF    FA6.1
733C:  BTFSC  FA6.1
733E:  BRA    733C
7340:  BCF    FA6.2
7342:  MOVF   00,W
7344:  IORWF  FF2,F
....................                   Tuv[3]=0;Tuv[2]=0;Tuv[1]=0;Tuv[0]=0; 
7346:  MOVLB  5
7348:  CLRF   x4D
734A:  CLRF   x4C
734C:  CLRF   x4B
734E:  CLRF   x4A
....................                   Menu=3;glcd_fillscreen(OFF);LuzBlanca=10; 
7350:  MOVLW  03
7352:  MOVWF  x09
7354:  MOVLB  6
7356:  CLRF   x2D
7358:  MOVLB  0
735A:  CALL   20E2
735E:  MOVLW  0A
7360:  MOVLB  5
7362:  MOVWF  x18
....................                 
....................             } 
....................             if(DOWN) // Reinicia Tiempo de Trabajo 
7364:  BSF    F92.1
7366:  BTFSS  F80.1
7368:  BRA    7438
....................             { 
....................                delay_ms(2000); 
736A:  MOVLW  08
736C:  MOVLB  6
736E:  MOVWF  x2C
7370:  MOVLW  FA
7372:  MOVWF  x2D
7374:  MOVLB  0
7376:  CALL   1ED8
737A:  MOVLB  6
737C:  DECFSZ x2C,F
737E:  BRA    7370
....................                   write_eeprom(16,0);write_eeprom(17,0);write_eeprom(18,0);write_eeprom(19,0); 
7380:  MOVLW  10
7382:  MOVWF  FA9
7384:  CLRF   FA8
7386:  BCF    FA6.6
7388:  BCF    FA6.7
738A:  BSF    FA6.2
738C:  MOVF   FF2,W
738E:  MOVWF  00
7390:  BCF    FF2.7
7392:  MOVLB  F
7394:  MOVLW  55
7396:  MOVWF  FA7
7398:  MOVLW  AA
739A:  MOVWF  FA7
739C:  BSF    FA6.1
739E:  BTFSC  FA6.1
73A0:  BRA    739E
73A2:  BCF    FA6.2
73A4:  MOVF   00,W
73A6:  IORWF  FF2,F
73A8:  MOVLW  11
73AA:  MOVWF  FA9
73AC:  CLRF   FA8
73AE:  BCF    FA6.6
73B0:  BCF    FA6.7
73B2:  BSF    FA6.2
73B4:  MOVF   FF2,W
73B6:  MOVWF  00
73B8:  BCF    FF2.7
73BA:  MOVLW  55
73BC:  MOVWF  FA7
73BE:  MOVLW  AA
73C0:  MOVWF  FA7
73C2:  BSF    FA6.1
73C4:  BTFSC  FA6.1
73C6:  BRA    73C4
73C8:  BCF    FA6.2
73CA:  MOVF   00,W
73CC:  IORWF  FF2,F
73CE:  MOVLW  12
73D0:  MOVWF  FA9
73D2:  CLRF   FA8
73D4:  BCF    FA6.6
73D6:  BCF    FA6.7
73D8:  BSF    FA6.2
73DA:  MOVF   FF2,W
73DC:  MOVWF  00
73DE:  BCF    FF2.7
73E0:  MOVLW  55
73E2:  MOVWF  FA7
73E4:  MOVLW  AA
73E6:  MOVWF  FA7
73E8:  BSF    FA6.1
73EA:  BTFSC  FA6.1
73EC:  BRA    73EA
73EE:  BCF    FA6.2
73F0:  MOVF   00,W
73F2:  IORWF  FF2,F
73F4:  MOVLW  13
73F6:  MOVWF  FA9
73F8:  CLRF   FA8
73FA:  BCF    FA6.6
73FC:  BCF    FA6.7
73FE:  BSF    FA6.2
7400:  MOVF   FF2,W
7402:  MOVWF  00
7404:  BCF    FF2.7
7406:  MOVLW  55
7408:  MOVWF  FA7
740A:  MOVLW  AA
740C:  MOVWF  FA7
740E:  BSF    FA6.1
7410:  BTFSC  FA6.1
7412:  BRA    7410
7414:  BCF    FA6.2
7416:  MOVF   00,W
7418:  IORWF  FF2,F
....................                   Ttrabajo[3]=0;Ttrabajo[2]=0;Ttrabajo[1]=0;Ttrabajo[0]=0; 
741A:  MOVLB  5
741C:  CLRF   x59
741E:  CLRF   x58
7420:  CLRF   x57
7422:  CLRF   x56
....................                   Menu=3;glcd_fillscreen(OFF);LuzBlanca=10; 
7424:  MOVLW  03
7426:  MOVWF  x09
7428:  MOVLB  6
742A:  CLRF   x2D
742C:  MOVLB  0
742E:  CALL   20E2
7432:  MOVLW  0A
7434:  MOVLB  5
7436:  MOVWF  x18
....................             } 
....................              
....................             if(LEFT) 
7438:  BSF    F92.3
743A:  BTFSS  F80.3
743C:  BRA    7452
....................             { 
....................                Menu=3;glcd_fillscreen(OFF);LuzBlanca=10; 
743E:  MOVLW  03
7440:  MOVWF  x09
7442:  MOVLB  6
7444:  CLRF   x2D
7446:  MOVLB  0
7448:  CALL   20E2
744C:  MOVLW  0A
744E:  MOVLB  5
7450:  MOVWF  x18
....................             } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==200){ //Menu de Inicio.   
7452:  MOVF   x09,W
7454:  SUBLW  C8
7456:  BTFSS  FD8.2
7458:  BRA    75B2
....................          Display_on; 
745A:  BSF    F8D.0
745C:  BCF    F96.0
....................          glcd_init(ON);             //Inicializa la glcd 
745E:  MOVLW  01
7460:  MOVLB  6
7462:  MOVWF  x2C
7464:  MOVLB  0
7466:  CALL   312A
....................          glcd_fillScreen(OFF);      //Limpia la pantalla 
746A:  MOVLB  6
746C:  CLRF   x2D
746E:  MOVLB  0
7470:  CALL   20E2
....................          glcd_text57(0, 0, JP, 2, ON);glcd_text57(5, 20, Cabina, 1, ON);glcd_text57(10, 40, Clase, 2, ON);              
7474:  MOVLB  6
7476:  CLRF   x43
7478:  CLRF   x44
747A:  MOVLW  04
747C:  MOVWF  x46
747E:  MOVLW  4F
7480:  MOVWF  x45
7482:  MOVLW  02
7484:  MOVWF  x47
7486:  MOVLW  01
7488:  MOVWF  x48
748A:  MOVLB  0
748C:  CALL   1D20
7490:  MOVLW  05
7492:  MOVLB  6
7494:  MOVWF  x43
7496:  MOVLW  14
7498:  MOVWF  x44
749A:  MOVLW  04
749C:  MOVWF  x46
749E:  MOVLW  5B
74A0:  MOVWF  x45
74A2:  MOVLW  01
74A4:  MOVWF  x47
74A6:  MOVWF  x48
74A8:  MOVLB  0
74AA:  CALL   1D20
74AE:  MOVLW  0A
74B0:  MOVLB  6
74B2:  MOVWF  x43
74B4:  MOVLW  28
74B6:  MOVWF  x44
74B8:  MOVLW  04
74BA:  MOVWF  x46
74BC:  MOVLW  79
74BE:  MOVWF  x45
74C0:  MOVLW  02
74C2:  MOVWF  x47
74C4:  MOVLW  01
74C6:  MOVWF  x48
74C8:  MOVLB  0
74CA:  CALL   1D20
....................          glcd_update();    
74CE:  CALL   19AC
....................          delay_ms(3000); 
74D2:  MOVLW  0C
74D4:  MOVLB  6
74D6:  MOVWF  x2C
74D8:  MOVLW  FA
74DA:  MOVWF  x2D
74DC:  MOVLB  0
74DE:  CALL   1ED8
74E2:  MOVLB  6
74E4:  DECFSZ x2C,F
74E6:  BRA    74D8
....................                      
....................          glcd_fillScreen(OFF);      //Limpia la pantalla 
74E8:  CLRF   x2D
74EA:  MOVLB  0
74EC:  CALL   20E2
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
74F0:  MOVFF  55A,62E
74F4:  MOVLW  14
74F6:  MOVLB  6
74F8:  MOVWF  x2F
74FA:  MOVLW  1E
74FC:  MOVWF  x30
74FE:  MOVLW  01
7500:  MOVWF  x31
7502:  MOVLB  0
7504:  CALL   202C
7508:  MOVFF  55B,62E
750C:  MOVLW  28
750E:  MOVLB  6
7510:  MOVWF  x2F
7512:  MOVLW  1E
7514:  MOVWF  x30
7516:  CLRF   x31
7518:  MOVLB  0
751A:  CALL   202C
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
751E:  MOVFF  55C,62E
7522:  MOVLW  3C
7524:  MOVLB  6
7526:  MOVWF  x2F
7528:  MOVLW  1E
752A:  MOVWF  x30
752C:  CLRF   x31
752E:  MOVLB  0
7530:  CALL   202C
7534:  MOVFF  55A,62E
7538:  MOVLW  50
753A:  MOVLB  6
753C:  MOVWF  x2F
753E:  MOVLW  1E
7540:  MOVWF  x30
7542:  CLRF   x31
7544:  MOVLB  0
7546:  CALL   202C
....................          glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);    
754A:  MOVLB  6
754C:  CLRF   x43
754E:  CLRF   x44
7550:  MOVLW  7F
7552:  MOVWF  x45
7554:  MOVLW  19
7556:  MOVWF  x46
7558:  MOVLW  01
755A:  MOVWF  x47
755C:  MOVWF  x48
755E:  MOVLB  0
7560:  CALL   1C5E
7564:  MOVLW  06
7566:  MOVWF  FEA
7568:  MOVLW  16
756A:  MOVWF  FE9
756C:  MOVFF  FF2,62C
7570:  BCF    FF2.7
7572:  MOVLW  00
7574:  CALL   0EEE
7578:  TBLRD*-
757A:  TBLRD*+
757C:  MOVF   FF5,W
757E:  MOVWF  FEE
7580:  IORLW  00
7582:  BNZ   757A
7584:  MOVLB  6
7586:  BTFSC  x2C.7
7588:  BSF    FF2.7
758A:  MOVLW  19
758C:  MOVWF  x43
758E:  MOVLW  01
7590:  MOVWF  x44
7592:  MOVLW  06
7594:  MOVWF  x46
7596:  MOVLW  16
7598:  MOVWF  x45
759A:  MOVLW  03
759C:  MOVWF  x47
759E:  CLRF   x48
75A0:  MOVLB  0
75A2:  CALL   1D20
....................          Menu=0; 
75A6:  MOVLB  5
75A8:  CLRF   x09
....................       Envio_Esclavos(); 
75AA:  MOVLB  0
75AC:  CALL   1930
75B0:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................    if(tiemporeset>=60) 
75B2:  MOVF   x11,W
75B4:  SUBLW  3B
75B6:  BC    75C8
....................    { 
....................       glcd_init(ON); 
75B8:  MOVLW  01
75BA:  MOVLB  6
75BC:  MOVWF  x2C
75BE:  MOVLB  0
75C0:  CALL   312A
....................       tiemporeset=0; 
75C4:  MOVLB  5
75C6:  CLRF   x11
....................    }  
.................... } 
75C8:  GOTO   3D5C
....................  
.................... } 
....................  
....................  
75CC:  SLEEP 

Configuration Fuses:
   Word  1: CE20   IESO FCMEN HSPLL PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB

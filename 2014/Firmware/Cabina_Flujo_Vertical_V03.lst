CCS PCH C Compiler, Version 4.104, 5967               24-ago-15 13:23

               Filename: E:\JP\JP\Laboratorio\Cabina de Flujo Laminar Vertical\2014\Firmware\Cabina_Flujo_Vertical_V03.lst

               ROM used: 7490 bytes (23%)
                         Largest free fragment is 25278
               RAM used: 30 (1%) at main() level
                         43 (2%) worst case
               Stack:    6 locations

*
0000:  GOTO   0B1A
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Cabina de Flujo Laminar Vertical. 
.................... // Tiene Contraseña de incio para permitir funcionamiento de Cabina. 
.................... // Tiene Menú:Luz UV, Luz Blanca, Motor Ventilador y Cambio de Contraseña. 
.................... // Permite cambiar la velocidad del motor digitalmente. 
.................... // Ing. Juan David Piñeros. 
.................... // JP Inglobal. 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #fuses HSPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR// PLL1 para 4 MHz 
.................... //#fuses XT,NOWDT,NOPROTECT,NOLVP,NODEBUG,VREGEN,NOMCLR// PLL1 para 4 MHz 
.................... #use delay(clock=48000000) 
*
06C4:  CLRF   FEA
06C6:  MOVLW  23
06C8:  MOVWF  FE9
06CA:  MOVF   FEF,W
06CC:  BZ    06EA
06CE:  MOVLW  0F
06D0:  MOVWF  01
06D2:  CLRF   00
06D4:  DECFSZ 00,F
06D6:  BRA    06D4
06D8:  DECFSZ 01,F
06DA:  BRA    06D2
06DC:  MOVLW  8F
06DE:  MOVWF  00
06E0:  DECFSZ 00,F
06E2:  BRA    06E0
06E4:  NOP   
06E6:  DECFSZ FEF,F
06E8:  BRA    06CE
06EA:  RETLW  00
.................... #include <LCD420.c> 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCD420.C                               //// 
.................... ////            Driver for common 4x20 LCD modules                      //// 
.................... ////                                                                    //// 
.................... ////  lcd_init()   Must be called before any other function.            //// 
.................... ////                                                                    //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.      //// 
.................... ////                     The following have special meaning:            //// 
.................... ////                      \f  Clear display                             //// 
.................... ////                      \n  Go to start of second line                //// 
.................... ////                      \b  Move back one position                    //// 
.................... ////                                                                    //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)     //// 
.................... ////                                                                    //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD          //// 
.................... ////                                                                    //// 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,1997 Custom Computer Services            //// 
.................... //// This source code may only be used by licensed users of the CCS C   //// 
.................... //// compiler.  This source code may only be distributed to other       //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction  //// 
.................... //// or distribution is permitted without written permission.           //// 
.................... //// Derivative programs created using this software in object code     //// 
.................... //// form are not restricted in any way.                                //// 
.................... //////////////////////////////////////////////////////////////////////////// 
....................  
.................... // As defined in the following structure the pin connection is as follows: 
.................... //     B0  enable 
.................... //     B1  rs 
.................... //     B2  rw 
.................... //     B4  D4 
.................... //     B5  D5 
.................... //     B6  D6 
.................... //     B7  D7 
.................... // 
.................... //   LCD pins D0-D3 are not used and PIC B3 is not used. 
....................  
.................... struct lcd_pin_map {                 // This structure is overlayed 
....................            BOOLEAN enable;           // on to an I/O port to gain 
....................            BOOLEAN rs;               // access to the LCD pins. 
....................            BOOLEAN rw;               // The bits are allocated from 
....................            BOOLEAN unused;           // low order up.  ENABLE will 
....................            int     data : 4;         // be pin B0. 
....................         } lcd; 
....................  
.................... #locate lcd = getenv("SFR:PORTB")                        // This puts the entire structure 
....................                                      // on to port B  
....................  
.................... #define lcd_type 2           // 0=5x7, 1=5x10, 2=2 lines 
....................  
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
....................  
....................                              // The following are used for setting 
....................                              // the I/O port direction register. 
....................  
.................... struct lcd_pin_map const LCD_WRITE = {0,0,0,0,0}; // For write mode all pins are out 
.................... struct lcd_pin_map const LCD_READ = {0,0,0,0,15}; // For read mode data pins are in 
....................  
....................  
.................... BYTE lcdline; 
....................  
.................... BYTE lcd_read_byte() { 
....................       BYTE low,high; 
....................  
....................       set_tris_b(LCD_READ); 
*
0712:  MOVLW  F0
0714:  MOVWF  F93
....................       lcd.rw = 1; 
0716:  BSF    F81.2
....................       delay_cycles(25); 
0718:  MOVLW  08
071A:  MOVWF  00
071C:  DECFSZ 00,F
071E:  BRA    071C
....................       lcd.enable = 1; 
0720:  BSF    F81.0
....................       delay_cycles(25); 
0722:  MOVLW  08
0724:  MOVWF  00
0726:  DECFSZ 00,F
0728:  BRA    0726
....................       high = lcd.data; 
072A:  SWAPF  F81,W
072C:  ANDLW  0F
072E:  MOVWF  29
....................       lcd.enable = 0; 
0730:  BCF    F81.0
....................       delay_cycles(25); 
0732:  MOVLW  08
0734:  MOVWF  00
0736:  DECFSZ 00,F
0738:  BRA    0736
....................       lcd.enable = 1; 
073A:  BSF    F81.0
....................       delay_us(25); 
073C:  MOVLW  63
073E:  MOVWF  00
0740:  DECFSZ 00,F
0742:  BRA    0740
0744:  BRA    0746
....................       low = lcd.data; 
0746:  SWAPF  F81,W
0748:  ANDLW  0F
074A:  MOVWF  28
....................       lcd.enable = 0; 
074C:  BCF    F81.0
....................       set_tris_b(LCD_WRITE); 
074E:  MOVLW  00
0750:  MOVWF  F93
....................       return( (high<<4) | low); 
0752:  SWAPF  29,W
0754:  MOVWF  00
0756:  MOVLW  F0
0758:  ANDWF  00,F
075A:  MOVF   00,W
075C:  IORWF  28,W
075E:  MOVWF  01
.................... } 
0760:  GOTO   0768 (RETURN)
....................  
....................  
.................... void lcd_send_nibble( BYTE n ) { 
....................       lcd.data = n; 
*
06EC:  SWAPF  29,W
06EE:  ANDLW  F0
06F0:  MOVWF  00
06F2:  MOVLW  0F
06F4:  ANDWF  F81,W
06F6:  IORWF  00,W
06F8:  MOVWF  F81
....................       delay_cycles(25); 
06FA:  MOVLW  08
06FC:  MOVWF  00
06FE:  DECFSZ 00,F
0700:  BRA    06FE
....................       lcd.enable = 1; 
0702:  BSF    F81.0
....................       delay_us(55); 
0704:  MOVLW  DB
0706:  MOVWF  00
0708:  DECFSZ 00,F
070A:  BRA    0708
070C:  BRA    070E
....................       lcd.enable = 0; 
070E:  BCF    F81.0
.................... } 
0710:  RETLW  00
....................  
....................  
.................... void lcd_send_byte( BYTE address, BYTE n ) { 
....................  
....................       lcd.rs = 0; 
*
0764:  BCF    F81.1
....................       while ( bit_test(lcd_read_byte(),7) ) ; 
0766:  BRA    0712
0768:  MOVFF  01,28
076C:  BTFSC  01.7
076E:  BRA    0766
....................       lcd.rs = address; 
0770:  BTFSS  26.0
0772:  BCF    F81.1
0774:  BTFSC  26.0
0776:  BSF    F81.1
....................       delay_cycles(25); 
0778:  MOVLW  08
077A:  MOVWF  00
077C:  DECFSZ 00,F
077E:  BRA    077C
....................       lcd.rw = 0; 
0780:  BCF    F81.2
....................       delay_cycles(25); 
0782:  MOVLW  08
0784:  MOVWF  00
0786:  DECFSZ 00,F
0788:  BRA    0786
....................       lcd.enable = 0; 
078A:  BCF    F81.0
....................       lcd_send_nibble(n >> 4); 
078C:  SWAPF  27,W
078E:  MOVWF  28
0790:  MOVLW  0F
0792:  ANDWF  28,F
0794:  MOVFF  28,29
0798:  RCALL  06EC
....................       lcd_send_nibble(n & 0xf); 
079A:  MOVF   27,W
079C:  ANDLW  0F
079E:  MOVWF  28
07A0:  MOVWF  29
07A2:  RCALL  06EC
.................... } 
07A4:  RETLW  00
....................  
....................  
.................... void lcd_init() { 
....................     BYTE i; 
....................  
....................     set_tris_b(LCD_WRITE); 
07A6:  MOVLW  00
07A8:  MOVWF  F93
....................     lcd.rs = 0; 
07AA:  BCF    F81.1
....................     lcd.rw = 0; 
07AC:  BCF    F81.2
....................     lcd.enable = 0; 
07AE:  BCF    F81.0
....................     delay_ms(15); 
07B0:  MOVLW  0F
07B2:  MOVWF  23
07B4:  RCALL  06C4
....................     for(i=1;i<=3;++i) { 
07B6:  MOVLW  01
07B8:  MOVWF  1C
07BA:  MOVF   1C,W
07BC:  SUBLW  03
07BE:  BNC   07D0
....................        lcd_send_nibble(3); 
07C0:  MOVLW  03
07C2:  MOVWF  29
07C4:  RCALL  06EC
....................        delay_ms(5); 
07C6:  MOVLW  05
07C8:  MOVWF  23
07CA:  RCALL  06C4
....................     } 
07CC:  INCF   1C,F
07CE:  BRA    07BA
....................     lcd_send_nibble(2); 
07D0:  MOVLW  02
07D2:  MOVWF  29
07D4:  RCALL  06EC
....................     for(i=0;i<=3;++i) 
07D6:  CLRF   1C
07D8:  MOVF   1C,W
07DA:  SUBLW  03
07DC:  BNC   07FA
....................        lcd_send_byte(0, LCD_INIT_STRING[i]); 
07DE:  CLRF   03
07E0:  MOVF   1C,W
07E2:  MOVFF  FF2,1D
07E6:  BCF    FF2.7
07E8:  RCALL  0004
07EA:  BTFSC  1D.7
07EC:  BSF    FF2.7
07EE:  MOVWF  1D
07F0:  CLRF   26
07F2:  MOVWF  27
07F4:  RCALL  0764
07F6:  INCF   1C,F
07F8:  BRA    07D8
.................... } 
07FA:  GOTO   0B84 (RETURN)
....................  
....................  
.................... void lcd_gotoxy( BYTE x, BYTE y) { 
....................    BYTE address; 
....................  
....................    switch(y) { 
07FE:  MOVLW  01
0800:  SUBWF  24,W
0802:  ADDLW  FC
0804:  BC    0824
0806:  ADDLW  04
0808:  GOTO   0834
....................      case 1 : address=0x80;break; 
080C:  MOVLW  80
080E:  MOVWF  25
0810:  BRA    0824
....................      case 2 : address=0xc0;break; 
0812:  MOVLW  C0
0814:  MOVWF  25
0816:  BRA    0824
....................      case 3 : address=0x94;break; 
0818:  MOVLW  94
081A:  MOVWF  25
081C:  BRA    0824
....................      case 4 : address=0xd4;break; 
081E:  MOVLW  D4
0820:  MOVWF  25
0822:  BRA    0824
....................    } 
....................    address+=x-1; 
0824:  MOVLW  01
0826:  SUBWF  23,W
0828:  ADDWF  25,F
....................    lcd_send_byte(0,address); 
082A:  CLRF   26
082C:  MOVFF  25,27
0830:  RCALL  0764
.................... } 
0832:  RETLW  00
....................  
.................... void lcd_putc( char c) { 
.................... if(c=='ñ') 
*
0856:  MOVF   22,W
0858:  SUBLW  F1
085A:  BNZ   0860
....................     c=238; 
085C:  MOVLW  EE
085E:  MOVWF  22
....................    switch (c) { 
0860:  MOVF   22,W
0862:  XORLW  0C
0864:  BZ    0870
0866:  XORLW  06
0868:  BZ    0884
086A:  XORLW  02
086C:  BZ    0892
086E:  BRA    089C
....................      case '\f'   : lcd_send_byte(0,1); 
0870:  CLRF   26
0872:  MOVLW  01
0874:  MOVWF  27
0876:  RCALL  0764
....................                    lcdline=1; 
0878:  MOVLW  01
087A:  MOVWF  04
....................                    delay_ms(2); 
087C:  MOVLW  02
087E:  MOVWF  23
0880:  RCALL  06C4
....................                                            break; 
0882:  BRA    08A8
....................      case '\n'   : lcd_gotoxy(1,++lcdline);        break; 
0884:  INCF   04,F
0886:  MOVLW  01
0888:  MOVWF  23
088A:  MOVFF  04,24
088E:  RCALL  07FE
0890:  BRA    08A8
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
0892:  CLRF   26
0894:  MOVLW  10
0896:  MOVWF  27
0898:  RCALL  0764
089A:  BRA    08A8
....................      default     : lcd_send_byte(1,c);     break; 
089C:  MOVLW  01
089E:  MOVWF  26
08A0:  MOVFF  22,27
08A4:  RCALL  0764
08A6:  BRA    08A8
....................    } 
.................... } 
08A8:  RETLW  00
....................  
.................... char lcd_getc( BYTE x, BYTE y) { 
....................    char value; 
....................  
....................     lcd_gotoxy(x,y); 
....................     lcd.rs=1; 
....................     value = lcd_read_byte(); 
....................     lcd.rs=0; 
....................     return(value); 
.................... } 
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... // Definición de otros puertos 
.................... #define   Luz_UV_on         output_bit(PIN_D0,1) 
.................... #define   Luz_UV_off        output_bit(PIN_D0,0) 
.................... #define   Luz_Blanca_on     output_bit(PIN_D1,1) 
.................... #define   Luz_Blanca_off    output_bit(PIN_D1,0) 
.................... #define   Motor_L1_on       output_bit(PIN_D2,1) 
.................... #define   Motor_L1_off      output_bit(PIN_D2,0) 
.................... #define   Motor_L2_on       output_bit(PIN_D3,1) 
.................... #define   Motor_L2_off      output_bit(PIN_D3,0) 
.................... #define   Motor_L3_on       output_bit(PIN_D4,1) 
.................... #define   Motor_L3_off      output_bit(PIN_D4,0) 
.................... #define   Motor_L4_on       output_bit(PIN_D5,1) 
.................... #define   Motor_L4_off      output_bit(PIN_D5,0) 
....................  
....................    int8 Menu=0, n_opcionH=6,n_opcionL=2,unidad=11,Flecha=2,Flecha1=3,Flecha2=2, nMenuL=2, nMenuH=4; 
....................    short estadouv=0,estadofl=0,estadomv=0,Flanco=0,Flanco1=0,Flanco2=0,Flanco3=0; 
....................    signed int8   paso=0,Velocidad=1; 
....................    char t[3]={'>',' ','^'};  
....................    signed  int8 clave[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
....................    int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... /*int8 tiempos,Ttotal,reloj=0,reloj0=0,reloj1=0,reloj2=0,reloj3=0,reloj4=0,reloj5=0,reloj6=0,reloj7=0,reloj8=0,reloj9=0,reloj10=0,reloj11=0; 
.................... signed int8 tiempos_error=0; 
.................... int8 reloje0=0,x=0,y=0; 
.................... short tiempo_fin=0; 
.................... signed int  tiempo2[5]={0,0,0,0,0};   // Tiempo transcurrido 
.................... signed int8 temporizador[5]={0,0,0,0,0};   // Tiempo transcurrido 
....................  
....................  Temporizador no utilizado para esta cabina 
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    set_timer1(6064);  // 5 ms 
....................    tiempos++; 
....................    if(tiempos==200)   // Ha transcurrido una decima de segundo (PIC18F4550 con XT = 16MHZ) 
....................    {tiempos=0; 
....................    //----------------------------- Tiempo Total-----------------------------// 
....................    if(reloj==1){ 
....................     
....................    if(tiempo2[1]==0&&tiempo2[2]==0&&tiempo2[3]==0&&tiempo2[4]==0) 
....................    {tiempo_fin=1;} 
....................    else 
....................    { 
....................    if(tiempo_fin==0) 
....................       {tiempo_fin=0; 
....................       tiempo2[4]--; 
....................          if(tiempo2[4]<0) 
....................             {tiempo2[4]=9; 
....................             tiempo2[3]--;} 
....................             if(tiempo2[3]<0) 
....................                {tiempo2[3]=6; 
....................                tiempo2[2]--;} 
....................                if(tiempo2[2]<0) 
....................                   {tiempo2[2]=9; 
....................                   tiempo2[1]--;} 
....................                   if(tiempo2[1]<0) 
....................                      {tiempo2[1]=9;} } 
....................    } 
....................    }      
....................    } 
....................    } 
.................... */ 
....................  
.................... void mensajes(int8 x,y)// Funcion para imprimir mensajes de Menu Principal. 
.................... {  if(x==1) 
*
09D8:  DECFSZ 1D,W
09DA:  BRA    0A0C
....................    {if(estadouv==0) 
09DC:  BTFSC  0E.0
09DE:  BRA    09F4
....................       {lcd_gotoxy(2,y);printf(lcd_putc,"LUZ UV          OFF");} 
09E0:  MOVLW  02
09E2:  MOVWF  23
09E4:  MOVFF  1E,24
09E8:  RCALL  07FE
09EA:  MOVLW  18
09EC:  MOVWF  FF6
09EE:  MOVLW  00
09F0:  MOVWF  FF7
09F2:  RCALL  08AA
....................     if(estadouv==1)   
09F4:  BTFSS  0E.0
09F6:  BRA    0A0C
....................       {lcd_gotoxy(2,y);printf(lcd_putc,"LUZ UV           ON");} 
09F8:  MOVLW  02
09FA:  MOVWF  23
09FC:  MOVFF  1E,24
0A00:  RCALL  07FE
0A02:  MOVLW  2C
0A04:  MOVWF  FF6
0A06:  MOVLW  00
0A08:  MOVWF  FF7
0A0A:  RCALL  08AA
....................    } 
....................    if(x==2) 
0A0C:  MOVF   1D,W
0A0E:  SUBLW  02
0A10:  BNZ   0A42
....................    {if(estadofl==0) 
0A12:  BTFSC  0E.1
0A14:  BRA    0A2A
....................       {lcd_gotoxy(2,y);printf(lcd_putc,"LUZ BLANCA      OFF");} 
0A16:  MOVLW  02
0A18:  MOVWF  23
0A1A:  MOVFF  1E,24
0A1E:  RCALL  07FE
0A20:  MOVLW  40
0A22:  MOVWF  FF6
0A24:  MOVLW  00
0A26:  MOVWF  FF7
0A28:  RCALL  08AA
....................     if(estadofl==1) 
0A2A:  BTFSS  0E.1
0A2C:  BRA    0A42
....................       {lcd_gotoxy(2,y);printf(lcd_putc,"LUZ BLANCA       ON");}   
0A2E:  MOVLW  02
0A30:  MOVWF  23
0A32:  MOVFF  1E,24
0A36:  RCALL  07FE
0A38:  MOVLW  54
0A3A:  MOVWF  FF6
0A3C:  MOVLW  00
0A3E:  MOVWF  FF7
0A40:  RCALL  08AA
....................    } 
....................    if(x==3) 
0A42:  MOVF   1D,W
0A44:  SUBLW  03
0A46:  BNZ   0A78
....................    {if(estadomv==0) 
0A48:  BTFSC  0E.2
0A4A:  BRA    0A60
....................       {lcd_gotoxy(2,y);printf(lcd_putc,"VENTILADOR      OFF");} 
0A4C:  MOVLW  02
0A4E:  MOVWF  23
0A50:  MOVFF  1E,24
0A54:  RCALL  07FE
0A56:  MOVLW  68
0A58:  MOVWF  FF6
0A5A:  MOVLW  00
0A5C:  MOVWF  FF7
0A5E:  RCALL  08AA
....................    if(estadomv==1) 
0A60:  BTFSS  0E.2
0A62:  BRA    0A78
....................       {lcd_gotoxy(2,y);printf(lcd_putc,"VENTILADOR       ON");} 
0A64:  MOVLW  02
0A66:  MOVWF  23
0A68:  MOVFF  1E,24
0A6C:  RCALL  07FE
0A6E:  MOVLW  7C
0A70:  MOVWF  FF6
0A72:  MOVLW  00
0A74:  MOVWF  FF7
0A76:  RCALL  08AA
....................    } 
....................    if(x==4) 
0A78:  MOVF   1D,W
0A7A:  SUBLW  04
0A7C:  BNZ   0A92
....................    {lcd_gotoxy(2,y);printf(lcd_putc,"VELOCIDAD DE FLUJO ");} 
0A7E:  MOVLW  02
0A80:  MOVWF  23
0A82:  MOVFF  1E,24
0A86:  RCALL  07FE
0A88:  MOVLW  90
0A8A:  MOVWF  FF6
0A8C:  MOVLW  00
0A8E:  MOVWF  FF7
0A90:  RCALL  08AA
....................    if(x==5) 
0A92:  MOVF   1D,W
0A94:  SUBLW  05
0A96:  BNZ   0AAC
....................    {lcd_gotoxy(2,y);printf(lcd_putc,"CAMBIO CONTRASENA  ");} 
0A98:  MOVLW  02
0A9A:  MOVWF  23
0A9C:  MOVFF  1E,24
0AA0:  RCALL  07FE
0AA2:  MOVLW  A4
0AA4:  MOVWF  FF6
0AA6:  MOVLW  00
0AA8:  MOVWF  FF7
0AAA:  RCALL  08AA
.................... } 
0AAC:  RETLW  00
....................  
.................... void velocidades(int8 x)// Funcion para imprimir mensajes de Menu Principal. 
.................... {  if(x==0) 
0AAE:  MOVF   1E,F
0AB0:  BNZ   0AC2
....................       {Motor_L2_off;Motor_L3_off;Motor_L4_off;Motor_L1_off;} 
0AB2:  BCF    F8C.3
0AB4:  BCF    F95.3
0AB6:  BCF    F8C.4
0AB8:  BCF    F95.4
0ABA:  BCF    F8C.5
0ABC:  BCF    F95.5
0ABE:  BCF    F8C.2
0AC0:  BCF    F95.2
....................    if(x==1) 
0AC2:  DECFSZ 1E,W
0AC4:  BRA    0AD6
....................       {Motor_L2_off;Motor_L3_off;Motor_L4_off;Motor_L1_on;} 
0AC6:  BCF    F8C.3
0AC8:  BCF    F95.3
0ACA:  BCF    F8C.4
0ACC:  BCF    F95.4
0ACE:  BCF    F8C.5
0AD0:  BCF    F95.5
0AD2:  BSF    F8C.2
0AD4:  BCF    F95.2
....................    if(x==2) 
0AD6:  MOVF   1E,W
0AD8:  SUBLW  02
0ADA:  BNZ   0AEC
....................       {Motor_L3_off;Motor_L4_off;Motor_L1_off;Motor_L2_on;} 
0ADC:  BCF    F8C.4
0ADE:  BCF    F95.4
0AE0:  BCF    F8C.5
0AE2:  BCF    F95.5
0AE4:  BCF    F8C.2
0AE6:  BCF    F95.2
0AE8:  BSF    F8C.3
0AEA:  BCF    F95.3
....................    if(x==3) 
0AEC:  MOVF   1E,W
0AEE:  SUBLW  03
0AF0:  BNZ   0B02
....................       {Motor_L4_off;Motor_L1_off;Motor_L2_off;Motor_L3_on;} 
0AF2:  BCF    F8C.5
0AF4:  BCF    F95.5
0AF6:  BCF    F8C.2
0AF8:  BCF    F95.2
0AFA:  BCF    F8C.3
0AFC:  BCF    F95.3
0AFE:  BSF    F8C.4
0B00:  BCF    F95.4
....................    if(x==4) 
0B02:  MOVF   1E,W
0B04:  SUBLW  04
0B06:  BNZ   0B18
....................       {Motor_L2_off;Motor_L3_off;Motor_L1_off;Motor_L4_on;} 
0B08:  BCF    F8C.3
0B0A:  BCF    F95.3
0B0C:  BCF    F8C.4
0B0E:  BCF    F95.4
0B10:  BCF    F8C.2
0B12:  BCF    F95.2
0B14:  BSF    F8C.5
0B16:  BCF    F95.5
.................... } 
0B18:  RETLW  00
....................  
.................... void main () 
.................... { 
0B1A:  CLRF   FF8
0B1C:  BCF    FD0.7
0B1E:  CLRF   FEA
0B20:  CLRF   FE9
0B22:  CLRF   05
0B24:  MOVLW  06
0B26:  MOVWF  06
0B28:  MOVLW  02
0B2A:  MOVWF  07
0B2C:  MOVLW  0B
0B2E:  MOVWF  08
0B30:  MOVLW  02
0B32:  MOVWF  09
0B34:  MOVLW  03
0B36:  MOVWF  0A
0B38:  MOVLW  02
0B3A:  MOVWF  0B
0B3C:  MOVWF  0C
0B3E:  MOVLW  04
0B40:  MOVWF  0D
0B42:  BCF    0E.0
0B44:  BCF    0E.1
0B46:  BCF    0E.2
0B48:  BCF    0E.3
0B4A:  BCF    0E.4
0B4C:  BCF    0E.5
0B4E:  BCF    0E.6
0B50:  CLRF   0F
0B52:  MOVLW  01
0B54:  MOVWF  10
0B56:  MOVF   FC1,W
0B58:  ANDLW  C0
0B5A:  IORLW  0F
0B5C:  MOVWF  FC1
0B5E:  MOVLW  07
0B60:  MOVWF  FB4
0B62:  MOVLW  3E
0B64:  MOVWF  11
0B66:  MOVLW  20
0B68:  MOVWF  12
0B6A:  MOVLW  5E
0B6C:  MOVWF  13
0B6E:  CLRF   14
0B70:  CLRF   15
0B72:  CLRF   16
0B74:  CLRF   17
0B76:  CLRF   18
0B78:  CLRF   19
0B7A:  CLRF   1A
0B7C:  CLRF   1B
....................    output_d(0); 
0B7E:  CLRF   F95
0B80:  CLRF   F8C
....................    lcd_init(); 
0B82:  BRA    07A6
....................    lcd_gotoxy(1,1); 
0B84:  MOVLW  01
0B86:  MOVWF  23
0B88:  MOVWF  24
0B8A:  RCALL  07FE
....................    printf(lcd_putc,"  CABINA DE FLUJO   "); 
0B8C:  MOVLW  B8
0B8E:  MOVWF  FF6
0B90:  MOVLW  00
0B92:  MOVWF  FF7
0B94:  RCALL  08AA
....................    lcd_gotoxy(1,2); 
0B96:  MOVLW  01
0B98:  MOVWF  23
0B9A:  MOVLW  02
0B9C:  MOVWF  24
0B9E:  RCALL  07FE
....................    printf(lcd_putc,"  LAMINAR VERTICAL  "); 
0BA0:  MOVLW  CE
0BA2:  MOVWF  FF6
0BA4:  MOVLW  00
0BA6:  MOVWF  FF7
0BA8:  RCALL  08AA
....................    lcd_gotoxy(1,3); 
0BAA:  MOVLW  01
0BAC:  MOVWF  23
0BAE:  MOVLW  03
0BB0:  MOVWF  24
0BB2:  RCALL  07FE
....................    printf(lcd_putc,"    JP INGLOBAL     "); 
0BB4:  MOVLW  E4
0BB6:  MOVWF  FF6
0BB8:  MOVLW  00
0BBA:  MOVWF  FF7
0BBC:  RCALL  08AA
....................    lcd_gotoxy(1,4); 
0BBE:  MOVLW  01
0BC0:  MOVWF  23
0BC2:  MOVLW  04
0BC4:  MOVWF  24
0BC6:  RCALL  07FE
....................    printf(lcd_putc,"    REF: JPCV36     "); 
0BC8:  MOVLW  FA
0BCA:  MOVWF  FF6
0BCC:  MOVLW  00
0BCE:  MOVWF  FF7
0BD0:  RCALL  08AA
....................    delay_ms(2000); 
0BD2:  MOVLW  08
0BD4:  MOVWF  1C
0BD6:  MOVLW  FA
0BD8:  MOVWF  23
0BDA:  RCALL  06C4
0BDC:  DECFSZ 1C,F
0BDE:  BRA    0BD6
....................    printf(lcd_putc,"\f"); 
0BE0:  MOVLW  0C
0BE2:  MOVWF  22
0BE4:  RCALL  0856
....................     
....................    //Solo para simulacion 
....................    //write_eeprom(0,0);delay_ms(20);write_eeprom(1,0);delay_ms(20); 
....................    //write_eeprom(2,0);delay_ms(20);write_eeprom(3,0);delay_ms(20); 
....................    Velocidad=read_eeprom(5); 
0BE6:  MOVFF  FF2,1C
0BEA:  BCF    FF2.7
0BEC:  MOVLW  05
0BEE:  MOVWF  FA9
0BF0:  BCF    FA6.6
0BF2:  BCF    FA6.7
0BF4:  BSF    FA6.0
0BF6:  MOVF   FA8,W
0BF8:  BTFSC  1C.7
0BFA:  BSF    FF2.7
0BFC:  MOVWF  10
....................     
....................    // Lee la contraseña almacenada en la eeprom para poder comprobar con la que escribe el usuario. 
....................    contrasena[0]=read_eeprom(0);delay_ms(20); contrasena[1]=read_eeprom(1);delay_ms(20); 
0BFE:  MOVFF  FF2,1C
0C02:  BCF    FF2.7
0C04:  CLRF   FA9
0C06:  BCF    FA6.6
0C08:  BCF    FA6.7
0C0A:  BSF    FA6.0
0C0C:  MOVF   FA8,W
0C0E:  BTFSC  1C.7
0C10:  BSF    FF2.7
0C12:  MOVWF  18
0C14:  MOVLW  14
0C16:  MOVWF  23
0C18:  RCALL  06C4
0C1A:  MOVFF  FF2,1C
0C1E:  BCF    FF2.7
0C20:  MOVLW  01
0C22:  MOVWF  FA9
0C24:  BCF    FA6.6
0C26:  BCF    FA6.7
0C28:  BSF    FA6.0
0C2A:  MOVF   FA8,W
0C2C:  BTFSC  1C.7
0C2E:  BSF    FF2.7
0C30:  MOVWF  19
0C32:  MOVLW  14
0C34:  MOVWF  23
0C36:  RCALL  06C4
....................    contrasena[2]=read_eeprom(2);delay_ms(20); contrasena[3]=read_eeprom(3);delay_ms(20); 
0C38:  MOVFF  FF2,1C
0C3C:  BCF    FF2.7
0C3E:  MOVLW  02
0C40:  MOVWF  FA9
0C42:  BCF    FA6.6
0C44:  BCF    FA6.7
0C46:  BSF    FA6.0
0C48:  MOVF   FA8,W
0C4A:  BTFSC  1C.7
0C4C:  BSF    FF2.7
0C4E:  MOVWF  1A
0C50:  MOVLW  14
0C52:  MOVWF  23
0C54:  RCALL  06C4
0C56:  MOVFF  FF2,1C
0C5A:  BCF    FF2.7
0C5C:  MOVLW  03
0C5E:  MOVWF  FA9
0C60:  BCF    FA6.6
0C62:  BCF    FA6.7
0C64:  BSF    FA6.0
0C66:  MOVF   FA8,W
0C68:  BTFSC  1C.7
0C6A:  BSF    FF2.7
0C6C:  MOVWF  1B
0C6E:  MOVLW  14
0C70:  MOVWF  23
0C72:  RCALL  06C4
....................    
....................    while(true){ 
....................  
.................... //------------Menu0------------------------------------------------------------------    
....................    if(Menu == 0){ // Menu de Contraseña para Poder iniciar el equipo 
0C74:  MOVF   05,F
0C76:  BTFSS  FD8.2
0C78:  BRA    0FCE
....................    lcd_gotoxy(1,1); 
0C7A:  MOVLW  01
0C7C:  MOVWF  23
0C7E:  MOVWF  24
0C80:  RCALL  07FE
....................    printf(lcd_putc,"     Ingrese        "); 
0C82:  MOVLW  10
0C84:  MOVWF  FF6
0C86:  MOVLW  01
0C88:  MOVWF  FF7
0C8A:  RCALL  08AA
....................    lcd_gotoxy(1,2); 
0C8C:  MOVLW  01
0C8E:  MOVWF  23
0C90:  MOVLW  02
0C92:  MOVWF  24
0C94:  RCALL  07FE
....................    printf(lcd_putc,"    Contraseña      "); 
0C96:  MOVLW  26
0C98:  MOVWF  FF6
0C9A:  MOVLW  01
0C9C:  MOVWF  FF7
0C9E:  RCALL  08AA
....................    lcd_gotoxy(1,3); 
0CA0:  MOVLW  01
0CA2:  MOVWF  23
0CA4:  MOVLW  03
0CA6:  MOVWF  24
0CA8:  RCALL  07FE
....................    printf(lcd_putc,"    CLAVE=%i%i%i%i  ",clave[0],clave[1],clave[2],clave[3]); 
0CAA:  MOVLW  3C
0CAC:  MOVWF  FF6
0CAE:  MOVLW  01
0CB0:  MOVWF  FF7
0CB2:  MOVLW  0A
0CB4:  MOVWF  1C
0CB6:  RCALL  08CA
0CB8:  MOVFF  14,1C
0CBC:  MOVLW  1F
0CBE:  MOVWF  1D
0CC0:  RCALL  0910
0CC2:  MOVFF  15,1C
0CC6:  MOVLW  1F
0CC8:  MOVWF  1D
0CCA:  RCALL  0910
0CCC:  MOVFF  16,1C
0CD0:  MOVLW  1F
0CD2:  MOVWF  1D
0CD4:  RCALL  0910
0CD6:  MOVFF  17,1C
0CDA:  MOVLW  1F
0CDC:  MOVWF  1D
0CDE:  RCALL  0910
0CE0:  MOVLW  20
0CE2:  MOVWF  22
0CE4:  RCALL  0856
0CE6:  MOVLW  20
0CE8:  MOVWF  22
0CEA:  RCALL  0856
....................     
....................        
....................    if(UP)//Si oprime hacia arriba 
0CEC:  BSF    F92.0
0CEE:  BTFSS  F80.0
0CF0:  BRA    0D12
....................       {  if(Flanco == 0)  
0CF2:  BTFSC  0E.3
0CF4:  BRA    0D10
....................             {clave[unidad-11]++;Flanco = 1;delay_ms(30);}} 
0CF6:  MOVLW  0B
0CF8:  SUBWF  08,W
0CFA:  CLRF   03
0CFC:  ADDLW  14
0CFE:  MOVWF  FE9
0D00:  MOVLW  00
0D02:  ADDWFC 03,W
0D04:  MOVWF  FEA
0D06:  INCF   FEF,F
0D08:  BSF    0E.3
0D0A:  MOVLW  1E
0D0C:  MOVWF  23
0D0E:  RCALL  06C4
....................          else 
0D10:  BRA    0D14
....................             {Flanco = 0;} 
0D12:  BCF    0E.3
....................              
....................       if(DOWN)//Si oprime hacia abajo 
0D14:  BSF    F92.1
0D16:  BTFSS  F80.1
0D18:  BRA    0D3A
....................       {  if(Flanco2 == 0)  
0D1A:  BTFSC  0E.5
0D1C:  BRA    0D38
....................             {clave[unidad-11]--;Flanco2 = 1;delay_ms(30);}} 
0D1E:  MOVLW  0B
0D20:  SUBWF  08,W
0D22:  CLRF   03
0D24:  ADDLW  14
0D26:  MOVWF  FE9
0D28:  MOVLW  00
0D2A:  ADDWFC 03,W
0D2C:  MOVWF  FEA
0D2E:  DECF   FEF,F
0D30:  BSF    0E.5
0D32:  MOVLW  1E
0D34:  MOVWF  23
0D36:  RCALL  06C4
....................          else 
0D38:  BRA    0D3C
....................             {Flanco2 = 0;} 
0D3A:  BCF    0E.5
....................     
....................       if(RIGHT)// Si Oprime Derecha 
0D3C:  BSF    F92.2
0D3E:  BTFSS  F80.2
0D40:  BRA    0D58
....................       {  if(Flanco1 == 0)  
0D42:  BTFSC  0E.4
0D44:  BRA    0D56
....................             {Flanco1 = 1;unidad++;delay_ms(30);printf(lcd_putc,"\f");}} 
0D46:  BSF    0E.4
0D48:  INCF   08,F
0D4A:  MOVLW  1E
0D4C:  MOVWF  23
0D4E:  RCALL  06C4
0D50:  MOVLW  0C
0D52:  MOVWF  22
0D54:  RCALL  0856
....................          else 
0D56:  BRA    0D5A
....................             {Flanco1 = 0;}    
0D58:  BCF    0E.4
....................              
....................        if(LEFT)// Si Oprime izquierda 
0D5A:  BSF    F92.3
0D5C:  BTFSS  F80.3
0D5E:  BRA    0D76
....................       {  if(Flanco3 == 0)  
0D60:  BTFSC  0E.6
0D62:  BRA    0D74
....................             {Flanco3 = 1;unidad--;delay_ms(30);printf(lcd_putc,"\f");}} 
0D64:  BSF    0E.6
0D66:  DECF   08,F
0D68:  MOVLW  1E
0D6A:  MOVWF  23
0D6C:  RCALL  06C4
0D6E:  MOVLW  0C
0D70:  MOVWF  22
0D72:  RCALL  0856
....................          else 
0D74:  BRA    0D78
....................             {Flanco3 = 0;}     
0D76:  BCF    0E.6
....................              
....................        if(clave[unidad-11]<0)     // Si la unidad donde se encuentra ubicado el cursor es menor que 0 pasa a 9. 
0D78:  MOVLW  0B
0D7A:  SUBWF  08,W
0D7C:  CLRF   03
0D7E:  ADDLW  14
0D80:  MOVWF  FE9
0D82:  MOVLW  00
0D84:  ADDWFC 03,W
0D86:  MOVWF  FEA
0D88:  BTFSC  FEF.7
0D8A:  BRA    0D8E
0D8C:  BRA    0DA2
....................        {clave[unidad-11]=9;} 
0D8E:  MOVLW  0B
0D90:  SUBWF  08,W
0D92:  CLRF   03
0D94:  ADDLW  14
0D96:  MOVWF  FE9
0D98:  MOVLW  00
0D9A:  ADDWFC 03,W
0D9C:  MOVWF  FEA
0D9E:  MOVLW  09
0DA0:  MOVWF  FEF
....................        if(clave[unidad-11]>9)     // Si la unidad donde se encuentra ubicado el cursor es mayor que 9 pasa a 0. 
0DA2:  MOVLW  0B
0DA4:  SUBWF  08,W
0DA6:  CLRF   03
0DA8:  ADDLW  14
0DAA:  MOVWF  FE9
0DAC:  MOVLW  00
0DAE:  ADDWFC 03,W
0DB0:  MOVWF  FEA
0DB2:  BTFSC  FEF.7
0DB4:  BRA    0DCE
0DB6:  MOVF   FEF,W
0DB8:  SUBLW  09
0DBA:  BC    0DCE
....................        {clave[unidad-11]=0;} 
0DBC:  MOVLW  0B
0DBE:  SUBWF  08,W
0DC0:  CLRF   03
0DC2:  ADDLW  14
0DC4:  MOVWF  FE9
0DC6:  MOVLW  00
0DC8:  ADDWFC 03,W
0DCA:  MOVWF  FEA
0DCC:  CLRF   FEF
....................        if(unidad<11)             // Si trata de correr mas a la izquierda de la primera unidad, deja el cursor en esa posicion. 
0DCE:  MOVF   08,W
0DD0:  SUBLW  0A
0DD2:  BNC   0DD8
....................        {unidad=11;} 
0DD4:  MOVLW  0B
0DD6:  MOVWF  08
....................        lcd_gotoxy(unidad,4);// Para mostrar cursor. 
0DD8:  MOVFF  08,23
0DDC:  MOVLW  04
0DDE:  MOVWF  24
0DE0:  RCALL  07FE
....................        lcd_putc(t[2]); 
0DE2:  MOVFF  13,22
0DE6:  RCALL  0856
....................        if(unidad>14)             // Si a Terminado de ingresar la clave, verifica si es correcta o no. 
0DE8:  MOVF   08,W
0DEA:  SUBLW  0E
0DEC:  BTFSC  FD8.0
0DEE:  BRA    0FAE
....................        { 
....................          if(clave[0]==3&&clave[1]==8&&clave[2]==9&&clave[3]==2) // Si Ingresa clave para reset general del sistema. 
0DF0:  MOVF   14,W
0DF2:  SUBLW  03
0DF4:  BNZ   0ECA
0DF6:  MOVF   15,W
0DF8:  SUBLW  08
0DFA:  BNZ   0ECA
0DFC:  MOVF   16,W
0DFE:  SUBLW  09
0E00:  BNZ   0ECA
0E02:  MOVF   17,W
0E04:  SUBLW  02
0E06:  BNZ   0ECA
....................             {write_eeprom(0,0);delay_ms(20);write_eeprom(1,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
0E08:  CLRF   FA9
0E0A:  CLRF   FA8
0E0C:  BCF    FA6.6
0E0E:  BCF    FA6.7
0E10:  BSF    FA6.2
0E12:  MOVF   FF2,W
0E14:  MOVWF  00
0E16:  BCF    FF2.7
0E18:  MOVLB  F
0E1A:  MOVLW  55
0E1C:  MOVWF  FA7
0E1E:  MOVLW  AA
0E20:  MOVWF  FA7
0E22:  BSF    FA6.1
0E24:  BTFSC  FA6.1
0E26:  BRA    0E24
0E28:  BCF    FA6.2
0E2A:  MOVF   00,W
0E2C:  IORWF  FF2,F
0E2E:  MOVLW  14
0E30:  MOVWF  23
0E32:  MOVLB  0
0E34:  RCALL  06C4
0E36:  MOVLW  01
0E38:  MOVWF  FA9
0E3A:  CLRF   FA8
0E3C:  BCF    FA6.6
0E3E:  BCF    FA6.7
0E40:  BSF    FA6.2
0E42:  MOVF   FF2,W
0E44:  MOVWF  00
0E46:  BCF    FF2.7
0E48:  MOVLB  F
0E4A:  MOVLW  55
0E4C:  MOVWF  FA7
0E4E:  MOVLW  AA
0E50:  MOVWF  FA7
0E52:  BSF    FA6.1
0E54:  BTFSC  FA6.1
0E56:  BRA    0E54
0E58:  BCF    FA6.2
0E5A:  MOVF   00,W
0E5C:  IORWF  FF2,F
0E5E:  MOVLW  14
0E60:  MOVWF  23
0E62:  MOVLB  0
0E64:  RCALL  06C4
....................              write_eeprom(2,0);delay_ms(20);write_eeprom(3,0);delay_ms(20); 
0E66:  MOVLW  02
0E68:  MOVWF  FA9
0E6A:  CLRF   FA8
0E6C:  BCF    FA6.6
0E6E:  BCF    FA6.7
0E70:  BSF    FA6.2
0E72:  MOVF   FF2,W
0E74:  MOVWF  00
0E76:  BCF    FF2.7
0E78:  MOVLB  F
0E7A:  MOVLW  55
0E7C:  MOVWF  FA7
0E7E:  MOVLW  AA
0E80:  MOVWF  FA7
0E82:  BSF    FA6.1
0E84:  BTFSC  FA6.1
0E86:  BRA    0E84
0E88:  BCF    FA6.2
0E8A:  MOVF   00,W
0E8C:  IORWF  FF2,F
0E8E:  MOVLW  14
0E90:  MOVWF  23
0E92:  MOVLB  0
0E94:  RCALL  06C4
0E96:  MOVLW  03
0E98:  MOVWF  FA9
0E9A:  CLRF   FA8
0E9C:  BCF    FA6.6
0E9E:  BCF    FA6.7
0EA0:  BSF    FA6.2
0EA2:  MOVF   FF2,W
0EA4:  MOVWF  00
0EA6:  BCF    FF2.7
0EA8:  MOVLB  F
0EAA:  MOVLW  55
0EAC:  MOVWF  FA7
0EAE:  MOVLW  AA
0EB0:  MOVWF  FA7
0EB2:  BSF    FA6.1
0EB4:  BTFSC  FA6.1
0EB6:  BRA    0EB4
0EB8:  BCF    FA6.2
0EBA:  MOVF   00,W
0EBC:  IORWF  FF2,F
0EBE:  MOVLW  14
0EC0:  MOVWF  23
0EC2:  MOVLB  0
0EC4:  CALL   06C4
....................              reset_cpu();} 
0EC8:  RESET
....................              
....................          if(clave[0]==contrasena[0]&&clave[1]==contrasena[1]&&clave[2]==contrasena[2]&&clave[3]==contrasena[3]) // Si las claves coinciden pasa a Menu Principal. 
0ECA:  MOVF   18,W
0ECC:  SUBWF  14,W
0ECE:  BNZ   0F50
0ED0:  MOVF   19,W
0ED2:  SUBWF  15,W
0ED4:  BNZ   0F50
0ED6:  MOVF   1A,W
0ED8:  SUBWF  16,W
0EDA:  BNZ   0F50
0EDC:  MOVF   1B,W
0EDE:  SUBWF  17,W
0EE0:  BNZ   0F50
....................             {lcd_gotoxy(1,1); 
0EE2:  MOVLW  01
0EE4:  MOVWF  23
0EE6:  MOVWF  24
0EE8:  RCALL  07FE
....................             printf(lcd_putc,"                   "); 
0EEA:  MOVLW  52
0EEC:  MOVWF  FF6
0EEE:  MOVLW  01
0EF0:  MOVWF  FF7
0EF2:  RCALL  08AA
....................             lcd_gotoxy(1,2); 
0EF4:  MOVLW  01
0EF6:  MOVWF  23
0EF8:  MOVLW  02
0EFA:  MOVWF  24
0EFC:  RCALL  07FE
....................             printf(lcd_putc,"     Contraseña    "); 
0EFE:  MOVLW  66
0F00:  MOVWF  FF6
0F02:  MOVLW  01
0F04:  MOVWF  FF7
0F06:  RCALL  08AA
....................             lcd_gotoxy(1,3); 
0F08:  MOVLW  01
0F0A:  MOVWF  23
0F0C:  MOVLW  03
0F0E:  MOVWF  24
0F10:  RCALL  07FE
....................             printf(lcd_putc,"      Correcta     "); 
0F12:  MOVLW  7A
0F14:  MOVWF  FF6
0F16:  MOVLW  01
0F18:  MOVWF  FF7
0F1A:  RCALL  08AA
....................             lcd_gotoxy(1,4); 
0F1C:  MOVLW  01
0F1E:  MOVWF  23
0F20:  MOVLW  04
0F22:  MOVWF  24
0F24:  RCALL  07FE
....................             printf(lcd_putc,"                   "); 
0F26:  MOVLW  8E
0F28:  MOVWF  FF6
0F2A:  MOVLW  01
0F2C:  MOVWF  FF7
0F2E:  RCALL  08AA
....................             delay_ms(500);Menu=1;unidad=11;printf(lcd_putc,"\f");} 
0F30:  MOVLW  02
0F32:  MOVWF  1C
0F34:  MOVLW  FA
0F36:  MOVWF  23
0F38:  CALL   06C4
0F3C:  DECFSZ 1C,F
0F3E:  BRA    0F34
0F40:  MOVLW  01
0F42:  MOVWF  05
0F44:  MOVLW  0B
0F46:  MOVWF  08
0F48:  MOVLW  0C
0F4A:  MOVWF  22
0F4C:  RCALL  0856
....................          else                                         // Si la clave no coincide vuelve a mostrar el menu para ingresar la clave. 
0F4E:  BRA    0FAE
....................          {lcd_gotoxy(1,1); 
0F50:  MOVLW  01
0F52:  MOVWF  23
0F54:  MOVWF  24
0F56:  RCALL  07FE
....................             printf(lcd_putc,""); 
....................             lcd_gotoxy(1,2); 
0F58:  MOVLW  01
0F5A:  MOVWF  23
0F5C:  MOVLW  02
0F5E:  MOVWF  24
0F60:  RCALL  07FE
....................             printf(lcd_putc,"     Contraseña    "); 
0F62:  MOVLW  A2
0F64:  MOVWF  FF6
0F66:  MOVLW  01
0F68:  MOVWF  FF7
0F6A:  RCALL  08AA
....................             lcd_gotoxy(1,3); 
0F6C:  MOVLW  01
0F6E:  MOVWF  23
0F70:  MOVLW  03
0F72:  MOVWF  24
0F74:  RCALL  07FE
....................             printf(lcd_putc,"     Incorrecta    "); 
0F76:  MOVLW  B6
0F78:  MOVWF  FF6
0F7A:  MOVLW  01
0F7C:  MOVWF  FF7
0F7E:  RCALL  08AA
....................             lcd_gotoxy(1,4); 
0F80:  MOVLW  01
0F82:  MOVWF  23
0F84:  MOVLW  04
0F86:  MOVWF  24
0F88:  RCALL  07FE
....................             printf(lcd_putc,"                   "); 
0F8A:  MOVLW  CA
0F8C:  MOVWF  FF6
0F8E:  MOVLW  01
0F90:  MOVWF  FF7
0F92:  RCALL  08AA
....................             delay_ms(500);unidad=11;printf(lcd_putc,"\f");} 
0F94:  MOVLW  02
0F96:  MOVWF  1C
0F98:  MOVLW  FA
0F9A:  MOVWF  23
0F9C:  CALL   06C4
0FA0:  DECFSZ 1C,F
0FA2:  BRA    0F98
0FA4:  MOVLW  0B
0FA6:  MOVWF  08
0FA8:  MOVLW  0C
0FAA:  MOVWF  22
0FAC:  RCALL  0856
....................        } 
....................     
....................        if(unidad>11&&unidad<14) 
0FAE:  MOVF   08,W
0FB0:  SUBLW  0B
0FB2:  BC    0FCE
0FB4:  MOVF   08,W
0FB6:  SUBLW  0D
0FB8:  BNC   0FCE
....................           { lcd_gotoxy(unidad-1,4);// Para mostrar cursor. 
0FBA:  MOVLW  01
0FBC:  SUBWF  08,W
0FBE:  MOVWF  1C
0FC0:  MOVWF  23
0FC2:  MOVLW  04
0FC4:  MOVWF  24
0FC6:  RCALL  07FE
....................             lcd_putc(t[1]); 
0FC8:  MOVFF  12,22
0FCC:  RCALL  0856
....................           } 
....................  
....................    } 
.................... //----------------Fin-Menu0---------------------------------------------------------------    
....................  
.................... //------------Menu1------------------------------------------------------------------    
....................    if(Menu == 1){ // Menu de seleccion de lo que desea encender 
0FCE:  DECFSZ 05,W
0FD0:  BRA    118C
....................    lcd_gotoxy(1,1); 
0FD2:  MOVLW  01
0FD4:  MOVWF  23
0FD6:  MOVWF  24
0FD8:  RCALL  07FE
....................    printf(lcd_putc,"---MENU PRINCIPAL---"); 
0FDA:  MOVLW  DE
0FDC:  MOVWF  FF6
0FDE:  MOVLW  01
0FE0:  MOVWF  FF7
0FE2:  RCALL  08AA
....................       if(paso<0) 
0FE4:  BTFSC  0F.7
0FE6:  BRA    0FEA
0FE8:  BRA    0FEC
....................         {paso=0;} 
0FEA:  CLRF   0F
....................          
....................    if(UP)//Si oprime hacia arriba 
0FEC:  BSF    F92.0
0FEE:  BTFSS  F80.0
0FF0:  BRA    100C
....................       {  if(Flanco == 0)  
0FF2:  BTFSC  0E.3
0FF4:  BRA    100A
....................             {Flecha2--;Flecha--;Flecha1=Flecha+1;Flanco = 1;delay_ms(30);}} 
0FF6:  DECF   0B,F
0FF8:  DECF   09,F
0FFA:  MOVLW  01
0FFC:  ADDWF  09,W
0FFE:  MOVWF  0A
1000:  BSF    0E.3
1002:  MOVLW  1E
1004:  MOVWF  23
1006:  CALL   06C4
....................          else 
100A:  BRA    100E
....................             {Flanco = 0;} 
100C:  BCF    0E.3
....................              
....................       if(DOWN)//Si oprime hacia abajo 
100E:  BSF    F92.1
1010:  BTFSS  F80.1
1012:  BRA    102E
....................       {  if(Flanco2 == 0)  
1014:  BTFSC  0E.5
1016:  BRA    102C
....................             {Flecha2++;Flecha++;Flecha1=Flecha-1;Flanco2 = 1;delay_ms(30);}} 
1018:  INCF   0B,F
101A:  INCF   09,F
101C:  MOVLW  01
101E:  SUBWF  09,W
1020:  MOVWF  0A
1022:  BSF    0E.5
1024:  MOVLW  1E
1026:  MOVWF  23
1028:  CALL   06C4
....................          else 
102C:  BRA    1030
....................             {Flanco2 = 0;} 
102E:  BCF    0E.5
....................     
....................          
....................         if(Flecha2>nMenuH) 
1030:  MOVF   0B,W
1032:  SUBWF  0D,W
1034:  BC    1046
....................         {paso++;nMenuH=Flecha2;nMenuL=nMenuH-2;Flecha=4;} 
1036:  INCF   0F,F
1038:  MOVFF  0B,0D
103C:  MOVLW  02
103E:  SUBWF  0D,W
1040:  MOVWF  0C
1042:  MOVLW  04
1044:  MOVWF  09
....................          
....................         if(Flecha2<nMenuL) 
1046:  MOVF   0C,W
1048:  SUBWF  0B,W
104A:  BC    105C
....................         {paso--;nMenuL=Flecha2;nMenuH=nMenuL+2;Flecha=2;} 
104C:  DECF   0F,F
104E:  MOVFF  0B,0C
1052:  MOVLW  02
1054:  ADDWF  0C,W
1056:  MOVWF  0D
1058:  MOVLW  02
105A:  MOVWF  09
....................          
....................         if(Flecha2>n_opcionH) 
105C:  MOVF   0B,W
105E:  SUBWF  06,W
1060:  BC    1074
....................         {Flecha2=n_opcionL;Flecha=2;paso=0;nMenuL=Flecha2;nMenuH=nMenuL+2;} 
1062:  MOVFF  07,0B
1066:  MOVLW  02
1068:  MOVWF  09
106A:  CLRF   0F
106C:  MOVFF  0B,0C
1070:  ADDWF  0C,W
1072:  MOVWF  0D
....................          
....................         if(Flecha2<n_opcionL) 
1074:  MOVF   07,W
1076:  SUBWF  0B,W
1078:  BC    108E
....................         {Flecha2=n_opcionH;Flecha=4;paso=2;nMenuH=Flecha2;nMenuL=nMenuH-2;}                
107A:  MOVFF  06,0B
107E:  MOVLW  04
1080:  MOVWF  09
1082:  MOVLW  02
1084:  MOVWF  0F
1086:  MOVFF  0B,0D
108A:  SUBWF  0D,W
108C:  MOVWF  0C
....................          
....................         mensajes(1+paso,2); 
108E:  MOVLW  01
1090:  ADDWF  0F,W
1092:  MOVWF  1C
1094:  MOVWF  1D
1096:  MOVLW  02
1098:  MOVWF  1E
109A:  RCALL  09D8
....................         mensajes(2+paso,3); 
109C:  MOVLW  02
109E:  ADDWF  0F,W
10A0:  MOVWF  1C
10A2:  MOVWF  1D
10A4:  MOVLW  03
10A6:  MOVWF  1E
10A8:  RCALL  09D8
....................         mensajes(3+paso,4); 
10AA:  MOVLW  03
10AC:  ADDWF  0F,W
10AE:  MOVWF  1C
10B0:  MOVWF  1D
10B2:  MOVLW  04
10B4:  MOVWF  1E
10B6:  RCALL  09D8
....................  
....................         lcd_gotoxy(1,Flecha);// Para mostrar la flecha de seleccion 
10B8:  MOVLW  01
10BA:  MOVWF  23
10BC:  MOVFF  09,24
10C0:  CALL   07FE
....................         lcd_putc(t[0]); 
10C4:  MOVFF  11,22
10C8:  CALL   0856
....................  
....................         if(Flecha==2) 
10CC:  MOVF   09,W
10CE:  SUBLW  02
10D0:  BNZ   10FA
....................           {lcd_gotoxy(1,4);// Para mostrar la flecha de seleccion 
10D2:  MOVLW  01
10D4:  MOVWF  23
10D6:  MOVLW  04
10D8:  MOVWF  24
10DA:  CALL   07FE
....................             lcd_putc(t[1]); 
10DE:  MOVFF  12,22
10E2:  CALL   0856
....................             lcd_gotoxy(1,3);// Para mostrar la flecha de seleccion 
10E6:  MOVLW  01
10E8:  MOVWF  23
10EA:  MOVLW  03
10EC:  MOVWF  24
10EE:  CALL   07FE
....................             lcd_putc(t[1]); 
10F2:  MOVFF  12,22
10F6:  CALL   0856
....................           } 
....................          
....................         if(Flecha==4) 
10FA:  MOVF   09,W
10FC:  SUBLW  04
10FE:  BNZ   1128
....................           {lcd_gotoxy(1,2);// Para mostrar la flecha de seleccion 
1100:  MOVLW  01
1102:  MOVWF  23
1104:  MOVLW  02
1106:  MOVWF  24
1108:  CALL   07FE
....................             lcd_putc(t[1]); 
110C:  MOVFF  12,22
1110:  CALL   0856
....................             lcd_gotoxy(1,3);// Para mostrar la flecha de seleccion 
1114:  MOVLW  01
1116:  MOVWF  23
1118:  MOVLW  03
111A:  MOVWF  24
111C:  CALL   07FE
....................             lcd_putc(t[1]); 
1120:  MOVFF  12,22
1124:  CALL   0856
....................           } 
....................          
....................         if(Flecha==3) 
1128:  MOVF   09,W
112A:  SUBLW  03
112C:  BNZ   1156
....................           { lcd_gotoxy(1,4);// Para mostrar la flecha de seleccion 
112E:  MOVLW  01
1130:  MOVWF  23
1132:  MOVLW  04
1134:  MOVWF  24
1136:  CALL   07FE
....................             lcd_putc(t[1]); 
113A:  MOVFF  12,22
113E:  CALL   0856
....................             lcd_gotoxy(1,2);// Para mostrar la flecha de seleccion 
1142:  MOVLW  01
1144:  MOVWF  23
1146:  MOVLW  02
1148:  MOVWF  24
114A:  CALL   07FE
....................             lcd_putc(t[1]); 
114E:  MOVFF  12,22
1152:  CALL   0856
....................           } 
....................  
....................         if(RIGHT)// Si oprime derecha 
1156:  BSF    F92.2
1158:  BTFSS  F80.2
115A:  BRA    118A
....................       {  if(Flanco1 == 0)  
115C:  BTFSC  0E.4
115E:  BRA    1188
....................             {Flanco1 = 1;Menu=Flecha2;Flecha=3;delay_ms(30);printf(lcd_putc,"\f"); 
1160:  BSF    0E.4
1162:  MOVFF  0B,05
1166:  MOVLW  03
1168:  MOVWF  09
116A:  MOVLW  1E
116C:  MOVWF  23
116E:  CALL   06C4
1172:  MOVLW  0C
1174:  MOVWF  22
1176:  CALL   0856
....................             if(Menu==6) 
117A:  MOVF   05,W
117C:  SUBLW  06
117E:  BNZ   1188
....................             {clave[0]=0;clave[1]=0;clave[2]=0;clave[3]=0;}}} 
1180:  CLRF   14
1182:  CLRF   15
1184:  CLRF   16
1186:  CLRF   17
....................          else 
1188:  BRA    118C
....................             {Flanco1 = 0;}    
118A:  BCF    0E.4
....................  
....................    } 
.................... //----------------Fin-Menu1---------------------------------------------------------------       
....................     
.................... //----------------Menu2--------------------------------------------------------------- 
....................    if(Menu == 2){ // Menu de seleccion de Estado de Luz UV 
118C:  MOVF   05,W
118E:  SUBLW  02
1190:  BTFSS  FD8.2
1192:  BRA    12F0
....................              
....................          Menu=1;paso=0; 
1194:  MOVLW  01
1196:  MOVWF  05
1198:  CLRF   0F
....................              
....................          if(estadofl==0)    
119A:  BTFSC  0E.1
119C:  BRA    1270
....................          {  estadouv=!estadouv; 
119E:  BTG    0E.0
....................             if(estadouv==1) 
11A0:  BTFSS  0E.0
11A2:  BRA    1208
....................             {estadouv=1;Luz_UV_on; 
11A4:  BSF    0E.0
11A6:  BSF    F8C.0
11A8:  BCF    F95.0
....................                lcd_gotoxy(1,1); 
11AA:  MOVLW  01
11AC:  MOVWF  23
11AE:  MOVWF  24
11B0:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
11B4:  MOVLW  F4
11B6:  MOVWF  FF6
11B8:  MOVLW  01
11BA:  MOVWF  FF7
11BC:  CALL   08AA
....................                lcd_gotoxy(1,2); 
11C0:  MOVLW  01
11C2:  MOVWF  23
11C4:  MOVLW  02
11C6:  MOVWF  24
11C8:  CALL   07FE
....................                printf(lcd_putc,"      Encendio      "); 
11CC:  MOVLW  0A
11CE:  MOVWF  FF6
11D0:  MOVLW  02
11D2:  MOVWF  FF7
11D4:  CALL   08AA
....................                lcd_gotoxy(1,3); 
11D8:  MOVLW  01
11DA:  MOVWF  23
11DC:  MOVLW  03
11DE:  MOVWF  24
11E0:  CALL   07FE
....................                printf(lcd_putc,"       Luz UV       "); 
11E4:  MOVLW  20
11E6:  MOVWF  FF6
11E8:  MOVLW  02
11EA:  MOVWF  FF7
11EC:  CALL   08AA
....................                lcd_gotoxy(1,4); 
11F0:  MOVLW  01
11F2:  MOVWF  23
11F4:  MOVLW  04
11F6:  MOVWF  24
11F8:  CALL   07FE
....................                printf(lcd_putc,"                    ");} 
11FC:  MOVLW  36
11FE:  MOVWF  FF6
1200:  MOVLW  02
1202:  MOVWF  FF7
1204:  CALL   08AA
....................                 
....................             if(estadouv==0) 
1208:  BTFSC  0E.0
120A:  BRA    1270
....................             {estadouv=0;Luz_UV_off; 
120C:  BCF    0E.0
120E:  BCF    F8C.0
1210:  BCF    F95.0
....................                lcd_gotoxy(1,1); 
1212:  MOVLW  01
1214:  MOVWF  23
1216:  MOVWF  24
1218:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
121C:  MOVLW  4C
121E:  MOVWF  FF6
1220:  MOVLW  02
1222:  MOVWF  FF7
1224:  CALL   08AA
....................                lcd_gotoxy(1,2); 
1228:  MOVLW  01
122A:  MOVWF  23
122C:  MOVLW  02
122E:  MOVWF  24
1230:  CALL   07FE
....................                printf(lcd_putc,"       Apago        "); 
1234:  MOVLW  62
1236:  MOVWF  FF6
1238:  MOVLW  02
123A:  MOVWF  FF7
123C:  CALL   08AA
....................                lcd_gotoxy(1,3); 
1240:  MOVLW  01
1242:  MOVWF  23
1244:  MOVLW  03
1246:  MOVWF  24
1248:  CALL   07FE
....................                printf(lcd_putc,"      Luz  UV       "); 
124C:  MOVLW  78
124E:  MOVWF  FF6
1250:  MOVLW  02
1252:  MOVWF  FF7
1254:  CALL   08AA
....................                lcd_gotoxy(1,4); 
1258:  MOVLW  01
125A:  MOVWF  23
125C:  MOVLW  04
125E:  MOVWF  24
1260:  CALL   07FE
....................                printf(lcd_putc,"                    ");} 
1264:  MOVLW  8E
1266:  MOVWF  FF6
1268:  MOVLW  02
126A:  MOVWF  FF7
126C:  CALL   08AA
....................             }    
....................              
....................          if(estadofl==1)    
1270:  BTFSS  0E.1
1272:  BRA    12D2
....................             { 
....................                lcd_gotoxy(1,1); 
1274:  MOVLW  01
1276:  MOVWF  23
1278:  MOVWF  24
127A:  CALL   07FE
....................                printf(lcd_putc,"!! Para encender    "); 
127E:  MOVLW  A4
1280:  MOVWF  FF6
1282:  MOVLW  02
1284:  MOVWF  FF7
1286:  CALL   08AA
....................                lcd_gotoxy(1,2); 
128A:  MOVLW  01
128C:  MOVWF  23
128E:  MOVLW  02
1290:  MOVWF  24
1292:  CALL   07FE
....................                printf(lcd_putc,"     la Luz UV      "); 
1296:  MOVLW  BA
1298:  MOVWF  FF6
129A:  MOVLW  02
129C:  MOVWF  FF7
129E:  CALL   08AA
....................                lcd_gotoxy(1,3); 
12A2:  MOVLW  01
12A4:  MOVWF  23
12A6:  MOVLW  03
12A8:  MOVWF  24
12AA:  CALL   07FE
....................                printf(lcd_putc,"  apague Luz Blanca "); 
12AE:  MOVLW  D0
12B0:  MOVWF  FF6
12B2:  MOVLW  02
12B4:  MOVWF  FF7
12B6:  CALL   08AA
....................                lcd_gotoxy(1,4); 
12BA:  MOVLW  01
12BC:  MOVWF  23
12BE:  MOVLW  04
12C0:  MOVWF  24
12C2:  CALL   07FE
....................                printf(lcd_putc,"      Primero!!     "); 
12C6:  MOVLW  E6
12C8:  MOVWF  FF6
12CA:  MOVLW  02
12CC:  MOVWF  FF7
12CE:  CALL   08AA
....................             }    
....................               
....................             delay_ms(500);Flecha=2;Flecha2=2;printf(lcd_putc,"\f");       
12D2:  MOVLW  02
12D4:  MOVWF  1C
12D6:  MOVLW  FA
12D8:  MOVWF  23
12DA:  CALL   06C4
12DE:  DECFSZ 1C,F
12E0:  BRA    12D6
12E2:  MOVLW  02
12E4:  MOVWF  09
12E6:  MOVWF  0B
12E8:  MOVLW  0C
12EA:  MOVWF  22
12EC:  CALL   0856
....................    } 
.................... //----------------Fin-Menu2--------------------------------------------------------------    
....................     
.................... //----------------Menu3--------------------------------------------------------------- 
....................    if(Menu == 3){ // Menu de seleccion de Estado de Luz Blanca 
12F0:  MOVF   05,W
12F2:  SUBLW  03
12F4:  BTFSS  FD8.2
12F6:  BRA    1454
....................              
....................             Menu=1; paso=0; 
12F8:  MOVLW  01
12FA:  MOVWF  05
12FC:  CLRF   0F
....................         if(estadouv==0) 
12FE:  BTFSC  0E.0
1300:  BRA    13D4
....................         {   estadofl=!estadofl; 
1302:  BTG    0E.1
....................             if(estadofl==1) 
1304:  BTFSS  0E.1
1306:  BRA    136C
....................             {estadofl=1;Luz_Blanca_on; 
1308:  BSF    0E.1
130A:  BSF    F8C.1
130C:  BCF    F95.1
....................                lcd_gotoxy(1,1); 
130E:  MOVLW  01
1310:  MOVWF  23
1312:  MOVWF  24
1314:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
1318:  MOVLW  FC
131A:  MOVWF  FF6
131C:  MOVLW  02
131E:  MOVWF  FF7
1320:  CALL   08AA
....................                lcd_gotoxy(1,2); 
1324:  MOVLW  01
1326:  MOVWF  23
1328:  MOVLW  02
132A:  MOVWF  24
132C:  CALL   07FE
....................                printf(lcd_putc,"      Encendio      "); 
1330:  MOVLW  12
1332:  MOVWF  FF6
1334:  MOVLW  03
1336:  MOVWF  FF7
1338:  CALL   08AA
....................                lcd_gotoxy(1,3); 
133C:  MOVLW  01
133E:  MOVWF  23
1340:  MOVLW  03
1342:  MOVWF  24
1344:  CALL   07FE
....................                printf(lcd_putc,"     Luz Blanca     "); 
1348:  MOVLW  28
134A:  MOVWF  FF6
134C:  MOVLW  03
134E:  MOVWF  FF7
1350:  CALL   08AA
....................                lcd_gotoxy(1,4); 
1354:  MOVLW  01
1356:  MOVWF  23
1358:  MOVLW  04
135A:  MOVWF  24
135C:  CALL   07FE
....................                printf(lcd_putc,"                    ");} 
1360:  MOVLW  3E
1362:  MOVWF  FF6
1364:  MOVLW  03
1366:  MOVWF  FF7
1368:  CALL   08AA
....................             
....................             if(estadofl==0) 
136C:  BTFSC  0E.1
136E:  BRA    13D4
....................             {estadofl=0;Luz_Blanca_off; 
1370:  BCF    0E.1
1372:  BCF    F8C.1
1374:  BCF    F95.1
....................                lcd_gotoxy(1,1); 
1376:  MOVLW  01
1378:  MOVWF  23
137A:  MOVWF  24
137C:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
1380:  MOVLW  54
1382:  MOVWF  FF6
1384:  MOVLW  03
1386:  MOVWF  FF7
1388:  CALL   08AA
....................                lcd_gotoxy(1,2); 
138C:  MOVLW  01
138E:  MOVWF  23
1390:  MOVLW  02
1392:  MOVWF  24
1394:  CALL   07FE
....................                printf(lcd_putc,"       Apago        "); 
1398:  MOVLW  6A
139A:  MOVWF  FF6
139C:  MOVLW  03
139E:  MOVWF  FF7
13A0:  CALL   08AA
....................                lcd_gotoxy(1,3); 
13A4:  MOVLW  01
13A6:  MOVWF  23
13A8:  MOVLW  03
13AA:  MOVWF  24
13AC:  CALL   07FE
....................                printf(lcd_putc,"    Luz  Blanca     "); 
13B0:  MOVLW  80
13B2:  MOVWF  FF6
13B4:  MOVLW  03
13B6:  MOVWF  FF7
13B8:  CALL   08AA
....................                lcd_gotoxy(1,4); 
13BC:  MOVLW  01
13BE:  MOVWF  23
13C0:  MOVLW  04
13C2:  MOVWF  24
13C4:  CALL   07FE
....................                printf(lcd_putc,"                    ");} 
13C8:  MOVLW  96
13CA:  MOVWF  FF6
13CC:  MOVLW  03
13CE:  MOVWF  FF7
13D0:  CALL   08AA
....................         }     
....................          
....................         if(estadouv==1)    
13D4:  BTFSS  0E.0
13D6:  BRA    1436
....................             { 
....................                lcd_gotoxy(1,1); 
13D8:  MOVLW  01
13DA:  MOVWF  23
13DC:  MOVWF  24
13DE:  CALL   07FE
....................                printf(lcd_putc,"!! Para encender    "); 
13E2:  MOVLW  AC
13E4:  MOVWF  FF6
13E6:  MOVLW  03
13E8:  MOVWF  FF7
13EA:  CALL   08AA
....................                lcd_gotoxy(1,2); 
13EE:  MOVLW  01
13F0:  MOVWF  23
13F2:  MOVLW  02
13F4:  MOVWF  24
13F6:  CALL   07FE
....................                printf(lcd_putc,"   la Luz Blanca    "); 
13FA:  MOVLW  C2
13FC:  MOVWF  FF6
13FE:  MOVLW  03
1400:  MOVWF  FF7
1402:  CALL   08AA
....................                lcd_gotoxy(1,3); 
1406:  MOVLW  01
1408:  MOVWF  23
140A:  MOVLW  03
140C:  MOVWF  24
140E:  CALL   07FE
....................                printf(lcd_putc,"  apague la Luz UV  "); 
1412:  MOVLW  D8
1414:  MOVWF  FF6
1416:  MOVLW  03
1418:  MOVWF  FF7
141A:  CALL   08AA
....................                lcd_gotoxy(1,4); 
141E:  MOVLW  01
1420:  MOVWF  23
1422:  MOVLW  04
1424:  MOVWF  24
1426:  CALL   07FE
....................                printf(lcd_putc,"      Primero!!     "); 
142A:  MOVLW  EE
142C:  MOVWF  FF6
142E:  MOVLW  03
1430:  MOVWF  FF7
1432:  CALL   08AA
....................             }    
....................               
....................             delay_ms(500);Flecha=2;Flecha2=2;printf(lcd_putc,"\f");            
1436:  MOVLW  02
1438:  MOVWF  1C
143A:  MOVLW  FA
143C:  MOVWF  23
143E:  CALL   06C4
1442:  DECFSZ 1C,F
1444:  BRA    143A
1446:  MOVLW  02
1448:  MOVWF  09
144A:  MOVWF  0B
144C:  MOVLW  0C
144E:  MOVWF  22
1450:  CALL   0856
....................    }       
.................... //----------------Fin-Menu3--------------------------------------------------------------- 
....................  
.................... //----------------Menu4--------------------------------------------------------------- 
....................    if(Menu == 4){ // Menu de seleccion de estado de Motor Ventilador 
1454:  MOVF   05,W
1456:  SUBLW  04
1458:  BTFSS  FD8.2
145A:  BRA    1572
....................                 
....................             estadomv=!estadomv;Flanco1 = 1;Menu=1; paso=0; 
145C:  BTG    0E.2
145E:  BSF    0E.4
1460:  MOVLW  01
1462:  MOVWF  05
1464:  CLRF   0F
....................                        
....................             if(estadomv==1) 
1466:  BTFSS  0E.2
1468:  BRA    14EA
....................             {estadomv=1;velocidades(read_eeprom(5));  
146A:  BSF    0E.2
146C:  MOVFF  FF2,1C
1470:  BCF    FF2.7
1472:  MOVLW  05
1474:  MOVWF  FA9
1476:  BCF    FA6.6
1478:  BCF    FA6.7
147A:  BSF    FA6.0
147C:  MOVF   FA8,W
147E:  BTFSC  1C.7
1480:  BSF    FF2.7
1482:  MOVWF  1D
1484:  MOVFF  1D,1E
1488:  CALL   0AAE
....................                lcd_gotoxy(1,1); 
148C:  MOVLW  01
148E:  MOVWF  23
1490:  MOVWF  24
1492:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
1496:  MOVLW  04
1498:  MOVWF  FF6
149A:  MOVLW  04
149C:  MOVWF  FF7
149E:  CALL   08AA
....................                lcd_gotoxy(1,2); 
14A2:  MOVLW  01
14A4:  MOVWF  23
14A6:  MOVLW  02
14A8:  MOVWF  24
14AA:  CALL   07FE
....................                printf(lcd_putc,"      Encendio      "); 
14AE:  MOVLW  1A
14B0:  MOVWF  FF6
14B2:  MOVLW  04
14B4:  MOVWF  FF7
14B6:  CALL   08AA
....................                lcd_gotoxy(1,3); 
14BA:  MOVLW  01
14BC:  MOVWF  23
14BE:  MOVLW  03
14C0:  MOVWF  24
14C2:  CALL   07FE
....................                printf(lcd_putc,"     Ventilador     "); 
14C6:  MOVLW  30
14C8:  MOVWF  FF6
14CA:  MOVLW  04
14CC:  MOVWF  FF7
14CE:  CALL   08AA
....................                lcd_gotoxy(1,4); 
14D2:  MOVLW  01
14D4:  MOVWF  23
14D6:  MOVLW  04
14D8:  MOVWF  24
14DA:  CALL   07FE
....................                printf(lcd_putc,"                    ");} 
14DE:  MOVLW  46
14E0:  MOVWF  FF6
14E2:  MOVLW  04
14E4:  MOVWF  FF7
14E6:  CALL   08AA
....................                 
....................             if(estadomv==0) 
14EA:  BTFSC  0E.2
14EC:  BRA    1554
....................             {estadomv=0;velocidades(0);  
14EE:  BCF    0E.2
14F0:  CLRF   1E
14F2:  CALL   0AAE
....................                lcd_gotoxy(1,1); 
14F6:  MOVLW  01
14F8:  MOVWF  23
14FA:  MOVWF  24
14FC:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
1500:  MOVLW  5C
1502:  MOVWF  FF6
1504:  MOVLW  04
1506:  MOVWF  FF7
1508:  CALL   08AA
....................                lcd_gotoxy(1,2); 
150C:  MOVLW  01
150E:  MOVWF  23
1510:  MOVLW  02
1512:  MOVWF  24
1514:  CALL   07FE
....................                printf(lcd_putc,"       Apago        "); 
1518:  MOVLW  72
151A:  MOVWF  FF6
151C:  MOVLW  04
151E:  MOVWF  FF7
1520:  CALL   08AA
....................                lcd_gotoxy(1,3); 
1524:  MOVLW  01
1526:  MOVWF  23
1528:  MOVLW  03
152A:  MOVWF  24
152C:  CALL   07FE
....................                printf(lcd_putc,"     Ventilador     "); 
1530:  MOVLW  88
1532:  MOVWF  FF6
1534:  MOVLW  04
1536:  MOVWF  FF7
1538:  CALL   08AA
....................                lcd_gotoxy(1,4); 
153C:  MOVLW  01
153E:  MOVWF  23
1540:  MOVLW  04
1542:  MOVWF  24
1544:  CALL   07FE
....................                printf(lcd_putc,"                    ");} 
1548:  MOVLW  9E
154A:  MOVWF  FF6
154C:  MOVLW  04
154E:  MOVWF  FF7
1550:  CALL   08AA
....................               
....................             delay_ms(500);Flecha=2;Flecha2=2;printf(lcd_putc,"\f"); 
1554:  MOVLW  02
1556:  MOVWF  1C
1558:  MOVLW  FA
155A:  MOVWF  23
155C:  CALL   06C4
1560:  DECFSZ 1C,F
1562:  BRA    1558
1564:  MOVLW  02
1566:  MOVWF  09
1568:  MOVWF  0B
156A:  MOVLW  0C
156C:  MOVWF  22
156E:  CALL   0856
....................    }       
.................... //----------------Fin-Menu4--------------------------------------------------------------- 
....................  
.................... //----------------Menu5--------------------------------------------------------------- 
....................    if(Menu == 5){ // Menu de seleccion de estado de Motor Ventilador 
1572:  MOVF   05,W
1574:  SUBLW  05
1576:  BTFSS  FD8.2
1578:  BRA    1736
....................    lcd_gotoxy(1,1); 
157A:  MOVLW  01
157C:  MOVWF  23
157E:  MOVWF  24
1580:  CALL   07FE
....................    printf(lcd_putc,"Seleccione Velocidad"); 
1584:  MOVLW  B4
1586:  MOVWF  FF6
1588:  MOVLW  04
158A:  MOVWF  FF7
158C:  CALL   08AA
....................    lcd_gotoxy(1,2); 
1590:  MOVLW  01
1592:  MOVWF  23
1594:  MOVLW  02
1596:  MOVWF  24
1598:  CALL   07FE
....................    printf(lcd_putc,"    de Ventilador   "); 
159C:  MOVLW  CA
159E:  MOVWF  FF6
15A0:  MOVLW  04
15A2:  MOVWF  FF7
15A4:  CALL   08AA
....................    lcd_gotoxy(8,3); 
15A8:  MOVLW  08
15AA:  MOVWF  23
15AC:  MOVLW  03
15AE:  MOVWF  24
15B0:  CALL   07FE
....................    printf(lcd_putc,"%i",Velocidad); 
15B4:  MOVFF  10,1C
15B8:  MOVLW  1F
15BA:  MOVWF  1D
15BC:  CALL   0910
....................  
....................    if(UP)//Si oprime hacia arriba 
15C0:  BSF    F92.0
15C2:  BTFSS  F80.0
15C4:  BRA    15D8
....................       {  if(Flanco == 0)  
15C6:  BTFSC  0E.3
15C8:  BRA    15D6
....................             {Velocidad++;Flanco = 1;delay_ms(30);}} 
15CA:  INCF   10,F
15CC:  BSF    0E.3
15CE:  MOVLW  1E
15D0:  MOVWF  23
15D2:  CALL   06C4
....................          else 
15D6:  BRA    15DA
....................             {Flanco = 0;} 
15D8:  BCF    0E.3
....................              
....................       if(DOWN)//Si oprime hacia abajo 
15DA:  BSF    F92.1
15DC:  BTFSS  F80.1
15DE:  BRA    15F2
....................       {  if(Flanco2 == 0)  
15E0:  BTFSC  0E.5
15E2:  BRA    15F0
....................             {Velocidad--;Flanco2 = 1;delay_ms(30);}} 
15E4:  DECF   10,F
15E6:  BSF    0E.5
15E8:  MOVLW  1E
15EA:  MOVWF  23
15EC:  CALL   06C4
....................          else 
15F0:  BRA    15F4
....................             {Flanco2 = 0;} 
15F2:  BCF    0E.5
....................        
....................              
....................       if(LEFT)//Si oprime Izquierda 
15F4:  BSF    F92.3
15F6:  BTFSS  F80.3
15F8:  BRA    1616
....................       {  if(Flanco3 == 0)  
15FA:  BTFSC  0E.6
15FC:  BRA    1614
....................             {Flecha=2;Flecha2=2;Flanco3 = 1;Menu=1; paso=0;delay_ms(30);}} 
15FE:  MOVLW  02
1600:  MOVWF  09
1602:  MOVWF  0B
1604:  BSF    0E.6
1606:  MOVLW  01
1608:  MOVWF  05
160A:  CLRF   0F
160C:  MOVLW  1E
160E:  MOVWF  23
1610:  CALL   06C4
....................          else 
1614:  BRA    1618
....................             {Flanco3 = 0;} 
1616:  BCF    0E.6
....................          if(Velocidad<1) 
1618:  BTFSC  10.7
161A:  BRA    1622
161C:  MOVF   10,W
161E:  SUBLW  00
1620:  BNC   1626
....................             {Velocidad=4;} 
1622:  MOVLW  04
1624:  MOVWF  10
....................          if(Velocidad>4) 
1626:  BTFSC  10.7
1628:  BRA    1634
162A:  MOVF   10,W
162C:  SUBLW  04
162E:  BC    1634
....................             {Velocidad=1;}     
1630:  MOVLW  01
1632:  MOVWF  10
....................                      
....................       if(RIGHT)// Si oprime Derecha 
1634:  BSF    F92.2
1636:  BTFSS  F80.2
1638:  BRA    1720
....................       {  if(Flanco1 == 0)  
163A:  BTFSC  0E.4
163C:  BRA    171E
....................             {Flanco1 = 1;Menu=1;paso=0; write_eeprom(5,Velocidad); 
163E:  BSF    0E.4
1640:  MOVLW  01
1642:  MOVWF  05
1644:  CLRF   0F
1646:  MOVLW  05
1648:  MOVWF  FA9
164A:  MOVFF  10,FA8
164E:  BCF    FA6.6
1650:  BCF    FA6.7
1652:  BSF    FA6.2
1654:  MOVF   FF2,W
1656:  MOVWF  00
1658:  BCF    FF2.7
165A:  MOVLB  F
165C:  MOVLW  55
165E:  MOVWF  FA7
1660:  MOVLW  AA
1662:  MOVWF  FA7
1664:  BSF    FA6.1
1666:  BTFSC  FA6.1
1668:  BRA    1666
166A:  BCF    FA6.2
166C:  MOVF   00,W
166E:  IORWF  FF2,F
....................                 
....................              if(estadomv==1) 
1670:  BTFSS  0E.2
1672:  BRA    1680
....................                {velocidades(Velocidad);} 
1674:  MOVFF  10,1E
1678:  MOVLB  0
167A:  CALL   0AAE
167E:  MOVLB  F
....................                 
....................                lcd_gotoxy(1,1); 
1680:  MOVLW  01
1682:  MOVWF  23
1684:  MOVWF  24
1686:  MOVLB  0
1688:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
168C:  MOVLW  E0
168E:  MOVWF  FF6
1690:  MOVLW  04
1692:  MOVWF  FF7
1694:  CALL   08AA
....................                lcd_gotoxy(1,2); 
1698:  MOVLW  01
169A:  MOVWF  23
169C:  MOVLW  02
169E:  MOVWF  24
16A0:  CALL   07FE
....................                printf(lcd_putc,"   Ha seleccionado  "); 
16A4:  MOVLW  F6
16A6:  MOVWF  FF6
16A8:  MOVLW  04
16AA:  MOVWF  FF7
16AC:  CALL   08AA
....................                lcd_gotoxy(1,3); 
16B0:  MOVLW  01
16B2:  MOVWF  23
16B4:  MOVLW  03
16B6:  MOVWF  24
16B8:  CALL   07FE
....................                printf(lcd_putc,"  la velocidad  %i  ",Velocidad); 
16BC:  MOVLW  0C
16BE:  MOVWF  FF6
16C0:  MOVLW  05
16C2:  MOVWF  FF7
16C4:  MOVLW  10
16C6:  MOVWF  1C
16C8:  CALL   08CA
16CC:  MOVFF  10,1C
16D0:  MOVLW  1F
16D2:  MOVWF  1D
16D4:  CALL   0910
16D8:  MOVLW  20
16DA:  MOVWF  22
16DC:  CALL   0856
16E0:  MOVLW  20
16E2:  MOVWF  22
16E4:  CALL   0856
....................                lcd_gotoxy(1,4); 
16E8:  MOVLW  01
16EA:  MOVWF  23
16EC:  MOVLW  04
16EE:  MOVWF  24
16F0:  CALL   07FE
....................                printf(lcd_putc,"                    "); 
16F4:  MOVLW  22
16F6:  MOVWF  FF6
16F8:  MOVLW  05
16FA:  MOVWF  FF7
16FC:  CALL   08AA
....................               
....................             delay_ms(500);Flecha=2;Flecha2=2;printf(lcd_putc,"\f");}} 
1700:  MOVLW  02
1702:  MOVWF  1C
1704:  MOVLW  FA
1706:  MOVWF  23
1708:  CALL   06C4
170C:  DECFSZ 1C,F
170E:  BRA    1704
1710:  MOVLW  02
1712:  MOVWF  09
1714:  MOVWF  0B
1716:  MOVLW  0C
1718:  MOVWF  22
171A:  CALL   0856
....................          else 
171E:  BRA    1722
....................             {Flanco1 = 0;}    
1720:  BCF    0E.4
....................  
....................         lcd_gotoxy(6,Flecha);// Para mostrar la flecha de seleccion 
1722:  MOVLW  06
1724:  MOVWF  23
1726:  MOVFF  09,24
172A:  CALL   07FE
....................         lcd_putc(t[0]); 
172E:  MOVFF  11,22
1732:  CALL   0856
....................          
....................    }       
.................... //----------------Fin-Menu5--------------------------------------------------------------- 
....................  
.................... //----------------Menu6--------------------------------------------------------------- 
....................    if(Menu == 6){ // Menu para Cambio de Contraseña 
1736:  MOVF   05,W
1738:  SUBLW  06
173A:  BTFSS  FD8.2
173C:  BRA    1A26
....................    lcd_gotoxy(1,1); 
173E:  MOVLW  01
1740:  MOVWF  23
1742:  MOVWF  24
1744:  CALL   07FE
....................    printf(lcd_putc,"      Ingrese       "); 
1748:  MOVLW  38
174A:  MOVWF  FF6
174C:  MOVLW  05
174E:  MOVWF  FF7
1750:  CALL   08AA
....................    lcd_gotoxy(1,2); 
1754:  MOVLW  01
1756:  MOVWF  23
1758:  MOVLW  02
175A:  MOVWF  24
175C:  CALL   07FE
....................    printf(lcd_putc," Contraseña Actual  "); 
1760:  MOVLW  4E
1762:  MOVWF  FF6
1764:  MOVLW  05
1766:  MOVWF  FF7
1768:  CALL   08AA
....................    lcd_gotoxy(1,3); 
176C:  MOVLW  01
176E:  MOVWF  23
1770:  MOVLW  03
1772:  MOVWF  24
1774:  CALL   07FE
....................    printf(lcd_putc,"    CLAVE=%i%i%i%i  ",clave[0],clave[1],clave[2],clave[3]); 
1778:  MOVLW  64
177A:  MOVWF  FF6
177C:  MOVLW  05
177E:  MOVWF  FF7
1780:  MOVLW  0A
1782:  MOVWF  1C
1784:  CALL   08CA
1788:  MOVFF  14,1C
178C:  MOVLW  1F
178E:  MOVWF  1D
1790:  CALL   0910
1794:  MOVFF  15,1C
1798:  MOVLW  1F
179A:  MOVWF  1D
179C:  CALL   0910
17A0:  MOVFF  16,1C
17A4:  MOVLW  1F
17A6:  MOVWF  1D
17A8:  CALL   0910
17AC:  MOVFF  17,1C
17B0:  MOVLW  1F
17B2:  MOVWF  1D
17B4:  CALL   0910
17B8:  MOVLW  20
17BA:  MOVWF  22
17BC:  CALL   0856
17C0:  MOVLW  20
17C2:  MOVWF  22
17C4:  CALL   0856
....................     
....................        
....................    if(UP)//Si oprime hacia arriba 
17C8:  BSF    F92.0
17CA:  BTFSS  F80.0
17CC:  BRA    17F0
....................       {  if(Flanco == 0)  
17CE:  BTFSC  0E.3
17D0:  BRA    17EE
....................             {clave[unidad-11]++;Flanco = 1;delay_ms(30);}} 
17D2:  MOVLW  0B
17D4:  SUBWF  08,W
17D6:  CLRF   03
17D8:  ADDLW  14
17DA:  MOVWF  FE9
17DC:  MOVLW  00
17DE:  ADDWFC 03,W
17E0:  MOVWF  FEA
17E2:  INCF   FEF,F
17E4:  BSF    0E.3
17E6:  MOVLW  1E
17E8:  MOVWF  23
17EA:  CALL   06C4
....................          else 
17EE:  BRA    17F2
....................             {Flanco = 0;} 
17F0:  BCF    0E.3
....................              
....................       if(DOWN)//Si oprime hacia abajo 
17F2:  BSF    F92.1
17F4:  BTFSS  F80.1
17F6:  BRA    181A
....................       {  if(Flanco2 == 0)  
17F8:  BTFSC  0E.5
17FA:  BRA    1818
....................             {clave[unidad-11]--;Flanco2 = 1;delay_ms(30);}} 
17FC:  MOVLW  0B
17FE:  SUBWF  08,W
1800:  CLRF   03
1802:  ADDLW  14
1804:  MOVWF  FE9
1806:  MOVLW  00
1808:  ADDWFC 03,W
180A:  MOVWF  FEA
180C:  DECF   FEF,F
180E:  BSF    0E.5
1810:  MOVLW  1E
1812:  MOVWF  23
1814:  CALL   06C4
....................          else 
1818:  BRA    181C
....................             {Flanco2 = 0;} 
181A:  BCF    0E.5
....................     
....................       if(RIGHT)// Si oprime derecha 
181C:  BSF    F92.2
181E:  BTFSS  F80.2
1820:  BRA    183C
....................       {  if(Flanco1 == 0)  
1822:  BTFSC  0E.4
1824:  BRA    183A
....................             {Flanco1 = 1;unidad++;delay_ms(30);printf(lcd_putc,"\f");}} 
1826:  BSF    0E.4
1828:  INCF   08,F
182A:  MOVLW  1E
182C:  MOVWF  23
182E:  CALL   06C4
1832:  MOVLW  0C
1834:  MOVWF  22
1836:  CALL   0856
....................          else 
183A:  BRA    183E
....................             {Flanco1 = 0;}    
183C:  BCF    0E.4
....................              
....................        if(LEFT)// Si oprime Izquierda 
183E:  BSF    F92.3
1840:  BTFSS  F80.3
1842:  BRA    185E
....................       {  if(Flanco3 == 0)  
1844:  BTFSC  0E.6
1846:  BRA    185C
....................             {Flanco3 = 1;unidad--;delay_ms(30);printf(lcd_putc,"\f");}} 
1848:  BSF    0E.6
184A:  DECF   08,F
184C:  MOVLW  1E
184E:  MOVWF  23
1850:  CALL   06C4
1854:  MOVLW  0C
1856:  MOVWF  22
1858:  CALL   0856
....................          else 
185C:  BRA    1860
....................             {Flanco3 = 0;}     
185E:  BCF    0E.6
....................              
....................        if(clave[unidad-11]<0)// Si la unidad donde se encuentra ubicado el cursor es menor que 0 pasa a 9.      
1860:  MOVLW  0B
1862:  SUBWF  08,W
1864:  CLRF   03
1866:  ADDLW  14
1868:  MOVWF  FE9
186A:  MOVLW  00
186C:  ADDWFC 03,W
186E:  MOVWF  FEA
1870:  BTFSC  FEF.7
1872:  BRA    1876
1874:  BRA    188A
....................        {clave[unidad-11]=9;} 
1876:  MOVLW  0B
1878:  SUBWF  08,W
187A:  CLRF   03
187C:  ADDLW  14
187E:  MOVWF  FE9
1880:  MOVLW  00
1882:  ADDWFC 03,W
1884:  MOVWF  FEA
1886:  MOVLW  09
1888:  MOVWF  FEF
....................        if(clave[unidad-11]>9)// Si la unidad donde se encuentra ubicado el cursor es mayor que 9 pasa a 0.      
188A:  MOVLW  0B
188C:  SUBWF  08,W
188E:  CLRF   03
1890:  ADDLW  14
1892:  MOVWF  FE9
1894:  MOVLW  00
1896:  ADDWFC 03,W
1898:  MOVWF  FEA
189A:  BTFSC  FEF.7
189C:  BRA    18B6
189E:  MOVF   FEF,W
18A0:  SUBLW  09
18A2:  BC    18B6
....................        {clave[unidad-11]=0;} 
18A4:  MOVLW  0B
18A6:  SUBWF  08,W
18A8:  CLRF   03
18AA:  ADDLW  14
18AC:  MOVWF  FE9
18AE:  MOVLW  00
18B0:  ADDWFC 03,W
18B2:  MOVWF  FEA
18B4:  CLRF   FEF
....................        if(unidad<11) 
18B6:  MOVF   08,W
18B8:  SUBLW  0A
18BA:  BNC   18CC
....................        {Menu=1;paso=0;Flecha=2;Flecha2=2;unidad=11;} 
18BC:  MOVLW  01
18BE:  MOVWF  05
18C0:  CLRF   0F
18C2:  MOVLW  02
18C4:  MOVWF  09
18C6:  MOVWF  0B
18C8:  MOVLW  0B
18CA:  MOVWF  08
....................        lcd_gotoxy(unidad,4);// Para mostrar la flecha de seleccion 
18CC:  MOVFF  08,23
18D0:  MOVLW  04
18D2:  MOVWF  24
18D4:  CALL   07FE
....................        lcd_putc(t[2]); 
18D8:  MOVFF  13,22
18DC:  CALL   0856
....................        if(unidad>14)// Si ya ingreso la contraseña muestra si es correcta o no, dependiendo si ingreso la clave correctamente. 
18E0:  MOVF   08,W
18E2:  SUBLW  0E
18E4:  BTFSC  FD8.0
18E6:  BRA    1A02
....................        { 
....................          if(clave[0]==contrasena[0]&&clave[1]==contrasena[1]&&clave[2]==contrasena[2]&&clave[3]==contrasena[3]) 
18E8:  MOVF   18,W
18EA:  SUBWF  14,W
18EC:  BNZ   1988
18EE:  MOVF   19,W
18F0:  SUBWF  15,W
18F2:  BNZ   1988
18F4:  MOVF   1A,W
18F6:  SUBWF  16,W
18F8:  BNZ   1988
18FA:  MOVF   1B,W
18FC:  SUBWF  17,W
18FE:  BNZ   1988
....................             {lcd_gotoxy(1,1); 
1900:  MOVLW  01
1902:  MOVWF  23
1904:  MOVWF  24
1906:  CALL   07FE
....................             printf(lcd_putc,"                    "); 
190A:  MOVLW  7A
190C:  MOVWF  FF6
190E:  MOVLW  05
1910:  MOVWF  FF7
1912:  CALL   08AA
....................             lcd_gotoxy(1,2); 
1916:  MOVLW  01
1918:  MOVWF  23
191A:  MOVLW  02
191C:  MOVWF  24
191E:  CALL   07FE
....................             printf(lcd_putc,"     Contraseña     "); 
1922:  MOVLW  90
1924:  MOVWF  FF6
1926:  MOVLW  05
1928:  MOVWF  FF7
192A:  CALL   08AA
....................             lcd_gotoxy(1,3); 
192E:  MOVLW  01
1930:  MOVWF  23
1932:  MOVLW  03
1934:  MOVWF  24
1936:  CALL   07FE
....................             printf(lcd_putc,"      Correcta      "); 
193A:  MOVLW  A6
193C:  MOVWF  FF6
193E:  MOVLW  05
1940:  MOVWF  FF7
1942:  CALL   08AA
....................             lcd_gotoxy(1,4); 
1946:  MOVLW  01
1948:  MOVWF  23
194A:  MOVLW  04
194C:  MOVWF  24
194E:  CALL   07FE
....................             printf(lcd_putc,"                    "); 
1952:  MOVLW  BC
1954:  MOVWF  FF6
1956:  MOVLW  05
1958:  MOVWF  FF7
195A:  CALL   08AA
....................             delay_ms(500);Menu=61;unidad=11;printf(lcd_putc,"\f"); 
195E:  MOVLW  02
1960:  MOVWF  1C
1962:  MOVLW  FA
1964:  MOVWF  23
1966:  CALL   06C4
196A:  DECFSZ 1C,F
196C:  BRA    1962
196E:  MOVLW  3D
1970:  MOVWF  05
1972:  MOVLW  0B
1974:  MOVWF  08
1976:  MOVLW  0C
1978:  MOVWF  22
197A:  CALL   0856
....................             clave[0]=0;clave[1]=0;clave[2]=0;clave[3]=0;} 
197E:  CLRF   14
1980:  CLRF   15
1982:  CLRF   16
1984:  CLRF   17
....................          else 
1986:  BRA    1A02
....................          {lcd_gotoxy(1,1); 
1988:  MOVLW  01
198A:  MOVWF  23
198C:  MOVWF  24
198E:  CALL   07FE
....................             printf(lcd_putc,"                    "); 
1992:  MOVLW  D2
1994:  MOVWF  FF6
1996:  MOVLW  05
1998:  MOVWF  FF7
199A:  CALL   08AA
....................             lcd_gotoxy(1,2); 
199E:  MOVLW  01
19A0:  MOVWF  23
19A2:  MOVLW  02
19A4:  MOVWF  24
19A6:  CALL   07FE
....................             printf(lcd_putc,"     Contraseña     "); 
19AA:  MOVLW  E8
19AC:  MOVWF  FF6
19AE:  MOVLW  05
19B0:  MOVWF  FF7
19B2:  CALL   08AA
....................             lcd_gotoxy(1,3); 
19B6:  MOVLW  01
19B8:  MOVWF  23
19BA:  MOVLW  03
19BC:  MOVWF  24
19BE:  CALL   07FE
....................             printf(lcd_putc,"     Incorrecta     "); 
19C2:  MOVLW  FE
19C4:  MOVWF  FF6
19C6:  MOVLW  05
19C8:  MOVWF  FF7
19CA:  CALL   08AA
....................             lcd_gotoxy(1,4); 
19CE:  MOVLW  01
19D0:  MOVWF  23
19D2:  MOVLW  04
19D4:  MOVWF  24
19D6:  CALL   07FE
....................             printf(lcd_putc,"                    "); 
19DA:  MOVLW  14
19DC:  MOVWF  FF6
19DE:  MOVLW  06
19E0:  MOVWF  FF7
19E2:  CALL   08AA
....................             delay_ms(500);unidad=11;printf(lcd_putc,"\f");} 
19E6:  MOVLW  02
19E8:  MOVWF  1C
19EA:  MOVLW  FA
19EC:  MOVWF  23
19EE:  CALL   06C4
19F2:  DECFSZ 1C,F
19F4:  BRA    19EA
19F6:  MOVLW  0B
19F8:  MOVWF  08
19FA:  MOVLW  0C
19FC:  MOVWF  22
19FE:  CALL   0856
....................        } 
....................                 
....................           if(unidad>11&&unidad<14) 
1A02:  MOVF   08,W
1A04:  SUBLW  0B
1A06:  BC    1A26
1A08:  MOVF   08,W
1A0A:  SUBLW  0D
1A0C:  BNC   1A26
....................           { lcd_gotoxy(unidad-1,4);// Para mostrar cursor. 
1A0E:  MOVLW  01
1A10:  SUBWF  08,W
1A12:  MOVWF  1C
1A14:  MOVWF  23
1A16:  MOVLW  04
1A18:  MOVWF  24
1A1A:  CALL   07FE
....................             lcd_putc(t[1]); 
1A1E:  MOVFF  12,22
1A22:  CALL   0856
....................           } 
....................    }       
.................... //----------------Fin-Menu6--------------------------------------------------------------- 
....................  
.................... //----------------Menu6.1--------------------------------------------------------------- 
....................    if(Menu == 61){ // Menu cuando ingresa correctamente la contraseña, permite que digite nueva contraseña. 
1A26:  MOVF   05,W
1A28:  SUBLW  3D
1A2A:  BTFSS  FD8.2
1A2C:  BRA    1D3C
....................    lcd_gotoxy(1,1); 
1A2E:  MOVLW  01
1A30:  MOVWF  23
1A32:  MOVWF  24
1A34:  CALL   07FE
....................    printf(lcd_putc,"     Ingrese        "); 
1A38:  MOVLW  2A
1A3A:  MOVWF  FF6
1A3C:  MOVLW  06
1A3E:  MOVWF  FF7
1A40:  CALL   08AA
....................    lcd_gotoxy(1,2); 
1A44:  MOVLW  01
1A46:  MOVWF  23
1A48:  MOVLW  02
1A4A:  MOVWF  24
1A4C:  CALL   07FE
....................    printf(lcd_putc,"  Contraseña Nueva  "); 
1A50:  MOVLW  40
1A52:  MOVWF  FF6
1A54:  MOVLW  06
1A56:  MOVWF  FF7
1A58:  CALL   08AA
....................    lcd_gotoxy(1,3); 
1A5C:  MOVLW  01
1A5E:  MOVWF  23
1A60:  MOVLW  03
1A62:  MOVWF  24
1A64:  CALL   07FE
....................    printf(lcd_putc,"    CLAVE=%i%i%i%i  ",clave[0],clave[1],clave[2],clave[3]); 
1A68:  MOVLW  56
1A6A:  MOVWF  FF6
1A6C:  MOVLW  06
1A6E:  MOVWF  FF7
1A70:  MOVLW  0A
1A72:  MOVWF  1C
1A74:  CALL   08CA
1A78:  MOVFF  14,1C
1A7C:  MOVLW  1F
1A7E:  MOVWF  1D
1A80:  CALL   0910
1A84:  MOVFF  15,1C
1A88:  MOVLW  1F
1A8A:  MOVWF  1D
1A8C:  CALL   0910
1A90:  MOVFF  16,1C
1A94:  MOVLW  1F
1A96:  MOVWF  1D
1A98:  CALL   0910
1A9C:  MOVFF  17,1C
1AA0:  MOVLW  1F
1AA2:  MOVWF  1D
1AA4:  CALL   0910
1AA8:  MOVLW  20
1AAA:  MOVWF  22
1AAC:  CALL   0856
1AB0:  MOVLW  20
1AB2:  MOVWF  22
1AB4:  CALL   0856
....................     
....................        
....................    if(UP)//Si oprime hacia arriba 
1AB8:  BSF    F92.0
1ABA:  BTFSS  F80.0
1ABC:  BRA    1AE0
....................       {  if(Flanco == 0)  
1ABE:  BTFSC  0E.3
1AC0:  BRA    1ADE
....................             {clave[unidad-11]++;Flanco = 1;delay_ms(30);}} 
1AC2:  MOVLW  0B
1AC4:  SUBWF  08,W
1AC6:  CLRF   03
1AC8:  ADDLW  14
1ACA:  MOVWF  FE9
1ACC:  MOVLW  00
1ACE:  ADDWFC 03,W
1AD0:  MOVWF  FEA
1AD2:  INCF   FEF,F
1AD4:  BSF    0E.3
1AD6:  MOVLW  1E
1AD8:  MOVWF  23
1ADA:  CALL   06C4
....................          else 
1ADE:  BRA    1AE2
....................             {Flanco = 0;} 
1AE0:  BCF    0E.3
....................              
....................       if(DOWN)//Si oprime hacia abajo 
1AE2:  BSF    F92.1
1AE4:  BTFSS  F80.1
1AE6:  BRA    1B0A
....................       {  if(Flanco2 == 0)  
1AE8:  BTFSC  0E.5
1AEA:  BRA    1B08
....................             {clave[unidad-11]--;Flanco2 = 1;delay_ms(30);}} 
1AEC:  MOVLW  0B
1AEE:  SUBWF  08,W
1AF0:  CLRF   03
1AF2:  ADDLW  14
1AF4:  MOVWF  FE9
1AF6:  MOVLW  00
1AF8:  ADDWFC 03,W
1AFA:  MOVWF  FEA
1AFC:  DECF   FEF,F
1AFE:  BSF    0E.5
1B00:  MOVLW  1E
1B02:  MOVWF  23
1B04:  CALL   06C4
....................          else 
1B08:  BRA    1B0C
....................             {Flanco2 = 0;} 
1B0A:  BCF    0E.5
....................     
....................       if(RIGHT)// Si oprime Derecha 
1B0C:  BSF    F92.2
1B0E:  BTFSS  F80.2
1B10:  BRA    1B2C
....................       {  if(Flanco1 == 0)  
1B12:  BTFSC  0E.4
1B14:  BRA    1B2A
....................             {Flanco1 = 1;unidad++;delay_ms(30);printf(lcd_putc,"\f");}} 
1B16:  BSF    0E.4
1B18:  INCF   08,F
1B1A:  MOVLW  1E
1B1C:  MOVWF  23
1B1E:  CALL   06C4
1B22:  MOVLW  0C
1B24:  MOVWF  22
1B26:  CALL   0856
....................          else 
1B2A:  BRA    1B2E
....................             {Flanco1 = 0;}    
1B2C:  BCF    0E.4
....................              
....................        if(LEFT)// Si oprime Izquierda 
1B2E:  BSF    F92.3
1B30:  BTFSS  F80.3
1B32:  BRA    1B4E
....................       {  if(Flanco3 == 0)  
1B34:  BTFSC  0E.6
1B36:  BRA    1B4C
....................             {Flanco3 = 1;unidad--;delay_ms(30);printf(lcd_putc,"\f");}} 
1B38:  BSF    0E.6
1B3A:  DECF   08,F
1B3C:  MOVLW  1E
1B3E:  MOVWF  23
1B40:  CALL   06C4
1B44:  MOVLW  0C
1B46:  MOVWF  22
1B48:  CALL   0856
....................          else 
1B4C:  BRA    1B50
....................             {Flanco3 = 0;}     
1B4E:  BCF    0E.6
....................              
....................        if(clave[unidad-11]<0)// Si la unidad donde se encuentra ubicado el cursor es menor que 0 pasa a 9.      
1B50:  MOVLW  0B
1B52:  SUBWF  08,W
1B54:  CLRF   03
1B56:  ADDLW  14
1B58:  MOVWF  FE9
1B5A:  MOVLW  00
1B5C:  ADDWFC 03,W
1B5E:  MOVWF  FEA
1B60:  BTFSC  FEF.7
1B62:  BRA    1B66
1B64:  BRA    1B7A
....................        {clave[unidad-11]=9;} 
1B66:  MOVLW  0B
1B68:  SUBWF  08,W
1B6A:  CLRF   03
1B6C:  ADDLW  14
1B6E:  MOVWF  FE9
1B70:  MOVLW  00
1B72:  ADDWFC 03,W
1B74:  MOVWF  FEA
1B76:  MOVLW  09
1B78:  MOVWF  FEF
....................        if(clave[unidad-11]>9)// Si la unidad donde se encuentra ubicado el cursor es mayor que 9 pasa a 0.      
1B7A:  MOVLW  0B
1B7C:  SUBWF  08,W
1B7E:  CLRF   03
1B80:  ADDLW  14
1B82:  MOVWF  FE9
1B84:  MOVLW  00
1B86:  ADDWFC 03,W
1B88:  MOVWF  FEA
1B8A:  BTFSC  FEF.7
1B8C:  BRA    1BA6
1B8E:  MOVF   FEF,W
1B90:  SUBLW  09
1B92:  BC    1BA6
....................        {clave[unidad-11]=0;} 
1B94:  MOVLW  0B
1B96:  SUBWF  08,W
1B98:  CLRF   03
1B9A:  ADDLW  14
1B9C:  MOVWF  FE9
1B9E:  MOVLW  00
1BA0:  ADDWFC 03,W
1BA2:  MOVWF  FEA
1BA4:  CLRF   FEF
....................        if(unidad<11) 
1BA6:  MOVF   08,W
1BA8:  SUBLW  0A
1BAA:  BNC   1BB4
....................        {Menu=5;unidad=11;} 
1BAC:  MOVLW  05
1BAE:  MOVWF  05
1BB0:  MOVLW  0B
1BB2:  MOVWF  08
....................        lcd_gotoxy(unidad,4);// Para mostrar la flecha de seleccion 
1BB4:  MOVFF  08,23
1BB8:  MOVLW  04
1BBA:  MOVWF  24
1BBC:  CALL   07FE
....................        lcd_putc(t[2]); 
1BC0:  MOVFF  13,22
1BC4:  CALL   0856
....................        if(unidad>14)// Si ya ingreso la nueva contraseña. 
1BC8:  MOVF   08,W
1BCA:  SUBLW  0E
1BCC:  BTFSC  FD8.0
1BCE:  BRA    1D18
....................        { 
....................             lcd_gotoxy(1,1); 
1BD0:  MOVLW  01
1BD2:  MOVWF  23
1BD4:  MOVWF  24
1BD6:  CALL   07FE
....................             printf(lcd_putc,"                    "); 
1BDA:  MOVLW  6C
1BDC:  MOVWF  FF6
1BDE:  MOVLW  06
1BE0:  MOVWF  FF7
1BE2:  CALL   08AA
....................             lcd_gotoxy(1,2); 
1BE6:  MOVLW  01
1BE8:  MOVWF  23
1BEA:  MOVLW  02
1BEC:  MOVWF  24
1BEE:  CALL   07FE
....................             printf(lcd_putc,"     Contraseña     "); 
1BF2:  MOVLW  82
1BF4:  MOVWF  FF6
1BF6:  MOVLW  06
1BF8:  MOVWF  FF7
1BFA:  CALL   08AA
....................             lcd_gotoxy(1,3); 
1BFE:  MOVLW  01
1C00:  MOVWF  23
1C02:  MOVLW  03
1C04:  MOVWF  24
1C06:  CALL   07FE
....................             printf(lcd_putc,"     Almacenada     "); 
1C0A:  MOVLW  98
1C0C:  MOVWF  FF6
1C0E:  MOVLW  06
1C10:  MOVWF  FF7
1C12:  CALL   08AA
....................             lcd_gotoxy(1,4); 
1C16:  MOVLW  01
1C18:  MOVWF  23
1C1A:  MOVLW  04
1C1C:  MOVWF  24
1C1E:  CALL   07FE
....................             printf(lcd_putc,"                    "); 
1C22:  MOVLW  AE
1C24:  MOVWF  FF6
1C26:  MOVLW  06
1C28:  MOVWF  FF7
1C2A:  CALL   08AA
....................             write_eeprom(0,clave[0]);delay_ms(20);write_eeprom(1,clave[1]);delay_ms(20); 
1C2E:  CLRF   FA9
1C30:  MOVFF  14,FA8
1C34:  BCF    FA6.6
1C36:  BCF    FA6.7
1C38:  BSF    FA6.2
1C3A:  MOVF   FF2,W
1C3C:  MOVWF  00
1C3E:  BCF    FF2.7
1C40:  MOVLB  F
1C42:  MOVLW  55
1C44:  MOVWF  FA7
1C46:  MOVLW  AA
1C48:  MOVWF  FA7
1C4A:  BSF    FA6.1
1C4C:  BTFSC  FA6.1
1C4E:  BRA    1C4C
1C50:  BCF    FA6.2
1C52:  MOVF   00,W
1C54:  IORWF  FF2,F
1C56:  MOVLW  14
1C58:  MOVWF  23
1C5A:  MOVLB  0
1C5C:  CALL   06C4
1C60:  MOVLW  01
1C62:  MOVWF  FA9
1C64:  MOVFF  15,FA8
1C68:  BCF    FA6.6
1C6A:  BCF    FA6.7
1C6C:  BSF    FA6.2
1C6E:  MOVF   FF2,W
1C70:  MOVWF  00
1C72:  BCF    FF2.7
1C74:  MOVLB  F
1C76:  MOVLW  55
1C78:  MOVWF  FA7
1C7A:  MOVLW  AA
1C7C:  MOVWF  FA7
1C7E:  BSF    FA6.1
1C80:  BTFSC  FA6.1
1C82:  BRA    1C80
1C84:  BCF    FA6.2
1C86:  MOVF   00,W
1C88:  IORWF  FF2,F
1C8A:  MOVLW  14
1C8C:  MOVWF  23
1C8E:  MOVLB  0
1C90:  CALL   06C4
....................             write_eeprom(2,clave[2]);delay_ms(20);write_eeprom(3,clave[3]);delay_ms(20); 
1C94:  MOVLW  02
1C96:  MOVWF  FA9
1C98:  MOVFF  16,FA8
1C9C:  BCF    FA6.6
1C9E:  BCF    FA6.7
1CA0:  BSF    FA6.2
1CA2:  MOVF   FF2,W
1CA4:  MOVWF  00
1CA6:  BCF    FF2.7
1CA8:  MOVLB  F
1CAA:  MOVLW  55
1CAC:  MOVWF  FA7
1CAE:  MOVLW  AA
1CB0:  MOVWF  FA7
1CB2:  BSF    FA6.1
1CB4:  BTFSC  FA6.1
1CB6:  BRA    1CB4
1CB8:  BCF    FA6.2
1CBA:  MOVF   00,W
1CBC:  IORWF  FF2,F
1CBE:  MOVLW  14
1CC0:  MOVWF  23
1CC2:  MOVLB  0
1CC4:  CALL   06C4
1CC8:  MOVLW  03
1CCA:  MOVWF  FA9
1CCC:  MOVFF  17,FA8
1CD0:  BCF    FA6.6
1CD2:  BCF    FA6.7
1CD4:  BSF    FA6.2
1CD6:  MOVF   FF2,W
1CD8:  MOVWF  00
1CDA:  BCF    FF2.7
1CDC:  MOVLB  F
1CDE:  MOVLW  55
1CE0:  MOVWF  FA7
1CE2:  MOVLW  AA
1CE4:  MOVWF  FA7
1CE6:  BSF    FA6.1
1CE8:  BTFSC  FA6.1
1CEA:  BRA    1CE8
1CEC:  BCF    FA6.2
1CEE:  MOVF   00,W
1CF0:  IORWF  FF2,F
1CF2:  MOVLW  14
1CF4:  MOVWF  23
1CF6:  MOVLB  0
1CF8:  CALL   06C4
....................             delay_ms(500);Menu=1;paso=0;Flecha=2;Flecha2=2; 
1CFC:  MOVLW  02
1CFE:  MOVWF  1C
1D00:  MOVLW  FA
1D02:  MOVWF  23
1D04:  CALL   06C4
1D08:  DECFSZ 1C,F
1D0A:  BRA    1D00
1D0C:  MOVLW  01
1D0E:  MOVWF  05
1D10:  CLRF   0F
1D12:  MOVLW  02
1D14:  MOVWF  09
1D16:  MOVWF  0B
....................        } 
....................        
....................            if(unidad>11&&unidad<14) 
1D18:  MOVF   08,W
1D1A:  SUBLW  0B
1D1C:  BC    1D3C
1D1E:  MOVF   08,W
1D20:  SUBLW  0D
1D22:  BNC   1D3C
....................           { lcd_gotoxy(unidad-1,4);// Para mostrar cursor. 
1D24:  MOVLW  01
1D26:  SUBWF  08,W
1D28:  MOVWF  1C
1D2A:  MOVWF  23
1D2C:  MOVLW  04
1D2E:  MOVWF  24
1D30:  CALL   07FE
....................             lcd_putc(t[1]); 
1D34:  MOVFF  12,22
1D38:  CALL   0856
....................           } 
....................    }       
.................... //----------------Fin-Menu6.1--------------------------------------------------------------- 
....................    } 
1D3C:  GOTO   0C74
.................... } 
....................  
1D40:  SLEEP 

Configuration Fuses:
   Word  1: CE20   IESO FCMEN HSPLL PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
